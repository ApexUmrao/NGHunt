
/**
 * ModCustomerInfoStub.java
 *
 * This file was auto-generated from WSDL
 * by the Apache Axis2 version: 1.6.2  Built on : Apr 17, 2012 (05:33:49 IST)
 */
        package com.newgen.dscop.stub;

        

        /*
        *  ModCustomerInfoStub java implementation
        */

        
        public class ModCustomerInfoStub extends org.apache.axis2.client.Stub
        {
        protected org.apache.axis2.description.AxisOperation[] _operations;

        //hashmaps to keep the fault mapping
        private java.util.HashMap faultExceptionNameMap = new java.util.HashMap();
        private java.util.HashMap faultExceptionClassNameMap = new java.util.HashMap();
        private java.util.HashMap faultMessageMap = new java.util.HashMap();

        private static int counter = 0;
        public String resMod_Cust_msg=null;
        private static synchronized java.lang.String getUniqueSuffix(){
            // reset the counter if it is greater than 99999
            if (counter > 99999){
                counter = 0;
            }
            counter = counter + 1; 
            return java.lang.Long.toString(java.lang.System.currentTimeMillis()) + "_" + counter;
        }

    
    private void populateAxisService() throws org.apache.axis2.AxisFault {

     //creating the Service with a unique name
     _service = new org.apache.axis2.description.AxisService("ModCustomerInfo" + getUniqueSuffix());
     addAnonymousOperations();

        //creating the operations
        org.apache.axis2.description.AxisOperation __operation;

        _operations = new org.apache.axis2.description.AxisOperation[1];
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://xmlns.example.com/1373883378085", "modCustomerInfo_Oper"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[0]=__operation;
            
        
        }

    //populates the faults
    private void populateFaults(){
         


    }

    /**
      *Constructor that takes in a configContext
      */

    public ModCustomerInfoStub(org.apache.axis2.context.ConfigurationContext configurationContext,
       java.lang.String targetEndpoint)
       throws org.apache.axis2.AxisFault {
         this(configurationContext,targetEndpoint,false);
   }

  
   /**
     * Constructor that takes in a configContext  and useseperate listner
     */
   public ModCustomerInfoStub(org.apache.axis2.context.ConfigurationContext configurationContext,
        java.lang.String targetEndpoint, boolean useSeparateListener)
        throws org.apache.axis2.AxisFault {
         //To populate AxisService
         populateAxisService();
         populateFaults();

        _serviceClient = new org.apache.axis2.client.ServiceClient(configurationContext,_service);
        
	
        _serviceClient.getOptions().setTo(new org.apache.axis2.addressing.EndpointReference(
                targetEndpoint));
        _serviceClient.getOptions().setUseSeparateListener(useSeparateListener);
        
    
    }

    /**
     * Default Constructor
     */
    public ModCustomerInfoStub(org.apache.axis2.context.ConfigurationContext configurationContext) throws org.apache.axis2.AxisFault {
        
                    this(configurationContext,"http://10.101.107.25:5528/Services/EnterpriseServicesMaintenance/ENTMaintenanceServices/WSDL/ModCustomerInfo.serviceagent/ModCustomerInfoPortTypeEndpoint0" );
                
    }

    /**
     * Default Constructor
     */
    public ModCustomerInfoStub() throws org.apache.axis2.AxisFault {
        
                    this("http://10.101.107.25:5528/Services/EnterpriseServicesMaintenance/ENTMaintenanceServices/WSDL/ModCustomerInfo.serviceagent/ModCustomerInfoPortTypeEndpoint0" );
                
    }

    public  String  getinputXML(com.newgen.dscop.stub.ModCustomerInfoStub.ModCustomerInfoReqMsg modCustomerInfoReqMsg0) throws java.rmi.RemoteException
    {
		org.apache.axis2.context.MessageContext _messageContext = null;
		try
		{
			org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[0].getName());
			_operationClient.getOptions().setAction("/Services/EnterpriseServicesMaintenance/ENTMaintenanceServices/WSDL/ModCustomerInfo.serviceagent/ModCustomerInfoPortTypeEndpoint0/ModCustomerInfo_Oper");
			_operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);
			
			addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
		
			// create a message context
			_messageContext = new org.apache.axis2.context.MessageContext();
			
			// create SOAP envelope with that payload
			org.apache.axiom.soap.SOAPEnvelope env = null;
                                    
            env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                    modCustomerInfoReqMsg0,
                                    optimizeContent(new javax.xml.namespace.QName("http://xmlns.example.com/1373883378085",
                                    "modCustomerInfo_Oper")), new javax.xml.namespace.QName("http://xmlns.example.com/1373883378085",
                                    "modCustomerInfo_Oper"));
                                
			//adding SOAP soap_headers
			_serviceClient.addHeadersToEnvelope(env);
			return env.toString();			                   
		}
		catch(org.apache.axis2.AxisFault f)
		{
			return "";
		} 
		finally 
		{

		}
    }
    
    /**
     * Constructor taking the target endpoint
     */
    public ModCustomerInfoStub(java.lang.String targetEndpoint) throws org.apache.axis2.AxisFault {
        this(null,targetEndpoint);
    }



        
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.newgen.dscop.stub.ModCustomerInfo#modCustomerInfo_Oper
                     * @param modCustomerInfoReqMsg0
                    
                     */

                    

                            public  com.newgen.dscop.stub.ModCustomerInfoStub.ModCustomerInfoResMsg modCustomerInfo_Oper(

                            com.newgen.dscop.stub.ModCustomerInfoStub.ModCustomerInfoReqMsg modCustomerInfoReqMsg0)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[0].getName());
              _operationClient.getOptions().setAction("/Services/EnterpriseServicesMaintenance/ENTMaintenanceServices/WSDL/ModCustomerInfo.serviceagent/ModCustomerInfoPortTypeEndpoint0/ModCustomerInfo_Oper");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    modCustomerInfoReqMsg0,
                                                    optimizeContent(new javax.xml.namespace.QName("http://xmlns.example.com/1373883378085",
                                                    "modCustomerInfo_Oper")), new javax.xml.namespace.QName("http://xmlns.example.com/1373883378085",
                                                    "modCustomerInfo_Oper"));
                                                
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                resMod_Cust_msg=_returnEnv.toString();
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.newgen.dscop.stub.ModCustomerInfoStub.ModCustomerInfoResMsg.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.newgen.dscop.stub.ModCustomerInfoStub.ModCustomerInfoResMsg)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ModCustomerInfo_Oper"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ModCustomerInfo_Oper"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ModCustomerInfo_Oper"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.newgen.dscop.stub.ModCustomerInfo#startmodCustomerInfo_Oper
                    * @param modCustomerInfoReqMsg0
                
                */
                public  void startmodCustomerInfo_Oper(

                 com.newgen.dscop.stub.ModCustomerInfoStub.ModCustomerInfoReqMsg modCustomerInfoReqMsg0,

                  final com.newgen.dscop.stub.ModCustomerInfoCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[0].getName());
             _operationClient.getOptions().setAction("/Services/EnterpriseServicesMaintenance/ENTMaintenanceServices/WSDL/ModCustomerInfo.serviceagent/ModCustomerInfoPortTypeEndpoint0/ModCustomerInfo_Oper");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    modCustomerInfoReqMsg0,
                                                    optimizeContent(new javax.xml.namespace.QName("http://xmlns.example.com/1373883378085",
                                                    "modCustomerInfo_Oper")), new javax.xml.namespace.QName("http://xmlns.example.com/1373883378085",
                                                    "modCustomerInfo_Oper"));
                                                
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.newgen.dscop.stub.ModCustomerInfoStub.ModCustomerInfoResMsg.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultmodCustomerInfo_Oper(
                                        (com.newgen.dscop.stub.ModCustomerInfoStub.ModCustomerInfoResMsg)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrormodCustomerInfo_Oper(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ModCustomerInfo_Oper"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ModCustomerInfo_Oper"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ModCustomerInfo_Oper"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrormodCustomerInfo_Oper(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrormodCustomerInfo_Oper(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrormodCustomerInfo_Oper(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrormodCustomerInfo_Oper(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrormodCustomerInfo_Oper(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrormodCustomerInfo_Oper(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrormodCustomerInfo_Oper(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrormodCustomerInfo_Oper(f);
                                            }
									    } else {
										    callback.receiveErrormodCustomerInfo_Oper(f);
									    }
									} else {
									    callback.receiveErrormodCustomerInfo_Oper(f);
									}
								} else {
								    callback.receiveErrormodCustomerInfo_Oper(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrormodCustomerInfo_Oper(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[0].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[0].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                


       /**
        *  A utility method that copies the namepaces from the SOAPEnvelope
        */
       private java.util.Map getEnvelopeNamespaces(org.apache.axiom.soap.SOAPEnvelope env){
        java.util.Map returnMap = new java.util.HashMap();
        java.util.Iterator namespaceIterator = env.getAllDeclaredNamespaces();
        while (namespaceIterator.hasNext()) {
            org.apache.axiom.om.OMNamespace ns = (org.apache.axiom.om.OMNamespace) namespaceIterator.next();
            returnMap.put(ns.getPrefix(),ns.getNamespaceURI());
        }
       return returnMap;
    }

    
    
    private javax.xml.namespace.QName[] opNameArray = null;
    private boolean optimizeContent(javax.xml.namespace.QName opName) {
        

        if (opNameArray == null) {
            return false;
        }
        for (int i = 0; i < opNameArray.length; i++) {
            if (opName.equals(opNameArray[i])) {
                return true;   
            }
        }
        return false;
    }
     //http://10.101.107.25:5528/Services/EnterpriseServicesMaintenance/ENTMaintenanceServices/WSDL/ModCustomerInfo.serviceagent/ModCustomerInfoPortTypeEndpoint0
        public static class ModCustomerInfoReq
        implements org.apache.axis2.databinding.ADBBean{
        
                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                "ModCustomerInfoReq",
                "ns3");

            

                        /**
                        * field for ModCustomerInfoReq
                        */

                        
                                    protected ModCustomerInfoReq_type0 localModCustomerInfoReq ;
                                

                           /**
                           * Auto generated getter method
                           * @return ModCustomerInfoReq_type0
                           */
                           public  ModCustomerInfoReq_type0 getModCustomerInfoReq(){
                               return localModCustomerInfoReq;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ModCustomerInfoReq
                               */
                               public void setModCustomerInfoReq(ModCustomerInfoReq_type0 param){
                            
                                            this.localModCustomerInfoReq=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
               return factory.createOMElement(dataSource,MY_QNAME);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                
                //We can safely assume an element has only one type associated with it
                
                                 if (localModCustomerInfoReq==null){
                                   throw new org.apache.axis2.databinding.ADBException("ModCustomerInfoReq cannot be null!");
                                 }
                                 localModCustomerInfoReq.serialize(MY_QNAME,xmlWriter);
                            

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd")){
                return "ns3";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                
                //We can safely assume an element has only one type associated with it
                return localModCustomerInfoReq.getPullParser(MY_QNAME);

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static ModCustomerInfoReq parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            ModCustomerInfoReq object =
                new ModCustomerInfoReq();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                   
                while(!reader.isEndElement()) {
                    if (reader.isStartElement() ){
                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","ModCustomerInfoReq").equals(reader.getName())){
                                
                                                object.setModCustomerInfoReq(ModCustomerInfoReq_type0.Factory.parse(reader));
                                            
                              }  // End of if for expected property start element
                                
                             else{
                                        // A start element we are not expecting indicates an invalid parameter was passed
                                        throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                             }
                          
                             } else {
                                reader.next();
                             }  
                           }  // end of while loop
                        



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class ModCustomerInfoRes
        implements org.apache.axis2.databinding.ADBBean{
        
                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                "ModCustomerInfoRes",
                "ns3");

            

                        /**
                        * field for ModCustomerInfoRes
                        */

                        
                                    protected ModCustomerInfoRes_type0 localModCustomerInfoRes ;
                                

                           /**
                           * Auto generated getter method
                           * @return ModCustomerInfoRes_type0
                           */
                           public  ModCustomerInfoRes_type0 getModCustomerInfoRes(){
                               return localModCustomerInfoRes;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ModCustomerInfoRes
                               */
                               public void setModCustomerInfoRes(ModCustomerInfoRes_type0 param){
                            
                                            this.localModCustomerInfoRes=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
               return factory.createOMElement(dataSource,MY_QNAME);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                
                //We can safely assume an element has only one type associated with it
                
                                 if (localModCustomerInfoRes==null){
                                   throw new org.apache.axis2.databinding.ADBException("ModCustomerInfoRes cannot be null!");
                                 }
                                 localModCustomerInfoRes.serialize(MY_QNAME,xmlWriter);
                            

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd")){
                return "ns3";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                
                //We can safely assume an element has only one type associated with it
                return localModCustomerInfoRes.getPullParser(MY_QNAME);

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static ModCustomerInfoRes parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            ModCustomerInfoRes object =
                new ModCustomerInfoRes();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                   
                while(!reader.isEndElement()) {
                    if (reader.isStartElement() ){
                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","ModCustomerInfoRes").equals(reader.getName())){
                                
                                                object.setModCustomerInfoRes(ModCustomerInfoRes_type0.Factory.parse(reader));
                                            
                              }  // End of if for expected property start element
                                
                             else{
                                        // A start element we are not expecting indicates an invalid parameter was passed
                                        throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                             }
                          
                             } else {
                                reader.next();
                             }  
                           }  // end of while loop
                        



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class AdditionalIncome_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = additionalIncome_type0
                Namespace URI = http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd
                Namespace Prefix = ns3
                */
            

                        /**
                        * field for AddSourcIncome
                        */

                        
                                    protected java.lang.String localAddSourcIncome ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAddSourcIncomeTracker = false ;

                           public boolean isAddSourcIncomeSpecified(){
                               return localAddSourcIncomeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAddSourcIncome(){
                               return localAddSourcIncome;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AddSourcIncome
                               */
                               public void setAddSourcIncome(java.lang.String param){
                            localAddSourcIncomeTracker = param != null;
                                   
                                            this.localAddSourcIncome=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":additionalIncome_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "additionalIncome_type0",
                           xmlWriter);
                   }

               
                   }
                if (localAddSourcIncomeTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "addSourcIncome", xmlWriter);
                             

                                          if (localAddSourcIncome==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("addSourcIncome cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAddSourcIncome);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd")){
                return "ns3";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localAddSourcIncomeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "addSourcIncome"));
                                 
                                        if (localAddSourcIncome != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAddSourcIncome));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("addSourcIncome cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static AdditionalIncome_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            AdditionalIncome_type0 object =
                new AdditionalIncome_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"additionalIncome_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (AdditionalIncome_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","addSourcIncome").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"addSourcIncome" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAddSourcIncome(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class CustomerCBRCodes_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = customerCBRCodes_type0
                Namespace URI = http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd
                Namespace Prefix = ns3
                */
            

                        /**
                        * field for CBRCodes
                        * This was an Array!
                        */

                        
                                    protected CBRCodes_type0[] localCBRCodes ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCBRCodesTracker = false ;

                           public boolean isCBRCodesSpecified(){
                               return localCBRCodesTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return CBRCodes_type0[]
                           */
                           public  CBRCodes_type0[] getCBRCodes(){
                               return localCBRCodes;
                           }

                           
                        


                               
                              /**
                               * validate the array for CBRCodes
                               */
                              protected void validateCBRCodes(CBRCodes_type0[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param CBRCodes
                              */
                              public void setCBRCodes(CBRCodes_type0[] param){
                              
                                   validateCBRCodes(param);

                               localCBRCodesTracker = param != null;
                                      
                                      this.localCBRCodes=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param CBRCodes_type0
                             */
                             public void addCBRCodes(CBRCodes_type0 param){
                                   if (localCBRCodes == null){
                                   localCBRCodes = new CBRCodes_type0[]{};
                                   }

                            
                                 //update the setting tracker
                                localCBRCodesTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localCBRCodes);
                               list.add(param);
                               this.localCBRCodes =
                             (CBRCodes_type0[])list.toArray(
                            new CBRCodes_type0[list.size()]);

                             }
                             

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":customerCBRCodes_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "customerCBRCodes_type0",
                           xmlWriter);
                   }

               
                   }
                if (localCBRCodesTracker){
                                       if (localCBRCodes!=null){
                                            for (int i = 0;i < localCBRCodes.length;i++){
                                                if (localCBRCodes[i] != null){
                                                 localCBRCodes[i].serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","CBRCodes"),
                                                           xmlWriter);
                                                } else {
                                                   
                                                        // we don't have to do any thing since minOccures is zero
                                                    
                                                }

                                            }
                                     } else {
                                        
                                               throw new org.apache.axis2.databinding.ADBException("CBRCodes cannot be null!!");
                                        
                                    }
                                 }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd")){
                return "ns3";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localCBRCodesTracker){
                             if (localCBRCodes!=null) {
                                 for (int i = 0;i < localCBRCodes.length;i++){

                                    if (localCBRCodes[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                          "CBRCodes"));
                                         elementList.add(localCBRCodes[i]);
                                    } else {
                                        
                                                // nothing to do
                                            
                                    }

                                 }
                             } else {
                                 
                                        throw new org.apache.axis2.databinding.ADBException("CBRCodes cannot be null!!");
                                    
                             }

                        }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static CustomerCBRCodes_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            CustomerCBRCodes_type0 object =
                new CustomerCBRCodes_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"customerCBRCodes_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (CustomerCBRCodes_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                        java.util.ArrayList list1 = new java.util.ArrayList();
                    
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","CBRCodes").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    list1.add(CBRCodes_type0.Factory.parse(reader));
                                                                
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone1 = false;
                                                        while(!loopDone1){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone1 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","CBRCodes").equals(reader.getName())){
                                                                    list1.add(CBRCodes_type0.Factory.parse(reader));
                                                                        
                                                                }else{
                                                                    loopDone1 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array
                                                        
                                                        object.setCBRCodes((CBRCodes_type0[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                CBRCodes_type0.class,
                                                                list1));
                                                            
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class CustomerAdditionalDetails_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = customerAdditionalDetails_type0
                Namespace URI = http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd
                Namespace Prefix = ns3
                */
            

                        /**
                        * field for CustOccupation
                        */

                        
                                    protected java.lang.String localCustOccupation ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustOccupationTracker = false ;

                           public boolean isCustOccupationSpecified(){
                               return localCustOccupationTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustOccupation(){
                               return localCustOccupation;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustOccupation
                               */
                               public void setCustOccupation(java.lang.String param){
                            localCustOccupationTracker = param != null;
                                   
                                            this.localCustOccupation=param;
                                    

                               }
                            

                        /**
                        * field for CustOccupationCategory
                        */

                        
                                    protected java.lang.String localCustOccupationCategory ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustOccupationCategoryTracker = false ;

                           public boolean isCustOccupationCategorySpecified(){
                               return localCustOccupationCategoryTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustOccupationCategory(){
                               return localCustOccupationCategory;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustOccupationCategory
                               */
                               public void setCustOccupationCategory(java.lang.String param){
                            localCustOccupationCategoryTracker = param != null;
                                   
                                            this.localCustOccupationCategory=param;
                                    

                               }
                            

                        /**
                        * field for CustDesignation
                        */

                        
                                    protected java.lang.String localCustDesignation ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustDesignationTracker = false ;

                           public boolean isCustDesignationSpecified(){
                               return localCustDesignationTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustDesignation(){
                               return localCustDesignation;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustDesignation
                               */
                               public void setCustDesignation(java.lang.String param){
                            localCustDesignationTracker = param != null;
                                   
                                            this.localCustDesignation=param;
                                    

                               }
                            

                        /**
                        * field for CustOccupationTenor
                        */

                        
                                    protected java.lang.String localCustOccupationTenor ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustOccupationTenorTracker = false ;

                           public boolean isCustOccupationTenorSpecified(){
                               return localCustOccupationTenorTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustOccupationTenor(){
                               return localCustOccupationTenor;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustOccupationTenor
                               */
                               public void setCustOccupationTenor(java.lang.String param){
                            localCustOccupationTenorTracker = param != null;
                                   
                                            this.localCustOccupationTenor=param;
                                    

                               }
                            

                        /**
                        * field for CustSpouseName
                        */

                        
                                    protected java.lang.String localCustSpouseName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustSpouseNameTracker = false ;

                           public boolean isCustSpouseNameSpecified(){
                               return localCustSpouseNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustSpouseName(){
                               return localCustSpouseName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustSpouseName
                               */
                               public void setCustSpouseName(java.lang.String param){
                            localCustSpouseNameTracker = param != null;
                                   
                                            this.localCustSpouseName=param;
                                    

                               }
                            

                        /**
                        * field for CustMarriageDate
                        */

                        
                                    protected java.lang.String localCustMarriageDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustMarriageDateTracker = false ;

                           public boolean isCustMarriageDateSpecified(){
                               return localCustMarriageDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustMarriageDate(){
                               return localCustMarriageDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustMarriageDate
                               */
                               public void setCustMarriageDate(java.lang.String param){
                            localCustMarriageDateTracker = param != null;
                                   
                                            this.localCustMarriageDate=param;
                                    

                               }
                            

                        /**
                        * field for CustSpouseDOB
                        */

                        
                                    protected java.lang.String localCustSpouseDOB ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustSpouseDOBTracker = false ;

                           public boolean isCustSpouseDOBSpecified(){
                               return localCustSpouseDOBTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustSpouseDOB(){
                               return localCustSpouseDOB;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustSpouseDOB
                               */
                               public void setCustSpouseDOB(java.lang.String param){
                            localCustSpouseDOBTracker = param != null;
                                   
                                            this.localCustSpouseDOB=param;
                                    

                               }
                            

                        /**
                        * field for CustSpouseEmployerName
                        */

                        
                                    protected java.lang.String localCustSpouseEmployerName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustSpouseEmployerNameTracker = false ;

                           public boolean isCustSpouseEmployerNameSpecified(){
                               return localCustSpouseEmployerNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustSpouseEmployerName(){
                               return localCustSpouseEmployerName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustSpouseEmployerName
                               */
                               public void setCustSpouseEmployerName(java.lang.String param){
                            localCustSpouseEmployerNameTracker = param != null;
                                   
                                            this.localCustSpouseEmployerName=param;
                                    

                               }
                            

                        /**
                        * field for CustSpouseNationality
                        */

                        
                                    protected java.lang.String localCustSpouseNationality ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustSpouseNationalityTracker = false ;

                           public boolean isCustSpouseNationalitySpecified(){
                               return localCustSpouseNationalityTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustSpouseNationality(){
                               return localCustSpouseNationality;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustSpouseNationality
                               */
                               public void setCustSpouseNationality(java.lang.String param){
                            localCustSpouseNationalityTracker = param != null;
                                   
                                            this.localCustSpouseNationality=param;
                                    

                               }
                            

                        /**
                        * field for CustSpouseOccupation
                        */

                        
                                    protected java.lang.String localCustSpouseOccupation ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustSpouseOccupationTracker = false ;

                           public boolean isCustSpouseOccupationSpecified(){
                               return localCustSpouseOccupationTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustSpouseOccupation(){
                               return localCustSpouseOccupation;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustSpouseOccupation
                               */
                               public void setCustSpouseOccupation(java.lang.String param){
                            localCustSpouseOccupationTracker = param != null;
                                   
                                            this.localCustSpouseOccupation=param;
                                    

                               }
                            

                        /**
                        * field for CustSpouseEmployerPhone
                        */

                        
                                    protected java.lang.String localCustSpouseEmployerPhone ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustSpouseEmployerPhoneTracker = false ;

                           public boolean isCustSpouseEmployerPhoneSpecified(){
                               return localCustSpouseEmployerPhoneTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustSpouseEmployerPhone(){
                               return localCustSpouseEmployerPhone;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustSpouseEmployerPhone
                               */
                               public void setCustSpouseEmployerPhone(java.lang.String param){
                            localCustSpouseEmployerPhoneTracker = param != null;
                                   
                                            this.localCustSpouseEmployerPhone=param;
                                    

                               }
                            

                        /**
                        * field for CustSpouseDesignation
                        */

                        
                                    protected java.lang.String localCustSpouseDesignation ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustSpouseDesignationTracker = false ;

                           public boolean isCustSpouseDesignationSpecified(){
                               return localCustSpouseDesignationTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustSpouseDesignation(){
                               return localCustSpouseDesignation;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustSpouseDesignation
                               */
                               public void setCustSpouseDesignation(java.lang.String param){
                            localCustSpouseDesignationTracker = param != null;
                                   
                                            this.localCustSpouseDesignation=param;
                                    

                               }
                            

                        /**
                        * field for CustEmployerName
                        */

                        
                                    protected java.lang.String localCustEmployerName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustEmployerNameTracker = false ;

                           public boolean isCustEmployerNameSpecified(){
                               return localCustEmployerNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustEmployerName(){
                               return localCustEmployerName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustEmployerName
                               */
                               public void setCustEmployerName(java.lang.String param){
                            localCustEmployerNameTracker = param != null;
                                   
                                            this.localCustEmployerName=param;
                                    

                               }
                            

                        /**
                        * field for CustEmployerPhone
                        */

                        
                                    protected java.lang.String localCustEmployerPhone ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustEmployerPhoneTracker = false ;

                           public boolean isCustEmployerPhoneSpecified(){
                               return localCustEmployerPhoneTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustEmployerPhone(){
                               return localCustEmployerPhone;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustEmployerPhone
                               */
                               public void setCustEmployerPhone(java.lang.String param){
                            localCustEmployerPhoneTracker = param != null;
                                   
                                            this.localCustEmployerPhone=param;
                                    

                               }
                            

                        /**
                        * field for CustEmployerMobile
                        */

                        
                                    protected java.lang.String localCustEmployerMobile ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustEmployerMobileTracker = false ;

                           public boolean isCustEmployerMobileSpecified(){
                               return localCustEmployerMobileTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustEmployerMobile(){
                               return localCustEmployerMobile;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustEmployerMobile
                               */
                               public void setCustEmployerMobile(java.lang.String param){
                            localCustEmployerMobileTracker = param != null;
                                   
                                            this.localCustEmployerMobile=param;
                                    

                               }
                            

                        /**
                        * field for CustEmployerFax
                        */

                        
                                    protected java.lang.String localCustEmployerFax ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustEmployerFaxTracker = false ;

                           public boolean isCustEmployerFaxSpecified(){
                               return localCustEmployerFaxTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustEmployerFax(){
                               return localCustEmployerFax;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustEmployerFax
                               */
                               public void setCustEmployerFax(java.lang.String param){
                            localCustEmployerFaxTracker = param != null;
                                   
                                            this.localCustEmployerFax=param;
                                    

                               }
                            

                        /**
                        * field for CustNumberOfYearsInJob
                        */

                        
                                    protected java.lang.String localCustNumberOfYearsInJob ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustNumberOfYearsInJobTracker = false ;

                           public boolean isCustNumberOfYearsInJobSpecified(){
                               return localCustNumberOfYearsInJobTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustNumberOfYearsInJob(){
                               return localCustNumberOfYearsInJob;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustNumberOfYearsInJob
                               */
                               public void setCustNumberOfYearsInJob(java.lang.String param){
                            localCustNumberOfYearsInJobTracker = param != null;
                                   
                                            this.localCustNumberOfYearsInJob=param;
                                    

                               }
                            

                        /**
                        * field for CustRetirementAge
                        */

                        
                                    protected java.lang.String localCustRetirementAge ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustRetirementAgeTracker = false ;

                           public boolean isCustRetirementAgeSpecified(){
                               return localCustRetirementAgeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustRetirementAge(){
                               return localCustRetirementAge;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustRetirementAge
                               */
                               public void setCustRetirementAge(java.lang.String param){
                            localCustRetirementAgeTracker = param != null;
                                   
                                            this.localCustRetirementAge=param;
                                    

                               }
                            

                        /**
                        * field for CustMonthlyIncome
                        */

                        
                                    protected java.lang.String localCustMonthlyIncome ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustMonthlyIncomeTracker = false ;

                           public boolean isCustMonthlyIncomeSpecified(){
                               return localCustMonthlyIncomeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustMonthlyIncome(){
                               return localCustMonthlyIncome;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustMonthlyIncome
                               */
                               public void setCustMonthlyIncome(java.lang.String param){
                            localCustMonthlyIncomeTracker = param != null;
                                   
                                            this.localCustMonthlyIncome=param;
                                    

                               }
                            

                        /**
                        * field for CustOtherIncome
                        */

                        
                                    protected java.lang.String localCustOtherIncome ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustOtherIncomeTracker = false ;

                           public boolean isCustOtherIncomeSpecified(){
                               return localCustOtherIncomeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustOtherIncome(){
                               return localCustOtherIncome;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustOtherIncome
                               */
                               public void setCustOtherIncome(java.lang.String param){
                            localCustOtherIncomeTracker = param != null;
                                   
                                            this.localCustOtherIncome=param;
                                    

                               }
                            

                        /**
                        * field for CustRentExpense
                        */

                        
                                    protected java.lang.String localCustRentExpense ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustRentExpenseTracker = false ;

                           public boolean isCustRentExpenseSpecified(){
                               return localCustRentExpenseTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustRentExpense(){
                               return localCustRentExpense;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustRentExpense
                               */
                               public void setCustRentExpense(java.lang.String param){
                            localCustRentExpenseTracker = param != null;
                                   
                                            this.localCustRentExpense=param;
                                    

                               }
                            

                        /**
                        * field for CustInsuranceExpense
                        */

                        
                                    protected java.lang.String localCustInsuranceExpense ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustInsuranceExpenseTracker = false ;

                           public boolean isCustInsuranceExpenseSpecified(){
                               return localCustInsuranceExpenseTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustInsuranceExpense(){
                               return localCustInsuranceExpense;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustInsuranceExpense
                               */
                               public void setCustInsuranceExpense(java.lang.String param){
                            localCustInsuranceExpenseTracker = param != null;
                                   
                                            this.localCustInsuranceExpense=param;
                                    

                               }
                            

                        /**
                        * field for CustOtherExpense
                        */

                        
                                    protected java.lang.String localCustOtherExpense ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustOtherExpenseTracker = false ;

                           public boolean isCustOtherExpenseSpecified(){
                               return localCustOtherExpenseTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustOtherExpense(){
                               return localCustOtherExpense;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustOtherExpense
                               */
                               public void setCustOtherExpense(java.lang.String param){
                            localCustOtherExpenseTracker = param != null;
                                   
                                            this.localCustOtherExpense=param;
                                    

                               }
                            

                        /**
                        * field for CustPrevEmployerName
                        */

                        
                                    protected java.lang.String localCustPrevEmployerName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustPrevEmployerNameTracker = false ;

                           public boolean isCustPrevEmployerNameSpecified(){
                               return localCustPrevEmployerNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustPrevEmployerName(){
                               return localCustPrevEmployerName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustPrevEmployerName
                               */
                               public void setCustPrevEmployerName(java.lang.String param){
                            localCustPrevEmployerNameTracker = param != null;
                                   
                                            this.localCustPrevEmployerName=param;
                                    

                               }
                            

                        /**
                        * field for CustPrevDesignation
                        */

                        
                                    protected java.lang.String localCustPrevDesignation ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustPrevDesignationTracker = false ;

                           public boolean isCustPrevDesignationSpecified(){
                               return localCustPrevDesignationTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustPrevDesignation(){
                               return localCustPrevDesignation;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustPrevDesignation
                               */
                               public void setCustPrevDesignation(java.lang.String param){
                            localCustPrevDesignationTracker = param != null;
                                   
                                            this.localCustPrevDesignation=param;
                                    

                               }
                            

                        /**
                        * field for CustReasonToLeftLastJob
                        */

                        
                                    protected java.lang.String localCustReasonToLeftLastJob ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustReasonToLeftLastJobTracker = false ;

                           public boolean isCustReasonToLeftLastJobSpecified(){
                               return localCustReasonToLeftLastJobTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustReasonToLeftLastJob(){
                               return localCustReasonToLeftLastJob;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustReasonToLeftLastJob
                               */
                               public void setCustReasonToLeftLastJob(java.lang.String param){
                            localCustReasonToLeftLastJobTracker = param != null;
                                   
                                            this.localCustReasonToLeftLastJob=param;
                                    

                               }
                            

                        /**
                        * field for CustLastSalary
                        */

                        
                                    protected java.lang.String localCustLastSalary ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustLastSalaryTracker = false ;

                           public boolean isCustLastSalarySpecified(){
                               return localCustLastSalaryTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustLastSalary(){
                               return localCustLastSalary;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustLastSalary
                               */
                               public void setCustLastSalary(java.lang.String param){
                            localCustLastSalaryTracker = param != null;
                                   
                                            this.localCustLastSalary=param;
                                    

                               }
                            

                        /**
                        * field for CustPrevJobStartDate
                        */

                        
                                    protected java.lang.String localCustPrevJobStartDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustPrevJobStartDateTracker = false ;

                           public boolean isCustPrevJobStartDateSpecified(){
                               return localCustPrevJobStartDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustPrevJobStartDate(){
                               return localCustPrevJobStartDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustPrevJobStartDate
                               */
                               public void setCustPrevJobStartDate(java.lang.String param){
                            localCustPrevJobStartDateTracker = param != null;
                                   
                                            this.localCustPrevJobStartDate=param;
                                    

                               }
                            

                        /**
                        * field for CustPrevJobEndDate
                        */

                        
                                    protected java.lang.String localCustPrevJobEndDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustPrevJobEndDateTracker = false ;

                           public boolean isCustPrevJobEndDateSpecified(){
                               return localCustPrevJobEndDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustPrevJobEndDate(){
                               return localCustPrevJobEndDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustPrevJobEndDate
                               */
                               public void setCustPrevJobEndDate(java.lang.String param){
                            localCustPrevJobEndDateTracker = param != null;
                                   
                                            this.localCustPrevJobEndDate=param;
                                    

                               }
                            

                        /**
                        * field for CustPassportNumber
                        */

                        
                                    protected java.lang.String localCustPassportNumber ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustPassportNumberTracker = false ;

                           public boolean isCustPassportNumberSpecified(){
                               return localCustPassportNumberTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustPassportNumber(){
                               return localCustPassportNumber;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustPassportNumber
                               */
                               public void setCustPassportNumber(java.lang.String param){
                            localCustPassportNumberTracker = param != null;
                                   
                                            this.localCustPassportNumber=param;
                                    

                               }
                            

                        /**
                        * field for CustPassportIssueDate
                        */

                        
                                    protected java.lang.String localCustPassportIssueDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustPassportIssueDateTracker = false ;

                           public boolean isCustPassportIssueDateSpecified(){
                               return localCustPassportIssueDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustPassportIssueDate(){
                               return localCustPassportIssueDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustPassportIssueDate
                               */
                               public void setCustPassportIssueDate(java.lang.String param){
                            localCustPassportIssueDateTracker = param != null;
                                   
                                            this.localCustPassportIssueDate=param;
                                    

                               }
                            

                        /**
                        * field for CustPassportExpiryDate
                        */

                        
                                    protected java.lang.String localCustPassportExpiryDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustPassportExpiryDateTracker = false ;

                           public boolean isCustPassportExpiryDateSpecified(){
                               return localCustPassportExpiryDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustPassportExpiryDate(){
                               return localCustPassportExpiryDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustPassportExpiryDate
                               */
                               public void setCustPassportExpiryDate(java.lang.String param){
                            localCustPassportExpiryDateTracker = param != null;
                                   
                                            this.localCustPassportExpiryDate=param;
                                    

                               }
                            

                        /**
                        * field for CustVisaNumber
                        */

                        
                                    protected java.lang.String localCustVisaNumber ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustVisaNumberTracker = false ;

                           public boolean isCustVisaNumberSpecified(){
                               return localCustVisaNumberTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustVisaNumber(){
                               return localCustVisaNumber;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustVisaNumber
                               */
                               public void setCustVisaNumber(java.lang.String param){
                            localCustVisaNumberTracker = param != null;
                                   
                                            this.localCustVisaNumber=param;
                                    

                               }
                            

                        /**
                        * field for CustVisaType
                        */

                        
                                    protected java.lang.String localCustVisaType ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustVisaTypeTracker = false ;

                           public boolean isCustVisaTypeSpecified(){
                               return localCustVisaTypeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustVisaType(){
                               return localCustVisaType;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustVisaType
                               */
                               public void setCustVisaType(java.lang.String param){
                            localCustVisaTypeTracker = param != null;
                                   
                                            this.localCustVisaType=param;
                                    

                               }
                            

                        /**
                        * field for CustStayDuration
                        */

                        
                                    protected java.lang.String localCustStayDuration ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustStayDurationTracker = false ;

                           public boolean isCustStayDurationSpecified(){
                               return localCustStayDurationTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustStayDuration(){
                               return localCustStayDuration;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustStayDuration
                               */
                               public void setCustStayDuration(java.lang.String param){
                            localCustStayDurationTracker = param != null;
                                   
                                            this.localCustStayDuration=param;
                                    

                               }
                            

                        /**
                        * field for CustVisaIssueDate
                        */

                        
                                    protected java.lang.String localCustVisaIssueDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustVisaIssueDateTracker = false ;

                           public boolean isCustVisaIssueDateSpecified(){
                               return localCustVisaIssueDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustVisaIssueDate(){
                               return localCustVisaIssueDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustVisaIssueDate
                               */
                               public void setCustVisaIssueDate(java.lang.String param){
                            localCustVisaIssueDateTracker = param != null;
                                   
                                            this.localCustVisaIssueDate=param;
                                    

                               }
                            

                        /**
                        * field for CustVisaExpiryDate
                        */

                        
                                    protected java.lang.String localCustVisaExpiryDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustVisaExpiryDateTracker = false ;

                           public boolean isCustVisaExpiryDateSpecified(){
                               return localCustVisaExpiryDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustVisaExpiryDate(){
                               return localCustVisaExpiryDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustVisaExpiryDate
                               */
                               public void setCustVisaExpiryDate(java.lang.String param){
                            localCustVisaExpiryDateTracker = param != null;
                                   
                                            this.localCustVisaExpiryDate=param;
                                    

                               }
                            

                        /**
                        * field for CustMedicalHistory
                        */

                        
                                    protected java.lang.String localCustMedicalHistory ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustMedicalHistoryTracker = false ;

                           public boolean isCustMedicalHistorySpecified(){
                               return localCustMedicalHistoryTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustMedicalHistory(){
                               return localCustMedicalHistory;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustMedicalHistory
                               */
                               public void setCustMedicalHistory(java.lang.String param){
                            localCustMedicalHistoryTracker = param != null;
                                   
                                            this.localCustMedicalHistory=param;
                                    

                               }
                            

                        /**
                        * field for CustMedicalInsuranceHistory
                        */

                        
                                    protected java.lang.String localCustMedicalInsuranceHistory ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustMedicalInsuranceHistoryTracker = false ;

                           public boolean isCustMedicalInsuranceHistorySpecified(){
                               return localCustMedicalInsuranceHistoryTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustMedicalInsuranceHistory(){
                               return localCustMedicalInsuranceHistory;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustMedicalInsuranceHistory
                               */
                               public void setCustMedicalInsuranceHistory(java.lang.String param){
                            localCustMedicalInsuranceHistoryTracker = param != null;
                                   
                                            this.localCustMedicalInsuranceHistory=param;
                                    

                               }
                            

                        /**
                        * field for CustLegalCaseFlag
                        */

                        
                                    protected java.lang.String localCustLegalCaseFlag ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustLegalCaseFlagTracker = false ;

                           public boolean isCustLegalCaseFlagSpecified(){
                               return localCustLegalCaseFlagTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustLegalCaseFlag(){
                               return localCustLegalCaseFlag;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustLegalCaseFlag
                               */
                               public void setCustLegalCaseFlag(java.lang.String param){
                            localCustLegalCaseFlagTracker = param != null;
                                   
                                            this.localCustLegalCaseFlag=param;
                                    

                               }
                            

                        /**
                        * field for CustLegalCaseDetails
                        */

                        
                                    protected java.lang.String localCustLegalCaseDetails ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustLegalCaseDetailsTracker = false ;

                           public boolean isCustLegalCaseDetailsSpecified(){
                               return localCustLegalCaseDetailsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustLegalCaseDetails(){
                               return localCustLegalCaseDetails;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustLegalCaseDetails
                               */
                               public void setCustLegalCaseDetails(java.lang.String param){
                            localCustLegalCaseDetailsTracker = param != null;
                                   
                                            this.localCustLegalCaseDetails=param;
                                    

                               }
                            

                        /**
                        * field for CustPoliceRecord
                        */

                        
                                    protected java.lang.String localCustPoliceRecord ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustPoliceRecordTracker = false ;

                           public boolean isCustPoliceRecordSpecified(){
                               return localCustPoliceRecordTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustPoliceRecord(){
                               return localCustPoliceRecord;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustPoliceRecord
                               */
                               public void setCustPoliceRecord(java.lang.String param){
                            localCustPoliceRecordTracker = param != null;
                                   
                                            this.localCustPoliceRecord=param;
                                    

                               }
                            

                        /**
                        * field for CustHouseValue
                        */

                        
                                    protected java.lang.String localCustHouseValue ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustHouseValueTracker = false ;

                           public boolean isCustHouseValueSpecified(){
                               return localCustHouseValueTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustHouseValue(){
                               return localCustHouseValue;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustHouseValue
                               */
                               public void setCustHouseValue(java.lang.String param){
                            localCustHouseValueTracker = param != null;
                                   
                                            this.localCustHouseValue=param;
                                    

                               }
                            

                        /**
                        * field for CustAssetDetails
                        */

                        
                                    protected java.lang.String localCustAssetDetails ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustAssetDetailsTracker = false ;

                           public boolean isCustAssetDetailsSpecified(){
                               return localCustAssetDetailsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustAssetDetails(){
                               return localCustAssetDetails;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustAssetDetails
                               */
                               public void setCustAssetDetails(java.lang.String param){
                            localCustAssetDetailsTracker = param != null;
                                   
                                            this.localCustAssetDetails=param;
                                    

                               }
                            

                        /**
                        * field for CustAssetValue
                        */

                        
                                    protected java.lang.String localCustAssetValue ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustAssetValueTracker = false ;

                           public boolean isCustAssetValueSpecified(){
                               return localCustAssetValueTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustAssetValue(){
                               return localCustAssetValue;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustAssetValue
                               */
                               public void setCustAssetValue(java.lang.String param){
                            localCustAssetValueTracker = param != null;
                                   
                                            this.localCustAssetValue=param;
                                    

                               }
                            

                        /**
                        * field for CustCreditRating
                        */

                        
                                    protected java.lang.String localCustCreditRating ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustCreditRatingTracker = false ;

                           public boolean isCustCreditRatingSpecified(){
                               return localCustCreditRatingTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustCreditRating(){
                               return localCustCreditRating;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustCreditRating
                               */
                               public void setCustCreditRating(java.lang.String param){
                            localCustCreditRatingTracker = param != null;
                                   
                                            this.localCustCreditRating=param;
                                    

                               }
                            

                        /**
                        * field for CustCreditRatingDate
                        */

                        
                                    protected java.lang.String localCustCreditRatingDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustCreditRatingDateTracker = false ;

                           public boolean isCustCreditRatingDateSpecified(){
                               return localCustCreditRatingDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustCreditRatingDate(){
                               return localCustCreditRatingDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustCreditRatingDate
                               */
                               public void setCustCreditRatingDate(java.lang.String param){
                            localCustCreditRatingDateTracker = param != null;
                                   
                                            this.localCustCreditRatingDate=param;
                                    

                               }
                            

                        /**
                        * field for CustCreditCardName1
                        */

                        
                                    protected java.lang.String localCustCreditCardName1 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustCreditCardName1Tracker = false ;

                           public boolean isCustCreditCardName1Specified(){
                               return localCustCreditCardName1Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustCreditCardName1(){
                               return localCustCreditCardName1;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustCreditCardName1
                               */
                               public void setCustCreditCardName1(java.lang.String param){
                            localCustCreditCardName1Tracker = param != null;
                                   
                                            this.localCustCreditCardName1=param;
                                    

                               }
                            

                        /**
                        * field for CustCreditCardRef1
                        */

                        
                                    protected java.lang.String localCustCreditCardRef1 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustCreditCardRef1Tracker = false ;

                           public boolean isCustCreditCardRef1Specified(){
                               return localCustCreditCardRef1Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustCreditCardRef1(){
                               return localCustCreditCardRef1;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustCreditCardRef1
                               */
                               public void setCustCreditCardRef1(java.lang.String param){
                            localCustCreditCardRef1Tracker = param != null;
                                   
                                            this.localCustCreditCardRef1=param;
                                    

                               }
                            

                        /**
                        * field for CustCreditCardName2
                        */

                        
                                    protected java.lang.String localCustCreditCardName2 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustCreditCardName2Tracker = false ;

                           public boolean isCustCreditCardName2Specified(){
                               return localCustCreditCardName2Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustCreditCardName2(){
                               return localCustCreditCardName2;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustCreditCardName2
                               */
                               public void setCustCreditCardName2(java.lang.String param){
                            localCustCreditCardName2Tracker = param != null;
                                   
                                            this.localCustCreditCardName2=param;
                                    

                               }
                            

                        /**
                        * field for CustCreditCardRef2
                        */

                        
                                    protected java.lang.String localCustCreditCardRef2 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustCreditCardRef2Tracker = false ;

                           public boolean isCustCreditCardRef2Specified(){
                               return localCustCreditCardRef2Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustCreditCardRef2(){
                               return localCustCreditCardRef2;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustCreditCardRef2
                               */
                               public void setCustCreditCardRef2(java.lang.String param){
                            localCustCreditCardRef2Tracker = param != null;
                                   
                                            this.localCustCreditCardRef2=param;
                                    

                               }
                            

                        /**
                        * field for CustCreditCardName3
                        */

                        
                                    protected java.lang.String localCustCreditCardName3 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustCreditCardName3Tracker = false ;

                           public boolean isCustCreditCardName3Specified(){
                               return localCustCreditCardName3Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustCreditCardName3(){
                               return localCustCreditCardName3;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustCreditCardName3
                               */
                               public void setCustCreditCardName3(java.lang.String param){
                            localCustCreditCardName3Tracker = param != null;
                                   
                                            this.localCustCreditCardName3=param;
                                    

                               }
                            

                        /**
                        * field for CustCreditCardRef3
                        */

                        
                                    protected java.lang.String localCustCreditCardRef3 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustCreditCardRef3Tracker = false ;

                           public boolean isCustCreditCardRef3Specified(){
                               return localCustCreditCardRef3Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustCreditCardRef3(){
                               return localCustCreditCardRef3;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustCreditCardRef3
                               */
                               public void setCustCreditCardRef3(java.lang.String param){
                            localCustCreditCardRef3Tracker = param != null;
                                   
                                            this.localCustCreditCardRef3=param;
                                    

                               }
                            

                        /**
                        * field for CustCurrentJobStartDate
                        */

                        
                                    protected java.lang.String localCustCurrentJobStartDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustCurrentJobStartDateTracker = false ;

                           public boolean isCustCurrentJobStartDateSpecified(){
                               return localCustCurrentJobStartDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustCurrentJobStartDate(){
                               return localCustCurrentJobStartDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustCurrentJobStartDate
                               */
                               public void setCustCurrentJobStartDate(java.lang.String param){
                            localCustCurrentJobStartDateTracker = param != null;
                                   
                                            this.localCustCurrentJobStartDate=param;
                                    

                               }
                            

                        /**
                        * field for CustCurrentJobSalaryDate
                        */

                        
                                    protected java.lang.String localCustCurrentJobSalaryDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustCurrentJobSalaryDateTracker = false ;

                           public boolean isCustCurrentJobSalaryDateSpecified(){
                               return localCustCurrentJobSalaryDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustCurrentJobSalaryDate(){
                               return localCustCurrentJobSalaryDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustCurrentJobSalaryDate
                               */
                               public void setCustCurrentJobSalaryDate(java.lang.String param){
                            localCustCurrentJobSalaryDateTracker = param != null;
                                   
                                            this.localCustCurrentJobSalaryDate=param;
                                    

                               }
                            

                        /**
                        * field for CustCurrentJobSalaryAmount
                        */

                        
                                    protected java.lang.String localCustCurrentJobSalaryAmount ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustCurrentJobSalaryAmountTracker = false ;

                           public boolean isCustCurrentJobSalaryAmountSpecified(){
                               return localCustCurrentJobSalaryAmountTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustCurrentJobSalaryAmount(){
                               return localCustCurrentJobSalaryAmount;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustCurrentJobSalaryAmount
                               */
                               public void setCustCurrentJobSalaryAmount(java.lang.String param){
                            localCustCurrentJobSalaryAmountTracker = param != null;
                                   
                                            this.localCustCurrentJobSalaryAmount=param;
                                    

                               }
                            

                        /**
                        * field for CustCreditCardNumber
                        */

                        
                                    protected java.lang.String localCustCreditCardNumber ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustCreditCardNumberTracker = false ;

                           public boolean isCustCreditCardNumberSpecified(){
                               return localCustCreditCardNumberTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustCreditCardNumber(){
                               return localCustCreditCardNumber;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustCreditCardNumber
                               */
                               public void setCustCreditCardNumber(java.lang.String param){
                            localCustCreditCardNumberTracker = param != null;
                                   
                                            this.localCustCreditCardNumber=param;
                                    

                               }
                            

                        /**
                        * field for CustCreditCardExpiryDate
                        */

                        
                                    protected java.lang.String localCustCreditCardExpiryDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustCreditCardExpiryDateTracker = false ;

                           public boolean isCustCreditCardExpiryDateSpecified(){
                               return localCustCreditCardExpiryDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustCreditCardExpiryDate(){
                               return localCustCreditCardExpiryDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustCreditCardExpiryDate
                               */
                               public void setCustCreditCardExpiryDate(java.lang.String param){
                            localCustCreditCardExpiryDateTracker = param != null;
                                   
                                            this.localCustCreditCardExpiryDate=param;
                                    

                               }
                            

                        /**
                        * field for CustMotherMaidenName
                        */

                        
                                    protected java.lang.String localCustMotherMaidenName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustMotherMaidenNameTracker = false ;

                           public boolean isCustMotherMaidenNameSpecified(){
                               return localCustMotherMaidenNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustMotherMaidenName(){
                               return localCustMotherMaidenName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustMotherMaidenName
                               */
                               public void setCustMotherMaidenName(java.lang.String param){
                            localCustMotherMaidenNameTracker = param != null;
                                   
                                            this.localCustMotherMaidenName=param;
                                    

                               }
                            

                        /**
                        * field for AmtNetWorthComp
                        */

                        
                                    protected java.lang.String localAmtNetWorthComp ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAmtNetWorthCompTracker = false ;

                           public boolean isAmtNetWorthCompSpecified(){
                               return localAmtNetWorthCompTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAmtNetWorthComp(){
                               return localAmtNetWorthComp;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AmtNetWorthComp
                               */
                               public void setAmtNetWorthComp(java.lang.String param){
                            localAmtNetWorthCompTracker = param != null;
                                   
                                            this.localAmtNetWorthComp=param;
                                    

                               }
                            

                        /**
                        * field for AmtAuthCapital
                        */

                        
                                    protected java.lang.String localAmtAuthCapital ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAmtAuthCapitalTracker = false ;

                           public boolean isAmtAuthCapitalSpecified(){
                               return localAmtAuthCapitalTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAmtAuthCapital(){
                               return localAmtAuthCapital;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AmtAuthCapital
                               */
                               public void setAmtAuthCapital(java.lang.String param){
                            localAmtAuthCapitalTracker = param != null;
                                   
                                            this.localAmtAuthCapital=param;
                                    

                               }
                            

                        /**
                        * field for AmtPaidupCapital
                        */

                        
                                    protected java.lang.String localAmtPaidupCapital ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAmtPaidupCapitalTracker = false ;

                           public boolean isAmtPaidupCapitalSpecified(){
                               return localAmtPaidupCapitalTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAmtPaidupCapital(){
                               return localAmtPaidupCapital;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AmtPaidupCapital
                               */
                               public void setAmtPaidupCapital(java.lang.String param){
                            localAmtPaidupCapitalTracker = param != null;
                                   
                                            this.localAmtPaidupCapital=param;
                                    

                               }
                            

                        /**
                        * field for AmtReserveLastYear
                        */

                        
                                    protected java.lang.String localAmtReserveLastYear ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAmtReserveLastYearTracker = false ;

                           public boolean isAmtReserveLastYearSpecified(){
                               return localAmtReserveLastYearTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAmtReserveLastYear(){
                               return localAmtReserveLastYear;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AmtReserveLastYear
                               */
                               public void setAmtReserveLastYear(java.lang.String param){
                            localAmtReserveLastYearTracker = param != null;
                                   
                                            this.localAmtReserveLastYear=param;
                                    

                               }
                            

                        /**
                        * field for AmtNetProfitLossLastYear
                        */

                        
                                    protected java.lang.String localAmtNetProfitLossLastYear ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAmtNetProfitLossLastYearTracker = false ;

                           public boolean isAmtNetProfitLossLastYearSpecified(){
                               return localAmtNetProfitLossLastYearTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAmtNetProfitLossLastYear(){
                               return localAmtNetProfitLossLastYear;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AmtNetProfitLossLastYear
                               */
                               public void setAmtNetProfitLossLastYear(java.lang.String param){
                            localAmtNetProfitLossLastYearTracker = param != null;
                                   
                                            this.localAmtNetProfitLossLastYear=param;
                                    

                               }
                            

                        /**
                        * field for AmtNetProfitLossYearBefore
                        */

                        
                                    protected java.lang.String localAmtNetProfitLossYearBefore ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAmtNetProfitLossYearBeforeTracker = false ;

                           public boolean isAmtNetProfitLossYearBeforeSpecified(){
                               return localAmtNetProfitLossYearBeforeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAmtNetProfitLossYearBefore(){
                               return localAmtNetProfitLossYearBefore;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AmtNetProfitLossYearBefore
                               */
                               public void setAmtNetProfitLossYearBefore(java.lang.String param){
                            localAmtNetProfitLossYearBeforeTracker = param != null;
                                   
                                            this.localAmtNetProfitLossYearBefore=param;
                                    

                               }
                            

                        /**
                        * field for NamePlaceIncorp
                        */

                        
                                    protected java.lang.String localNamePlaceIncorp ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNamePlaceIncorpTracker = false ;

                           public boolean isNamePlaceIncorpSpecified(){
                               return localNamePlaceIncorpTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNamePlaceIncorp(){
                               return localNamePlaceIncorp;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NamePlaceIncorp
                               */
                               public void setNamePlaceIncorp(java.lang.String param){
                            localNamePlaceIncorpTracker = param != null;
                                   
                                            this.localNamePlaceIncorp=param;
                                    

                               }
                            

                        /**
                        * field for CompanyType
                        */

                        
                                    protected java.lang.String localCompanyType ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCompanyTypeTracker = false ;

                           public boolean isCompanyTypeSpecified(){
                               return localCompanyTypeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCompanyType(){
                               return localCompanyType;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CompanyType
                               */
                               public void setCompanyType(java.lang.String param){
                            localCompanyTypeTracker = param != null;
                                   
                                            this.localCompanyType=param;
                                    

                               }
                            

                        /**
                        * field for LastFinInfoUpdateDate
                        */

                        
                                    protected java.lang.String localLastFinInfoUpdateDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLastFinInfoUpdateDateTracker = false ;

                           public boolean isLastFinInfoUpdateDateSpecified(){
                               return localLastFinInfoUpdateDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLastFinInfoUpdateDate(){
                               return localLastFinInfoUpdateDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LastFinInfoUpdateDate
                               */
                               public void setLastFinInfoUpdateDate(java.lang.String param){
                            localLastFinInfoUpdateDateTracker = param != null;
                                   
                                            this.localLastFinInfoUpdateDate=param;
                                    

                               }
                            

                        /**
                        * field for NameBanker1
                        */

                        
                                    protected java.lang.String localNameBanker1 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNameBanker1Tracker = false ;

                           public boolean isNameBanker1Specified(){
                               return localNameBanker1Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNameBanker1(){
                               return localNameBanker1;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NameBanker1
                               */
                               public void setNameBanker1(java.lang.String param){
                            localNameBanker1Tracker = param != null;
                                   
                                            this.localNameBanker1=param;
                                    

                               }
                            

                        /**
                        * field for NameBanker2
                        */

                        
                                    protected java.lang.String localNameBanker2 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNameBanker2Tracker = false ;

                           public boolean isNameBanker2Specified(){
                               return localNameBanker2Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNameBanker2(){
                               return localNameBanker2;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NameBanker2
                               */
                               public void setNameBanker2(java.lang.String param){
                            localNameBanker2Tracker = param != null;
                                   
                                            this.localNameBanker2=param;
                                    

                               }
                            

                        /**
                        * field for PartnerDirectorsCount
                        */

                        
                                    protected java.lang.String localPartnerDirectorsCount ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPartnerDirectorsCountTracker = false ;

                           public boolean isPartnerDirectorsCountSpecified(){
                               return localPartnerDirectorsCountTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPartnerDirectorsCount(){
                               return localPartnerDirectorsCount;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PartnerDirectorsCount
                               */
                               public void setPartnerDirectorsCount(java.lang.String param){
                            localPartnerDirectorsCountTracker = param != null;
                                   
                                            this.localPartnerDirectorsCount=param;
                                    

                               }
                            

                        /**
                        * field for NameMajSharehldr1
                        */

                        
                                    protected java.lang.String localNameMajSharehldr1 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNameMajSharehldr1Tracker = false ;

                           public boolean isNameMajSharehldr1Specified(){
                               return localNameMajSharehldr1Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNameMajSharehldr1(){
                               return localNameMajSharehldr1;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NameMajSharehldr1
                               */
                               public void setNameMajSharehldr1(java.lang.String param){
                            localNameMajSharehldr1Tracker = param != null;
                                   
                                            this.localNameMajSharehldr1=param;
                                    

                               }
                            

                        /**
                        * field for NameMajSharehldr2
                        */

                        
                                    protected java.lang.String localNameMajSharehldr2 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNameMajSharehldr2Tracker = false ;

                           public boolean isNameMajSharehldr2Specified(){
                               return localNameMajSharehldr2Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNameMajSharehldr2(){
                               return localNameMajSharehldr2;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NameMajSharehldr2
                               */
                               public void setNameMajSharehldr2(java.lang.String param){
                            localNameMajSharehldr2Tracker = param != null;
                                   
                                            this.localNameMajSharehldr2=param;
                                    

                               }
                            

                        /**
                        * field for NameMajSharehldr3
                        */

                        
                                    protected java.lang.String localNameMajSharehldr3 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNameMajSharehldr3Tracker = false ;

                           public boolean isNameMajSharehldr3Specified(){
                               return localNameMajSharehldr3Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNameMajSharehldr3(){
                               return localNameMajSharehldr3;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NameMajSharehldr3
                               */
                               public void setNameMajSharehldr3(java.lang.String param){
                            localNameMajSharehldr3Tracker = param != null;
                                   
                                            this.localNameMajSharehldr3=param;
                                    

                               }
                            

                        /**
                        * field for NameMajSharehldr4
                        */

                        
                                    protected java.lang.String localNameMajSharehldr4 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNameMajSharehldr4Tracker = false ;

                           public boolean isNameMajSharehldr4Specified(){
                               return localNameMajSharehldr4Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNameMajSharehldr4(){
                               return localNameMajSharehldr4;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NameMajSharehldr4
                               */
                               public void setNameMajSharehldr4(java.lang.String param){
                            localNameMajSharehldr4Tracker = param != null;
                                   
                                            this.localNameMajSharehldr4=param;
                                    

                               }
                            

                        /**
                        * field for NameMajSharehldr5
                        */

                        
                                    protected java.lang.String localNameMajSharehldr5 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNameMajSharehldr5Tracker = false ;

                           public boolean isNameMajSharehldr5Specified(){
                               return localNameMajSharehldr5Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNameMajSharehldr5(){
                               return localNameMajSharehldr5;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NameMajSharehldr5
                               */
                               public void setNameMajSharehldr5(java.lang.String param){
                            localNameMajSharehldr5Tracker = param != null;
                                   
                                            this.localNameMajSharehldr5=param;
                                    

                               }
                            

                        /**
                        * field for NameMajSharehldr6
                        */

                        
                                    protected java.lang.String localNameMajSharehldr6 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNameMajSharehldr6Tracker = false ;

                           public boolean isNameMajSharehldr6Specified(){
                               return localNameMajSharehldr6Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNameMajSharehldr6(){
                               return localNameMajSharehldr6;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NameMajSharehldr6
                               */
                               public void setNameMajSharehldr6(java.lang.String param){
                            localNameMajSharehldr6Tracker = param != null;
                                   
                                            this.localNameMajSharehldr6=param;
                                    

                               }
                            

                        /**
                        * field for NameMajSharehldr7
                        */

                        
                                    protected java.lang.String localNameMajSharehldr7 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNameMajSharehldr7Tracker = false ;

                           public boolean isNameMajSharehldr7Specified(){
                               return localNameMajSharehldr7Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNameMajSharehldr7(){
                               return localNameMajSharehldr7;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NameMajSharehldr7
                               */
                               public void setNameMajSharehldr7(java.lang.String param){
                            localNameMajSharehldr7Tracker = param != null;
                                   
                                            this.localNameMajSharehldr7=param;
                                    

                               }
                            

                        /**
                        * field for NameMajSharehldr8
                        */

                        
                                    protected java.lang.String localNameMajSharehldr8 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNameMajSharehldr8Tracker = false ;

                           public boolean isNameMajSharehldr8Specified(){
                               return localNameMajSharehldr8Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNameMajSharehldr8(){
                               return localNameMajSharehldr8;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NameMajSharehldr8
                               */
                               public void setNameMajSharehldr8(java.lang.String param){
                            localNameMajSharehldr8Tracker = param != null;
                                   
                                            this.localNameMajSharehldr8=param;
                                    

                               }
                            

                        /**
                        * field for NameMajSharehldr9
                        */

                        
                                    protected java.lang.String localNameMajSharehldr9 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNameMajSharehldr9Tracker = false ;

                           public boolean isNameMajSharehldr9Specified(){
                               return localNameMajSharehldr9Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNameMajSharehldr9(){
                               return localNameMajSharehldr9;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NameMajSharehldr9
                               */
                               public void setNameMajSharehldr9(java.lang.String param){
                            localNameMajSharehldr9Tracker = param != null;
                                   
                                            this.localNameMajSharehldr9=param;
                                    

                               }
                            

                        /**
                        * field for NameMajSharehldr10
                        */

                        
                                    protected java.lang.String localNameMajSharehldr10 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNameMajSharehldr10Tracker = false ;

                           public boolean isNameMajSharehldr10Specified(){
                               return localNameMajSharehldr10Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNameMajSharehldr10(){
                               return localNameMajSharehldr10;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NameMajSharehldr10
                               */
                               public void setNameMajSharehldr10(java.lang.String param){
                            localNameMajSharehldr10Tracker = param != null;
                                   
                                            this.localNameMajSharehldr10=param;
                                    

                               }
                            

                        /**
                        * field for RelationMajSharehldr1
                        */

                        
                                    protected java.lang.String localRelationMajSharehldr1 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRelationMajSharehldr1Tracker = false ;

                           public boolean isRelationMajSharehldr1Specified(){
                               return localRelationMajSharehldr1Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRelationMajSharehldr1(){
                               return localRelationMajSharehldr1;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RelationMajSharehldr1
                               */
                               public void setRelationMajSharehldr1(java.lang.String param){
                            localRelationMajSharehldr1Tracker = param != null;
                                   
                                            this.localRelationMajSharehldr1=param;
                                    

                               }
                            

                        /**
                        * field for RelationMajSharehldr2
                        */

                        
                                    protected java.lang.String localRelationMajSharehldr2 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRelationMajSharehldr2Tracker = false ;

                           public boolean isRelationMajSharehldr2Specified(){
                               return localRelationMajSharehldr2Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRelationMajSharehldr2(){
                               return localRelationMajSharehldr2;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RelationMajSharehldr2
                               */
                               public void setRelationMajSharehldr2(java.lang.String param){
                            localRelationMajSharehldr2Tracker = param != null;
                                   
                                            this.localRelationMajSharehldr2=param;
                                    

                               }
                            

                        /**
                        * field for RelationMajSharehldr3
                        */

                        
                                    protected java.lang.String localRelationMajSharehldr3 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRelationMajSharehldr3Tracker = false ;

                           public boolean isRelationMajSharehldr3Specified(){
                               return localRelationMajSharehldr3Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRelationMajSharehldr3(){
                               return localRelationMajSharehldr3;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RelationMajSharehldr3
                               */
                               public void setRelationMajSharehldr3(java.lang.String param){
                            localRelationMajSharehldr3Tracker = param != null;
                                   
                                            this.localRelationMajSharehldr3=param;
                                    

                               }
                            

                        /**
                        * field for RelationMajSharehldr4
                        */

                        
                                    protected java.lang.String localRelationMajSharehldr4 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRelationMajSharehldr4Tracker = false ;

                           public boolean isRelationMajSharehldr4Specified(){
                               return localRelationMajSharehldr4Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRelationMajSharehldr4(){
                               return localRelationMajSharehldr4;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RelationMajSharehldr4
                               */
                               public void setRelationMajSharehldr4(java.lang.String param){
                            localRelationMajSharehldr4Tracker = param != null;
                                   
                                            this.localRelationMajSharehldr4=param;
                                    

                               }
                            

                        /**
                        * field for RelationMajSharehldr5
                        */

                        
                                    protected java.lang.String localRelationMajSharehldr5 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRelationMajSharehldr5Tracker = false ;

                           public boolean isRelationMajSharehldr5Specified(){
                               return localRelationMajSharehldr5Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRelationMajSharehldr5(){
                               return localRelationMajSharehldr5;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RelationMajSharehldr5
                               */
                               public void setRelationMajSharehldr5(java.lang.String param){
                            localRelationMajSharehldr5Tracker = param != null;
                                   
                                            this.localRelationMajSharehldr5=param;
                                    

                               }
                            

                        /**
                        * field for RelationMajSharehldr6
                        */

                        
                                    protected java.lang.String localRelationMajSharehldr6 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRelationMajSharehldr6Tracker = false ;

                           public boolean isRelationMajSharehldr6Specified(){
                               return localRelationMajSharehldr6Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRelationMajSharehldr6(){
                               return localRelationMajSharehldr6;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RelationMajSharehldr6
                               */
                               public void setRelationMajSharehldr6(java.lang.String param){
                            localRelationMajSharehldr6Tracker = param != null;
                                   
                                            this.localRelationMajSharehldr6=param;
                                    

                               }
                            

                        /**
                        * field for RelationMajSharehldr7
                        */

                        
                                    protected java.lang.String localRelationMajSharehldr7 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRelationMajSharehldr7Tracker = false ;

                           public boolean isRelationMajSharehldr7Specified(){
                               return localRelationMajSharehldr7Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRelationMajSharehldr7(){
                               return localRelationMajSharehldr7;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RelationMajSharehldr7
                               */
                               public void setRelationMajSharehldr7(java.lang.String param){
                            localRelationMajSharehldr7Tracker = param != null;
                                   
                                            this.localRelationMajSharehldr7=param;
                                    

                               }
                            

                        /**
                        * field for RelationMajSharehldr8
                        */

                        
                                    protected java.lang.String localRelationMajSharehldr8 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRelationMajSharehldr8Tracker = false ;

                           public boolean isRelationMajSharehldr8Specified(){
                               return localRelationMajSharehldr8Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRelationMajSharehldr8(){
                               return localRelationMajSharehldr8;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RelationMajSharehldr8
                               */
                               public void setRelationMajSharehldr8(java.lang.String param){
                            localRelationMajSharehldr8Tracker = param != null;
                                   
                                            this.localRelationMajSharehldr8=param;
                                    

                               }
                            

                        /**
                        * field for RelationMajSharehldr9
                        */

                        
                                    protected java.lang.String localRelationMajSharehldr9 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRelationMajSharehldr9Tracker = false ;

                           public boolean isRelationMajSharehldr9Specified(){
                               return localRelationMajSharehldr9Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRelationMajSharehldr9(){
                               return localRelationMajSharehldr9;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RelationMajSharehldr9
                               */
                               public void setRelationMajSharehldr9(java.lang.String param){
                            localRelationMajSharehldr9Tracker = param != null;
                                   
                                            this.localRelationMajSharehldr9=param;
                                    

                               }
                            

                        /**
                        * field for RelationMajSharehldr10
                        */

                        
                                    protected java.lang.String localRelationMajSharehldr10 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRelationMajSharehldr10Tracker = false ;

                           public boolean isRelationMajSharehldr10Specified(){
                               return localRelationMajSharehldr10Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRelationMajSharehldr10(){
                               return localRelationMajSharehldr10;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RelationMajSharehldr10
                               */
                               public void setRelationMajSharehldr10(java.lang.String param){
                            localRelationMajSharehldr10Tracker = param != null;
                                   
                                            this.localRelationMajSharehldr10=param;
                                    

                               }
                            

                        /**
                        * field for CustBusinessLicenseNo
                        */

                        
                                    protected java.lang.String localCustBusinessLicenseNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustBusinessLicenseNoTracker = false ;

                           public boolean isCustBusinessLicenseNoSpecified(){
                               return localCustBusinessLicenseNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustBusinessLicenseNo(){
                               return localCustBusinessLicenseNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustBusinessLicenseNo
                               */
                               public void setCustBusinessLicenseNo(java.lang.String param){
                            localCustBusinessLicenseNoTracker = param != null;
                                   
                                            this.localCustBusinessLicenseNo=param;
                                    

                               }
                            

                        /**
                        * field for CustBusinessLicenseExpiry
                        */

                        
                                    protected java.lang.String localCustBusinessLicenseExpiry ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustBusinessLicenseExpiryTracker = false ;

                           public boolean isCustBusinessLicenseExpirySpecified(){
                               return localCustBusinessLicenseExpiryTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustBusinessLicenseExpiry(){
                               return localCustBusinessLicenseExpiry;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustBusinessLicenseExpiry
                               */
                               public void setCustBusinessLicenseExpiry(java.lang.String param){
                            localCustBusinessLicenseExpiryTracker = param != null;
                                   
                                            this.localCustBusinessLicenseExpiry=param;
                                    

                               }
                            

                        /**
                        * field for CustBusinessStartDate
                        */

                        
                                    protected java.lang.String localCustBusinessStartDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustBusinessStartDateTracker = false ;

                           public boolean isCustBusinessStartDateSpecified(){
                               return localCustBusinessStartDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustBusinessStartDate(){
                               return localCustBusinessStartDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustBusinessStartDate
                               */
                               public void setCustBusinessStartDate(java.lang.String param){
                            localCustBusinessStartDateTracker = param != null;
                                   
                                            this.localCustBusinessStartDate=param;
                                    

                               }
                            

                        /**
                        * field for ContactPersonName
                        */

                        
                                    protected java.lang.String localContactPersonName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localContactPersonNameTracker = false ;

                           public boolean isContactPersonNameSpecified(){
                               return localContactPersonNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getContactPersonName(){
                               return localContactPersonName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ContactPersonName
                               */
                               public void setContactPersonName(java.lang.String param){
                            localContactPersonNameTracker = param != null;
                                   
                                            this.localContactPersonName=param;
                                    

                               }
                            

                        /**
                        * field for ContactPersnonDesignation
                        */

                        
                                    protected java.lang.String localContactPersnonDesignation ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localContactPersnonDesignationTracker = false ;

                           public boolean isContactPersnonDesignationSpecified(){
                               return localContactPersnonDesignationTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getContactPersnonDesignation(){
                               return localContactPersnonDesignation;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ContactPersnonDesignation
                               */
                               public void setContactPersnonDesignation(java.lang.String param){
                            localContactPersnonDesignationTracker = param != null;
                                   
                                            this.localContactPersnonDesignation=param;
                                    

                               }
                            

                        /**
                        * field for CustParentCompanyName
                        */

                        
                                    protected java.lang.String localCustParentCompanyName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustParentCompanyNameTracker = false ;

                           public boolean isCustParentCompanyNameSpecified(){
                               return localCustParentCompanyNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustParentCompanyName(){
                               return localCustParentCompanyName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustParentCompanyName
                               */
                               public void setCustParentCompanyName(java.lang.String param){
                            localCustParentCompanyNameTracker = param != null;
                                   
                                            this.localCustParentCompanyName=param;
                                    

                               }
                            

                        /**
                        * field for CustApexcompanyName
                        */

                        
                                    protected java.lang.String localCustApexcompanyName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustApexcompanyNameTracker = false ;

                           public boolean isCustApexcompanyNameSpecified(){
                               return localCustApexcompanyNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustApexcompanyName(){
                               return localCustApexcompanyName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustApexcompanyName
                               */
                               public void setCustApexcompanyName(java.lang.String param){
                            localCustApexcompanyNameTracker = param != null;
                                   
                                            this.localCustApexcompanyName=param;
                                    

                               }
                            

                        /**
                        * field for CustAuditor1Name
                        */

                        
                                    protected java.lang.String localCustAuditor1Name ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustAuditor1NameTracker = false ;

                           public boolean isCustAuditor1NameSpecified(){
                               return localCustAuditor1NameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustAuditor1Name(){
                               return localCustAuditor1Name;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustAuditor1Name
                               */
                               public void setCustAuditor1Name(java.lang.String param){
                            localCustAuditor1NameTracker = param != null;
                                   
                                            this.localCustAuditor1Name=param;
                                    

                               }
                            

                        /**
                        * field for CustAuditor2Name
                        */

                        
                                    protected java.lang.String localCustAuditor2Name ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustAuditor2NameTracker = false ;

                           public boolean isCustAuditor2NameSpecified(){
                               return localCustAuditor2NameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustAuditor2Name(){
                               return localCustAuditor2Name;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustAuditor2Name
                               */
                               public void setCustAuditor2Name(java.lang.String param){
                            localCustAuditor2NameTracker = param != null;
                                   
                                            this.localCustAuditor2Name=param;
                                    

                               }
                            

                        /**
                        * field for CustIntCreditRating
                        */

                        
                                    protected java.lang.String localCustIntCreditRating ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustIntCreditRatingTracker = false ;

                           public boolean isCustIntCreditRatingSpecified(){
                               return localCustIntCreditRatingTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustIntCreditRating(){
                               return localCustIntCreditRating;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustIntCreditRating
                               */
                               public void setCustIntCreditRating(java.lang.String param){
                            localCustIntCreditRatingTracker = param != null;
                                   
                                            this.localCustIntCreditRating=param;
                                    

                               }
                            

                        /**
                        * field for CustBusinesstype
                        */

                        
                                    protected java.lang.String localCustBusinesstype ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustBusinesstypeTracker = false ;

                           public boolean isCustBusinesstypeSpecified(){
                               return localCustBusinesstypeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustBusinesstype(){
                               return localCustBusinesstype;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustBusinesstype
                               */
                               public void setCustBusinesstype(java.lang.String param){
                            localCustBusinesstypeTracker = param != null;
                                   
                                            this.localCustBusinesstype=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":customerAdditionalDetails_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "customerAdditionalDetails_type0",
                           xmlWriter);
                   }

               
                   }
                if (localCustOccupationTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custOccupation", xmlWriter);
                             

                                          if (localCustOccupation==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custOccupation cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustOccupation);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustOccupationCategoryTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custOccupationCategory", xmlWriter);
                             

                                          if (localCustOccupationCategory==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custOccupationCategory cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustOccupationCategory);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustDesignationTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custDesignation", xmlWriter);
                             

                                          if (localCustDesignation==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custDesignation cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustDesignation);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustOccupationTenorTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custOccupationTenor", xmlWriter);
                             

                                          if (localCustOccupationTenor==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custOccupationTenor cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustOccupationTenor);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustSpouseNameTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custSpouseName", xmlWriter);
                             

                                          if (localCustSpouseName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custSpouseName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustSpouseName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustMarriageDateTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custMarriageDate", xmlWriter);
                             

                                          if (localCustMarriageDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custMarriageDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustMarriageDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustSpouseDOBTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custSpouseDOB", xmlWriter);
                             

                                          if (localCustSpouseDOB==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custSpouseDOB cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustSpouseDOB);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustSpouseEmployerNameTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custSpouseEmployerName", xmlWriter);
                             

                                          if (localCustSpouseEmployerName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custSpouseEmployerName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustSpouseEmployerName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustSpouseNationalityTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custSpouseNationality", xmlWriter);
                             

                                          if (localCustSpouseNationality==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custSpouseNationality cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustSpouseNationality);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustSpouseOccupationTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custSpouseOccupation", xmlWriter);
                             

                                          if (localCustSpouseOccupation==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custSpouseOccupation cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustSpouseOccupation);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustSpouseEmployerPhoneTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custSpouseEmployerPhone", xmlWriter);
                             

                                          if (localCustSpouseEmployerPhone==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custSpouseEmployerPhone cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustSpouseEmployerPhone);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustSpouseDesignationTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custSpouseDesignation", xmlWriter);
                             

                                          if (localCustSpouseDesignation==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custSpouseDesignation cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustSpouseDesignation);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustEmployerNameTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custEmployerName", xmlWriter);
                             

                                          if (localCustEmployerName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custEmployerName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustEmployerName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustEmployerPhoneTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custEmployerPhone", xmlWriter);
                             

                                          if (localCustEmployerPhone==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custEmployerPhone cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustEmployerPhone);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustEmployerMobileTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custEmployerMobile", xmlWriter);
                             

                                          if (localCustEmployerMobile==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custEmployerMobile cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustEmployerMobile);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustEmployerFaxTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custEmployerFax", xmlWriter);
                             

                                          if (localCustEmployerFax==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custEmployerFax cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustEmployerFax);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustNumberOfYearsInJobTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custNumberOfYearsInJob", xmlWriter);
                             

                                          if (localCustNumberOfYearsInJob==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custNumberOfYearsInJob cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustNumberOfYearsInJob);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustRetirementAgeTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custRetirementAge", xmlWriter);
                             

                                          if (localCustRetirementAge==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custRetirementAge cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustRetirementAge);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustMonthlyIncomeTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custMonthlyIncome", xmlWriter);
                             

                                          if (localCustMonthlyIncome==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custMonthlyIncome cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustMonthlyIncome);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustOtherIncomeTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custOtherIncome", xmlWriter);
                             

                                          if (localCustOtherIncome==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custOtherIncome cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustOtherIncome);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustRentExpenseTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custRentExpense", xmlWriter);
                             

                                          if (localCustRentExpense==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custRentExpense cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustRentExpense);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustInsuranceExpenseTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custInsuranceExpense", xmlWriter);
                             

                                          if (localCustInsuranceExpense==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custInsuranceExpense cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustInsuranceExpense);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustOtherExpenseTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custOtherExpense", xmlWriter);
                             

                                          if (localCustOtherExpense==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custOtherExpense cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustOtherExpense);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustPrevEmployerNameTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custPrevEmployerName", xmlWriter);
                             

                                          if (localCustPrevEmployerName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custPrevEmployerName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustPrevEmployerName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustPrevDesignationTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custPrevDesignation", xmlWriter);
                             

                                          if (localCustPrevDesignation==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custPrevDesignation cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustPrevDesignation);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustReasonToLeftLastJobTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custReasonToLeftLastJob", xmlWriter);
                             

                                          if (localCustReasonToLeftLastJob==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custReasonToLeftLastJob cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustReasonToLeftLastJob);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustLastSalaryTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custLastSalary", xmlWriter);
                             

                                          if (localCustLastSalary==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custLastSalary cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustLastSalary);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustPrevJobStartDateTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custPrevJobStartDate", xmlWriter);
                             

                                          if (localCustPrevJobStartDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custPrevJobStartDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustPrevJobStartDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustPrevJobEndDateTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custPrevJobEndDate", xmlWriter);
                             

                                          if (localCustPrevJobEndDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custPrevJobEndDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustPrevJobEndDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustPassportNumberTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custPassportNumber", xmlWriter);
                             

                                          if (localCustPassportNumber==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custPassportNumber cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustPassportNumber);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustPassportIssueDateTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custPassportIssueDate", xmlWriter);
                             

                                          if (localCustPassportIssueDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custPassportIssueDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustPassportIssueDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustPassportExpiryDateTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custPassportExpiryDate", xmlWriter);
                             

                                          if (localCustPassportExpiryDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custPassportExpiryDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustPassportExpiryDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustVisaNumberTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custVisaNumber", xmlWriter);
                             

                                          if (localCustVisaNumber==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custVisaNumber cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustVisaNumber);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustVisaTypeTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custVisaType", xmlWriter);
                             

                                          if (localCustVisaType==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custVisaType cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustVisaType);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustStayDurationTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custStayDuration", xmlWriter);
                             

                                          if (localCustStayDuration==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custStayDuration cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustStayDuration);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustVisaIssueDateTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custVisaIssueDate", xmlWriter);
                             

                                          if (localCustVisaIssueDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custVisaIssueDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustVisaIssueDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustVisaExpiryDateTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custVisaExpiryDate", xmlWriter);
                             

                                          if (localCustVisaExpiryDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custVisaExpiryDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustVisaExpiryDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustMedicalHistoryTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custMedicalHistory", xmlWriter);
                             

                                          if (localCustMedicalHistory==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custMedicalHistory cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustMedicalHistory);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustMedicalInsuranceHistoryTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custMedicalInsuranceHistory", xmlWriter);
                             

                                          if (localCustMedicalInsuranceHistory==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custMedicalInsuranceHistory cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustMedicalInsuranceHistory);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustLegalCaseFlagTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custLegalCaseFlag", xmlWriter);
                             

                                          if (localCustLegalCaseFlag==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custLegalCaseFlag cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustLegalCaseFlag);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustLegalCaseDetailsTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custLegalCaseDetails", xmlWriter);
                             

                                          if (localCustLegalCaseDetails==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custLegalCaseDetails cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustLegalCaseDetails);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustPoliceRecordTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custPoliceRecord", xmlWriter);
                             

                                          if (localCustPoliceRecord==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custPoliceRecord cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustPoliceRecord);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustHouseValueTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custHouseValue", xmlWriter);
                             

                                          if (localCustHouseValue==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custHouseValue cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustHouseValue);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustAssetDetailsTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custAssetDetails", xmlWriter);
                             

                                          if (localCustAssetDetails==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custAssetDetails cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustAssetDetails);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustAssetValueTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custAssetValue", xmlWriter);
                             

                                          if (localCustAssetValue==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custAssetValue cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustAssetValue);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustCreditRatingTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custCreditRating", xmlWriter);
                             

                                          if (localCustCreditRating==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custCreditRating cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustCreditRating);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustCreditRatingDateTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custCreditRatingDate", xmlWriter);
                             

                                          if (localCustCreditRatingDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custCreditRatingDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustCreditRatingDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustCreditCardName1Tracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custCreditCardName1", xmlWriter);
                             

                                          if (localCustCreditCardName1==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custCreditCardName1 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustCreditCardName1);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustCreditCardRef1Tracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custCreditCardRef1", xmlWriter);
                             

                                          if (localCustCreditCardRef1==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custCreditCardRef1 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustCreditCardRef1);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustCreditCardName2Tracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custCreditCardName2", xmlWriter);
                             

                                          if (localCustCreditCardName2==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custCreditCardName2 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustCreditCardName2);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustCreditCardRef2Tracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custCreditCardRef2", xmlWriter);
                             

                                          if (localCustCreditCardRef2==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custCreditCardRef2 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustCreditCardRef2);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustCreditCardName3Tracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custCreditCardName3", xmlWriter);
                             

                                          if (localCustCreditCardName3==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custCreditCardName3 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustCreditCardName3);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustCreditCardRef3Tracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custCreditCardRef3", xmlWriter);
                             

                                          if (localCustCreditCardRef3==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custCreditCardRef3 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustCreditCardRef3);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustCurrentJobStartDateTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custCurrentJobStartDate", xmlWriter);
                             

                                          if (localCustCurrentJobStartDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custCurrentJobStartDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustCurrentJobStartDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustCurrentJobSalaryDateTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custCurrentJobSalaryDate", xmlWriter);
                             

                                          if (localCustCurrentJobSalaryDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custCurrentJobSalaryDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustCurrentJobSalaryDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustCurrentJobSalaryAmountTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custCurrentJobSalaryAmount", xmlWriter);
                             

                                          if (localCustCurrentJobSalaryAmount==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custCurrentJobSalaryAmount cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustCurrentJobSalaryAmount);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustCreditCardNumberTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custCreditCardNumber", xmlWriter);
                             

                                          if (localCustCreditCardNumber==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custCreditCardNumber cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustCreditCardNumber);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustCreditCardExpiryDateTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custCreditCardExpiryDate", xmlWriter);
                             

                                          if (localCustCreditCardExpiryDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custCreditCardExpiryDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustCreditCardExpiryDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustMotherMaidenNameTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custMotherMaidenName", xmlWriter);
                             

                                          if (localCustMotherMaidenName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custMotherMaidenName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustMotherMaidenName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAmtNetWorthCompTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "amtNetWorthComp", xmlWriter);
                             

                                          if (localAmtNetWorthComp==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("amtNetWorthComp cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAmtNetWorthComp);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAmtAuthCapitalTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "amtAuthCapital", xmlWriter);
                             

                                          if (localAmtAuthCapital==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("amtAuthCapital cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAmtAuthCapital);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAmtPaidupCapitalTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "amtPaidupCapital", xmlWriter);
                             

                                          if (localAmtPaidupCapital==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("amtPaidupCapital cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAmtPaidupCapital);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAmtReserveLastYearTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "amtReserveLastYear", xmlWriter);
                             

                                          if (localAmtReserveLastYear==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("amtReserveLastYear cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAmtReserveLastYear);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAmtNetProfitLossLastYearTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "amtNetProfitLossLastYear", xmlWriter);
                             

                                          if (localAmtNetProfitLossLastYear==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("amtNetProfitLossLastYear cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAmtNetProfitLossLastYear);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAmtNetProfitLossYearBeforeTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "amtNetProfitLossYearBefore", xmlWriter);
                             

                                          if (localAmtNetProfitLossYearBefore==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("amtNetProfitLossYearBefore cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAmtNetProfitLossYearBefore);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNamePlaceIncorpTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "namePlaceIncorp", xmlWriter);
                             

                                          if (localNamePlaceIncorp==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("namePlaceIncorp cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNamePlaceIncorp);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCompanyTypeTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "companyType", xmlWriter);
                             

                                          if (localCompanyType==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("companyType cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCompanyType);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLastFinInfoUpdateDateTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "lastFinInfoUpdateDate", xmlWriter);
                             

                                          if (localLastFinInfoUpdateDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("lastFinInfoUpdateDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLastFinInfoUpdateDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNameBanker1Tracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "nameBanker1", xmlWriter);
                             

                                          if (localNameBanker1==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("nameBanker1 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNameBanker1);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNameBanker2Tracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "nameBanker2", xmlWriter);
                             

                                          if (localNameBanker2==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("nameBanker2 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNameBanker2);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPartnerDirectorsCountTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "partnerDirectorsCount", xmlWriter);
                             

                                          if (localPartnerDirectorsCount==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("partnerDirectorsCount cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPartnerDirectorsCount);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNameMajSharehldr1Tracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "nameMajSharehldr1", xmlWriter);
                             

                                          if (localNameMajSharehldr1==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("nameMajSharehldr1 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNameMajSharehldr1);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNameMajSharehldr2Tracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "nameMajSharehldr2", xmlWriter);
                             

                                          if (localNameMajSharehldr2==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("nameMajSharehldr2 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNameMajSharehldr2);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNameMajSharehldr3Tracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "nameMajSharehldr3", xmlWriter);
                             

                                          if (localNameMajSharehldr3==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("nameMajSharehldr3 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNameMajSharehldr3);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNameMajSharehldr4Tracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "nameMajSharehldr4", xmlWriter);
                             

                                          if (localNameMajSharehldr4==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("nameMajSharehldr4 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNameMajSharehldr4);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNameMajSharehldr5Tracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "nameMajSharehldr5", xmlWriter);
                             

                                          if (localNameMajSharehldr5==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("nameMajSharehldr5 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNameMajSharehldr5);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNameMajSharehldr6Tracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "nameMajSharehldr6", xmlWriter);
                             

                                          if (localNameMajSharehldr6==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("nameMajSharehldr6 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNameMajSharehldr6);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNameMajSharehldr7Tracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "nameMajSharehldr7", xmlWriter);
                             

                                          if (localNameMajSharehldr7==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("nameMajSharehldr7 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNameMajSharehldr7);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNameMajSharehldr8Tracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "nameMajSharehldr8", xmlWriter);
                             

                                          if (localNameMajSharehldr8==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("nameMajSharehldr8 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNameMajSharehldr8);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNameMajSharehldr9Tracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "nameMajSharehldr9", xmlWriter);
                             

                                          if (localNameMajSharehldr9==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("nameMajSharehldr9 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNameMajSharehldr9);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNameMajSharehldr10Tracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "nameMajSharehldr10", xmlWriter);
                             

                                          if (localNameMajSharehldr10==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("nameMajSharehldr10 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNameMajSharehldr10);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRelationMajSharehldr1Tracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "relationMajSharehldr1", xmlWriter);
                             

                                          if (localRelationMajSharehldr1==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("relationMajSharehldr1 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRelationMajSharehldr1);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRelationMajSharehldr2Tracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "relationMajSharehldr2", xmlWriter);
                             

                                          if (localRelationMajSharehldr2==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("relationMajSharehldr2 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRelationMajSharehldr2);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRelationMajSharehldr3Tracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "relationMajSharehldr3", xmlWriter);
                             

                                          if (localRelationMajSharehldr3==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("relationMajSharehldr3 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRelationMajSharehldr3);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRelationMajSharehldr4Tracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "relationMajSharehldr4", xmlWriter);
                             

                                          if (localRelationMajSharehldr4==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("relationMajSharehldr4 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRelationMajSharehldr4);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRelationMajSharehldr5Tracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "relationMajSharehldr5", xmlWriter);
                             

                                          if (localRelationMajSharehldr5==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("relationMajSharehldr5 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRelationMajSharehldr5);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRelationMajSharehldr6Tracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "relationMajSharehldr6", xmlWriter);
                             

                                          if (localRelationMajSharehldr6==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("relationMajSharehldr6 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRelationMajSharehldr6);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRelationMajSharehldr7Tracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "relationMajSharehldr7", xmlWriter);
                             

                                          if (localRelationMajSharehldr7==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("relationMajSharehldr7 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRelationMajSharehldr7);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRelationMajSharehldr8Tracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "relationMajSharehldr8", xmlWriter);
                             

                                          if (localRelationMajSharehldr8==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("relationMajSharehldr8 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRelationMajSharehldr8);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRelationMajSharehldr9Tracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "relationMajSharehldr9", xmlWriter);
                             

                                          if (localRelationMajSharehldr9==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("relationMajSharehldr9 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRelationMajSharehldr9);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRelationMajSharehldr10Tracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "relationMajSharehldr10", xmlWriter);
                             

                                          if (localRelationMajSharehldr10==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("relationMajSharehldr10 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRelationMajSharehldr10);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustBusinessLicenseNoTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custBusinessLicenseNo", xmlWriter);
                             

                                          if (localCustBusinessLicenseNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custBusinessLicenseNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustBusinessLicenseNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustBusinessLicenseExpiryTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custBusinessLicenseExpiry", xmlWriter);
                             

                                          if (localCustBusinessLicenseExpiry==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custBusinessLicenseExpiry cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustBusinessLicenseExpiry);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustBusinessStartDateTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custBusinessStartDate", xmlWriter);
                             

                                          if (localCustBusinessStartDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custBusinessStartDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustBusinessStartDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localContactPersonNameTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "contactPersonName", xmlWriter);
                             

                                          if (localContactPersonName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("contactPersonName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localContactPersonName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localContactPersnonDesignationTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "contactPersnonDesignation", xmlWriter);
                             

                                          if (localContactPersnonDesignation==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("contactPersnonDesignation cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localContactPersnonDesignation);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustParentCompanyNameTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custParentCompanyName", xmlWriter);
                             

                                          if (localCustParentCompanyName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custParentCompanyName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustParentCompanyName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustApexcompanyNameTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custApexcompanyName", xmlWriter);
                             

                                          if (localCustApexcompanyName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custApexcompanyName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustApexcompanyName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustAuditor1NameTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custAuditor1Name", xmlWriter);
                             

                                          if (localCustAuditor1Name==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custAuditor1Name cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustAuditor1Name);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustAuditor2NameTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custAuditor2Name", xmlWriter);
                             

                                          if (localCustAuditor2Name==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custAuditor2Name cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustAuditor2Name);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustIntCreditRatingTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custIntCreditRating", xmlWriter);
                             

                                          if (localCustIntCreditRating==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custIntCreditRating cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustIntCreditRating);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustBusinesstypeTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custBusinesstype", xmlWriter);
                             

                                          if (localCustBusinesstype==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custBusinesstype cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustBusinesstype);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd")){
                return "ns3";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localCustOccupationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custOccupation"));
                                 
                                        if (localCustOccupation != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustOccupation));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custOccupation cannot be null!!");
                                        }
                                    } if (localCustOccupationCategoryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custOccupationCategory"));
                                 
                                        if (localCustOccupationCategory != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustOccupationCategory));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custOccupationCategory cannot be null!!");
                                        }
                                    } if (localCustDesignationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custDesignation"));
                                 
                                        if (localCustDesignation != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustDesignation));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custDesignation cannot be null!!");
                                        }
                                    } if (localCustOccupationTenorTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custOccupationTenor"));
                                 
                                        if (localCustOccupationTenor != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustOccupationTenor));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custOccupationTenor cannot be null!!");
                                        }
                                    } if (localCustSpouseNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custSpouseName"));
                                 
                                        if (localCustSpouseName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustSpouseName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custSpouseName cannot be null!!");
                                        }
                                    } if (localCustMarriageDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custMarriageDate"));
                                 
                                        if (localCustMarriageDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustMarriageDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custMarriageDate cannot be null!!");
                                        }
                                    } if (localCustSpouseDOBTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custSpouseDOB"));
                                 
                                        if (localCustSpouseDOB != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustSpouseDOB));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custSpouseDOB cannot be null!!");
                                        }
                                    } if (localCustSpouseEmployerNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custSpouseEmployerName"));
                                 
                                        if (localCustSpouseEmployerName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustSpouseEmployerName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custSpouseEmployerName cannot be null!!");
                                        }
                                    } if (localCustSpouseNationalityTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custSpouseNationality"));
                                 
                                        if (localCustSpouseNationality != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustSpouseNationality));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custSpouseNationality cannot be null!!");
                                        }
                                    } if (localCustSpouseOccupationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custSpouseOccupation"));
                                 
                                        if (localCustSpouseOccupation != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustSpouseOccupation));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custSpouseOccupation cannot be null!!");
                                        }
                                    } if (localCustSpouseEmployerPhoneTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custSpouseEmployerPhone"));
                                 
                                        if (localCustSpouseEmployerPhone != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustSpouseEmployerPhone));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custSpouseEmployerPhone cannot be null!!");
                                        }
                                    } if (localCustSpouseDesignationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custSpouseDesignation"));
                                 
                                        if (localCustSpouseDesignation != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustSpouseDesignation));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custSpouseDesignation cannot be null!!");
                                        }
                                    } if (localCustEmployerNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custEmployerName"));
                                 
                                        if (localCustEmployerName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustEmployerName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custEmployerName cannot be null!!");
                                        }
                                    } if (localCustEmployerPhoneTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custEmployerPhone"));
                                 
                                        if (localCustEmployerPhone != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustEmployerPhone));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custEmployerPhone cannot be null!!");
                                        }
                                    } if (localCustEmployerMobileTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custEmployerMobile"));
                                 
                                        if (localCustEmployerMobile != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustEmployerMobile));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custEmployerMobile cannot be null!!");
                                        }
                                    } if (localCustEmployerFaxTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custEmployerFax"));
                                 
                                        if (localCustEmployerFax != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustEmployerFax));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custEmployerFax cannot be null!!");
                                        }
                                    } if (localCustNumberOfYearsInJobTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custNumberOfYearsInJob"));
                                 
                                        if (localCustNumberOfYearsInJob != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustNumberOfYearsInJob));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custNumberOfYearsInJob cannot be null!!");
                                        }
                                    } if (localCustRetirementAgeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custRetirementAge"));
                                 
                                        if (localCustRetirementAge != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustRetirementAge));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custRetirementAge cannot be null!!");
                                        }
                                    } if (localCustMonthlyIncomeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custMonthlyIncome"));
                                 
                                        if (localCustMonthlyIncome != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustMonthlyIncome));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custMonthlyIncome cannot be null!!");
                                        }
                                    } if (localCustOtherIncomeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custOtherIncome"));
                                 
                                        if (localCustOtherIncome != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustOtherIncome));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custOtherIncome cannot be null!!");
                                        }
                                    } if (localCustRentExpenseTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custRentExpense"));
                                 
                                        if (localCustRentExpense != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustRentExpense));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custRentExpense cannot be null!!");
                                        }
                                    } if (localCustInsuranceExpenseTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custInsuranceExpense"));
                                 
                                        if (localCustInsuranceExpense != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustInsuranceExpense));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custInsuranceExpense cannot be null!!");
                                        }
                                    } if (localCustOtherExpenseTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custOtherExpense"));
                                 
                                        if (localCustOtherExpense != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustOtherExpense));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custOtherExpense cannot be null!!");
                                        }
                                    } if (localCustPrevEmployerNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custPrevEmployerName"));
                                 
                                        if (localCustPrevEmployerName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustPrevEmployerName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custPrevEmployerName cannot be null!!");
                                        }
                                    } if (localCustPrevDesignationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custPrevDesignation"));
                                 
                                        if (localCustPrevDesignation != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustPrevDesignation));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custPrevDesignation cannot be null!!");
                                        }
                                    } if (localCustReasonToLeftLastJobTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custReasonToLeftLastJob"));
                                 
                                        if (localCustReasonToLeftLastJob != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustReasonToLeftLastJob));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custReasonToLeftLastJob cannot be null!!");
                                        }
                                    } if (localCustLastSalaryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custLastSalary"));
                                 
                                        if (localCustLastSalary != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustLastSalary));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custLastSalary cannot be null!!");
                                        }
                                    } if (localCustPrevJobStartDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custPrevJobStartDate"));
                                 
                                        if (localCustPrevJobStartDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustPrevJobStartDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custPrevJobStartDate cannot be null!!");
                                        }
                                    } if (localCustPrevJobEndDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custPrevJobEndDate"));
                                 
                                        if (localCustPrevJobEndDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustPrevJobEndDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custPrevJobEndDate cannot be null!!");
                                        }
                                    } if (localCustPassportNumberTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custPassportNumber"));
                                 
                                        if (localCustPassportNumber != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustPassportNumber));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custPassportNumber cannot be null!!");
                                        }
                                    } if (localCustPassportIssueDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custPassportIssueDate"));
                                 
                                        if (localCustPassportIssueDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustPassportIssueDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custPassportIssueDate cannot be null!!");
                                        }
                                    } if (localCustPassportExpiryDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custPassportExpiryDate"));
                                 
                                        if (localCustPassportExpiryDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustPassportExpiryDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custPassportExpiryDate cannot be null!!");
                                        }
                                    } if (localCustVisaNumberTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custVisaNumber"));
                                 
                                        if (localCustVisaNumber != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustVisaNumber));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custVisaNumber cannot be null!!");
                                        }
                                    } if (localCustVisaTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custVisaType"));
                                 
                                        if (localCustVisaType != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustVisaType));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custVisaType cannot be null!!");
                                        }
                                    } if (localCustStayDurationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custStayDuration"));
                                 
                                        if (localCustStayDuration != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustStayDuration));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custStayDuration cannot be null!!");
                                        }
                                    } if (localCustVisaIssueDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custVisaIssueDate"));
                                 
                                        if (localCustVisaIssueDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustVisaIssueDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custVisaIssueDate cannot be null!!");
                                        }
                                    } if (localCustVisaExpiryDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custVisaExpiryDate"));
                                 
                                        if (localCustVisaExpiryDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustVisaExpiryDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custVisaExpiryDate cannot be null!!");
                                        }
                                    } if (localCustMedicalHistoryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custMedicalHistory"));
                                 
                                        if (localCustMedicalHistory != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustMedicalHistory));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custMedicalHistory cannot be null!!");
                                        }
                                    } if (localCustMedicalInsuranceHistoryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custMedicalInsuranceHistory"));
                                 
                                        if (localCustMedicalInsuranceHistory != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustMedicalInsuranceHistory));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custMedicalInsuranceHistory cannot be null!!");
                                        }
                                    } if (localCustLegalCaseFlagTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custLegalCaseFlag"));
                                 
                                        if (localCustLegalCaseFlag != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustLegalCaseFlag));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custLegalCaseFlag cannot be null!!");
                                        }
                                    } if (localCustLegalCaseDetailsTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custLegalCaseDetails"));
                                 
                                        if (localCustLegalCaseDetails != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustLegalCaseDetails));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custLegalCaseDetails cannot be null!!");
                                        }
                                    } if (localCustPoliceRecordTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custPoliceRecord"));
                                 
                                        if (localCustPoliceRecord != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustPoliceRecord));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custPoliceRecord cannot be null!!");
                                        }
                                    } if (localCustHouseValueTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custHouseValue"));
                                 
                                        if (localCustHouseValue != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustHouseValue));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custHouseValue cannot be null!!");
                                        }
                                    } if (localCustAssetDetailsTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custAssetDetails"));
                                 
                                        if (localCustAssetDetails != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustAssetDetails));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custAssetDetails cannot be null!!");
                                        }
                                    } if (localCustAssetValueTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custAssetValue"));
                                 
                                        if (localCustAssetValue != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustAssetValue));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custAssetValue cannot be null!!");
                                        }
                                    } if (localCustCreditRatingTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custCreditRating"));
                                 
                                        if (localCustCreditRating != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustCreditRating));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custCreditRating cannot be null!!");
                                        }
                                    } if (localCustCreditRatingDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custCreditRatingDate"));
                                 
                                        if (localCustCreditRatingDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustCreditRatingDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custCreditRatingDate cannot be null!!");
                                        }
                                    } if (localCustCreditCardName1Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custCreditCardName1"));
                                 
                                        if (localCustCreditCardName1 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustCreditCardName1));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custCreditCardName1 cannot be null!!");
                                        }
                                    } if (localCustCreditCardRef1Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custCreditCardRef1"));
                                 
                                        if (localCustCreditCardRef1 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustCreditCardRef1));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custCreditCardRef1 cannot be null!!");
                                        }
                                    } if (localCustCreditCardName2Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custCreditCardName2"));
                                 
                                        if (localCustCreditCardName2 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustCreditCardName2));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custCreditCardName2 cannot be null!!");
                                        }
                                    } if (localCustCreditCardRef2Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custCreditCardRef2"));
                                 
                                        if (localCustCreditCardRef2 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustCreditCardRef2));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custCreditCardRef2 cannot be null!!");
                                        }
                                    } if (localCustCreditCardName3Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custCreditCardName3"));
                                 
                                        if (localCustCreditCardName3 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustCreditCardName3));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custCreditCardName3 cannot be null!!");
                                        }
                                    } if (localCustCreditCardRef3Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custCreditCardRef3"));
                                 
                                        if (localCustCreditCardRef3 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustCreditCardRef3));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custCreditCardRef3 cannot be null!!");
                                        }
                                    } if (localCustCurrentJobStartDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custCurrentJobStartDate"));
                                 
                                        if (localCustCurrentJobStartDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustCurrentJobStartDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custCurrentJobStartDate cannot be null!!");
                                        }
                                    } if (localCustCurrentJobSalaryDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custCurrentJobSalaryDate"));
                                 
                                        if (localCustCurrentJobSalaryDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustCurrentJobSalaryDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custCurrentJobSalaryDate cannot be null!!");
                                        }
                                    } if (localCustCurrentJobSalaryAmountTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custCurrentJobSalaryAmount"));
                                 
                                        if (localCustCurrentJobSalaryAmount != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustCurrentJobSalaryAmount));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custCurrentJobSalaryAmount cannot be null!!");
                                        }
                                    } if (localCustCreditCardNumberTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custCreditCardNumber"));
                                 
                                        if (localCustCreditCardNumber != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustCreditCardNumber));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custCreditCardNumber cannot be null!!");
                                        }
                                    } if (localCustCreditCardExpiryDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custCreditCardExpiryDate"));
                                 
                                        if (localCustCreditCardExpiryDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustCreditCardExpiryDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custCreditCardExpiryDate cannot be null!!");
                                        }
                                    } if (localCustMotherMaidenNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custMotherMaidenName"));
                                 
                                        if (localCustMotherMaidenName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustMotherMaidenName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custMotherMaidenName cannot be null!!");
                                        }
                                    } if (localAmtNetWorthCompTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "amtNetWorthComp"));
                                 
                                        if (localAmtNetWorthComp != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAmtNetWorthComp));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("amtNetWorthComp cannot be null!!");
                                        }
                                    } if (localAmtAuthCapitalTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "amtAuthCapital"));
                                 
                                        if (localAmtAuthCapital != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAmtAuthCapital));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("amtAuthCapital cannot be null!!");
                                        }
                                    } if (localAmtPaidupCapitalTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "amtPaidupCapital"));
                                 
                                        if (localAmtPaidupCapital != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAmtPaidupCapital));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("amtPaidupCapital cannot be null!!");
                                        }
                                    } if (localAmtReserveLastYearTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "amtReserveLastYear"));
                                 
                                        if (localAmtReserveLastYear != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAmtReserveLastYear));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("amtReserveLastYear cannot be null!!");
                                        }
                                    } if (localAmtNetProfitLossLastYearTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "amtNetProfitLossLastYear"));
                                 
                                        if (localAmtNetProfitLossLastYear != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAmtNetProfitLossLastYear));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("amtNetProfitLossLastYear cannot be null!!");
                                        }
                                    } if (localAmtNetProfitLossYearBeforeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "amtNetProfitLossYearBefore"));
                                 
                                        if (localAmtNetProfitLossYearBefore != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAmtNetProfitLossYearBefore));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("amtNetProfitLossYearBefore cannot be null!!");
                                        }
                                    } if (localNamePlaceIncorpTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "namePlaceIncorp"));
                                 
                                        if (localNamePlaceIncorp != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNamePlaceIncorp));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("namePlaceIncorp cannot be null!!");
                                        }
                                    } if (localCompanyTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "companyType"));
                                 
                                        if (localCompanyType != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCompanyType));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("companyType cannot be null!!");
                                        }
                                    } if (localLastFinInfoUpdateDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "lastFinInfoUpdateDate"));
                                 
                                        if (localLastFinInfoUpdateDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLastFinInfoUpdateDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("lastFinInfoUpdateDate cannot be null!!");
                                        }
                                    } if (localNameBanker1Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "nameBanker1"));
                                 
                                        if (localNameBanker1 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNameBanker1));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("nameBanker1 cannot be null!!");
                                        }
                                    } if (localNameBanker2Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "nameBanker2"));
                                 
                                        if (localNameBanker2 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNameBanker2));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("nameBanker2 cannot be null!!");
                                        }
                                    } if (localPartnerDirectorsCountTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "partnerDirectorsCount"));
                                 
                                        if (localPartnerDirectorsCount != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPartnerDirectorsCount));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("partnerDirectorsCount cannot be null!!");
                                        }
                                    } if (localNameMajSharehldr1Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "nameMajSharehldr1"));
                                 
                                        if (localNameMajSharehldr1 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNameMajSharehldr1));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("nameMajSharehldr1 cannot be null!!");
                                        }
                                    } if (localNameMajSharehldr2Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "nameMajSharehldr2"));
                                 
                                        if (localNameMajSharehldr2 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNameMajSharehldr2));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("nameMajSharehldr2 cannot be null!!");
                                        }
                                    } if (localNameMajSharehldr3Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "nameMajSharehldr3"));
                                 
                                        if (localNameMajSharehldr3 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNameMajSharehldr3));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("nameMajSharehldr3 cannot be null!!");
                                        }
                                    } if (localNameMajSharehldr4Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "nameMajSharehldr4"));
                                 
                                        if (localNameMajSharehldr4 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNameMajSharehldr4));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("nameMajSharehldr4 cannot be null!!");
                                        }
                                    } if (localNameMajSharehldr5Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "nameMajSharehldr5"));
                                 
                                        if (localNameMajSharehldr5 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNameMajSharehldr5));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("nameMajSharehldr5 cannot be null!!");
                                        }
                                    } if (localNameMajSharehldr6Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "nameMajSharehldr6"));
                                 
                                        if (localNameMajSharehldr6 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNameMajSharehldr6));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("nameMajSharehldr6 cannot be null!!");
                                        }
                                    } if (localNameMajSharehldr7Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "nameMajSharehldr7"));
                                 
                                        if (localNameMajSharehldr7 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNameMajSharehldr7));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("nameMajSharehldr7 cannot be null!!");
                                        }
                                    } if (localNameMajSharehldr8Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "nameMajSharehldr8"));
                                 
                                        if (localNameMajSharehldr8 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNameMajSharehldr8));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("nameMajSharehldr8 cannot be null!!");
                                        }
                                    } if (localNameMajSharehldr9Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "nameMajSharehldr9"));
                                 
                                        if (localNameMajSharehldr9 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNameMajSharehldr9));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("nameMajSharehldr9 cannot be null!!");
                                        }
                                    } if (localNameMajSharehldr10Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "nameMajSharehldr10"));
                                 
                                        if (localNameMajSharehldr10 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNameMajSharehldr10));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("nameMajSharehldr10 cannot be null!!");
                                        }
                                    } if (localRelationMajSharehldr1Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "relationMajSharehldr1"));
                                 
                                        if (localRelationMajSharehldr1 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRelationMajSharehldr1));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("relationMajSharehldr1 cannot be null!!");
                                        }
                                    } if (localRelationMajSharehldr2Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "relationMajSharehldr2"));
                                 
                                        if (localRelationMajSharehldr2 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRelationMajSharehldr2));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("relationMajSharehldr2 cannot be null!!");
                                        }
                                    } if (localRelationMajSharehldr3Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "relationMajSharehldr3"));
                                 
                                        if (localRelationMajSharehldr3 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRelationMajSharehldr3));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("relationMajSharehldr3 cannot be null!!");
                                        }
                                    } if (localRelationMajSharehldr4Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "relationMajSharehldr4"));
                                 
                                        if (localRelationMajSharehldr4 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRelationMajSharehldr4));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("relationMajSharehldr4 cannot be null!!");
                                        }
                                    } if (localRelationMajSharehldr5Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "relationMajSharehldr5"));
                                 
                                        if (localRelationMajSharehldr5 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRelationMajSharehldr5));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("relationMajSharehldr5 cannot be null!!");
                                        }
                                    } if (localRelationMajSharehldr6Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "relationMajSharehldr6"));
                                 
                                        if (localRelationMajSharehldr6 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRelationMajSharehldr6));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("relationMajSharehldr6 cannot be null!!");
                                        }
                                    } if (localRelationMajSharehldr7Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "relationMajSharehldr7"));
                                 
                                        if (localRelationMajSharehldr7 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRelationMajSharehldr7));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("relationMajSharehldr7 cannot be null!!");
                                        }
                                    } if (localRelationMajSharehldr8Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "relationMajSharehldr8"));
                                 
                                        if (localRelationMajSharehldr8 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRelationMajSharehldr8));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("relationMajSharehldr8 cannot be null!!");
                                        }
                                    } if (localRelationMajSharehldr9Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "relationMajSharehldr9"));
                                 
                                        if (localRelationMajSharehldr9 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRelationMajSharehldr9));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("relationMajSharehldr9 cannot be null!!");
                                        }
                                    } if (localRelationMajSharehldr10Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "relationMajSharehldr10"));
                                 
                                        if (localRelationMajSharehldr10 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRelationMajSharehldr10));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("relationMajSharehldr10 cannot be null!!");
                                        }
                                    } if (localCustBusinessLicenseNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custBusinessLicenseNo"));
                                 
                                        if (localCustBusinessLicenseNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustBusinessLicenseNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custBusinessLicenseNo cannot be null!!");
                                        }
                                    } if (localCustBusinessLicenseExpiryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custBusinessLicenseExpiry"));
                                 
                                        if (localCustBusinessLicenseExpiry != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustBusinessLicenseExpiry));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custBusinessLicenseExpiry cannot be null!!");
                                        }
                                    } if (localCustBusinessStartDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custBusinessStartDate"));
                                 
                                        if (localCustBusinessStartDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustBusinessStartDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custBusinessStartDate cannot be null!!");
                                        }
                                    } if (localContactPersonNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "contactPersonName"));
                                 
                                        if (localContactPersonName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localContactPersonName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("contactPersonName cannot be null!!");
                                        }
                                    } if (localContactPersnonDesignationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "contactPersnonDesignation"));
                                 
                                        if (localContactPersnonDesignation != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localContactPersnonDesignation));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("contactPersnonDesignation cannot be null!!");
                                        }
                                    } if (localCustParentCompanyNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custParentCompanyName"));
                                 
                                        if (localCustParentCompanyName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustParentCompanyName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custParentCompanyName cannot be null!!");
                                        }
                                    } if (localCustApexcompanyNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custApexcompanyName"));
                                 
                                        if (localCustApexcompanyName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustApexcompanyName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custApexcompanyName cannot be null!!");
                                        }
                                    } if (localCustAuditor1NameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custAuditor1Name"));
                                 
                                        if (localCustAuditor1Name != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustAuditor1Name));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custAuditor1Name cannot be null!!");
                                        }
                                    } if (localCustAuditor2NameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custAuditor2Name"));
                                 
                                        if (localCustAuditor2Name != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustAuditor2Name));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custAuditor2Name cannot be null!!");
                                        }
                                    } if (localCustIntCreditRatingTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custIntCreditRating"));
                                 
                                        if (localCustIntCreditRating != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustIntCreditRating));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custIntCreditRating cannot be null!!");
                                        }
                                    } if (localCustBusinesstypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custBusinesstype"));
                                 
                                        if (localCustBusinesstype != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustBusinesstype));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custBusinesstype cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static CustomerAdditionalDetails_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            CustomerAdditionalDetails_type0 object =
                new CustomerAdditionalDetails_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"customerAdditionalDetails_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (CustomerAdditionalDetails_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custOccupation").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custOccupation" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustOccupation(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custOccupationCategory").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custOccupationCategory" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustOccupationCategory(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custDesignation").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custDesignation" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustDesignation(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custOccupationTenor").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custOccupationTenor" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustOccupationTenor(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custSpouseName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custSpouseName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustSpouseName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custMarriageDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custMarriageDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustMarriageDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custSpouseDOB").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custSpouseDOB" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustSpouseDOB(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custSpouseEmployerName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custSpouseEmployerName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustSpouseEmployerName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custSpouseNationality").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custSpouseNationality" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustSpouseNationality(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custSpouseOccupation").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custSpouseOccupation" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustSpouseOccupation(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custSpouseEmployerPhone").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custSpouseEmployerPhone" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustSpouseEmployerPhone(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custSpouseDesignation").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custSpouseDesignation" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustSpouseDesignation(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custEmployerName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custEmployerName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustEmployerName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custEmployerPhone").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custEmployerPhone" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustEmployerPhone(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custEmployerMobile").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custEmployerMobile" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustEmployerMobile(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custEmployerFax").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custEmployerFax" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustEmployerFax(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custNumberOfYearsInJob").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custNumberOfYearsInJob" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustNumberOfYearsInJob(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custRetirementAge").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custRetirementAge" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustRetirementAge(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custMonthlyIncome").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custMonthlyIncome" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustMonthlyIncome(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custOtherIncome").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custOtherIncome" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustOtherIncome(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custRentExpense").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custRentExpense" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustRentExpense(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custInsuranceExpense").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custInsuranceExpense" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustInsuranceExpense(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custOtherExpense").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custOtherExpense" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustOtherExpense(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custPrevEmployerName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custPrevEmployerName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustPrevEmployerName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custPrevDesignation").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custPrevDesignation" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustPrevDesignation(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custReasonToLeftLastJob").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custReasonToLeftLastJob" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustReasonToLeftLastJob(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custLastSalary").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custLastSalary" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustLastSalary(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custPrevJobStartDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custPrevJobStartDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustPrevJobStartDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custPrevJobEndDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custPrevJobEndDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustPrevJobEndDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custPassportNumber").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custPassportNumber" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustPassportNumber(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custPassportIssueDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custPassportIssueDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustPassportIssueDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custPassportExpiryDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custPassportExpiryDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustPassportExpiryDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custVisaNumber").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custVisaNumber" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustVisaNumber(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custVisaType").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custVisaType" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustVisaType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custStayDuration").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custStayDuration" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustStayDuration(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custVisaIssueDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custVisaIssueDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustVisaIssueDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custVisaExpiryDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custVisaExpiryDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustVisaExpiryDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custMedicalHistory").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custMedicalHistory" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustMedicalHistory(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custMedicalInsuranceHistory").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custMedicalInsuranceHistory" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustMedicalInsuranceHistory(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custLegalCaseFlag").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custLegalCaseFlag" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustLegalCaseFlag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custLegalCaseDetails").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custLegalCaseDetails" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustLegalCaseDetails(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custPoliceRecord").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custPoliceRecord" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustPoliceRecord(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custHouseValue").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custHouseValue" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustHouseValue(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custAssetDetails").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custAssetDetails" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustAssetDetails(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custAssetValue").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custAssetValue" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustAssetValue(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custCreditRating").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custCreditRating" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustCreditRating(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custCreditRatingDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custCreditRatingDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustCreditRatingDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custCreditCardName1").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custCreditCardName1" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustCreditCardName1(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custCreditCardRef1").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custCreditCardRef1" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustCreditCardRef1(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custCreditCardName2").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custCreditCardName2" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustCreditCardName2(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custCreditCardRef2").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custCreditCardRef2" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustCreditCardRef2(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custCreditCardName3").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custCreditCardName3" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustCreditCardName3(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custCreditCardRef3").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custCreditCardRef3" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustCreditCardRef3(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custCurrentJobStartDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custCurrentJobStartDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustCurrentJobStartDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custCurrentJobSalaryDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custCurrentJobSalaryDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustCurrentJobSalaryDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custCurrentJobSalaryAmount").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custCurrentJobSalaryAmount" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustCurrentJobSalaryAmount(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custCreditCardNumber").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custCreditCardNumber" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustCreditCardNumber(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custCreditCardExpiryDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custCreditCardExpiryDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustCreditCardExpiryDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custMotherMaidenName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custMotherMaidenName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustMotherMaidenName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","amtNetWorthComp").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"amtNetWorthComp" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAmtNetWorthComp(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","amtAuthCapital").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"amtAuthCapital" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAmtAuthCapital(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","amtPaidupCapital").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"amtPaidupCapital" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAmtPaidupCapital(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","amtReserveLastYear").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"amtReserveLastYear" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAmtReserveLastYear(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","amtNetProfitLossLastYear").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"amtNetProfitLossLastYear" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAmtNetProfitLossLastYear(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","amtNetProfitLossYearBefore").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"amtNetProfitLossYearBefore" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAmtNetProfitLossYearBefore(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","namePlaceIncorp").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"namePlaceIncorp" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNamePlaceIncorp(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","companyType").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"companyType" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCompanyType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","lastFinInfoUpdateDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"lastFinInfoUpdateDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLastFinInfoUpdateDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","nameBanker1").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"nameBanker1" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNameBanker1(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","nameBanker2").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"nameBanker2" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNameBanker2(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","partnerDirectorsCount").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"partnerDirectorsCount" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPartnerDirectorsCount(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","nameMajSharehldr1").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"nameMajSharehldr1" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNameMajSharehldr1(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","nameMajSharehldr2").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"nameMajSharehldr2" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNameMajSharehldr2(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","nameMajSharehldr3").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"nameMajSharehldr3" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNameMajSharehldr3(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","nameMajSharehldr4").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"nameMajSharehldr4" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNameMajSharehldr4(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","nameMajSharehldr5").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"nameMajSharehldr5" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNameMajSharehldr5(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","nameMajSharehldr6").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"nameMajSharehldr6" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNameMajSharehldr6(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","nameMajSharehldr7").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"nameMajSharehldr7" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNameMajSharehldr7(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","nameMajSharehldr8").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"nameMajSharehldr8" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNameMajSharehldr8(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","nameMajSharehldr9").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"nameMajSharehldr9" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNameMajSharehldr9(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","nameMajSharehldr10").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"nameMajSharehldr10" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNameMajSharehldr10(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","relationMajSharehldr1").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"relationMajSharehldr1" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRelationMajSharehldr1(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","relationMajSharehldr2").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"relationMajSharehldr2" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRelationMajSharehldr2(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","relationMajSharehldr3").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"relationMajSharehldr3" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRelationMajSharehldr3(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","relationMajSharehldr4").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"relationMajSharehldr4" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRelationMajSharehldr4(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","relationMajSharehldr5").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"relationMajSharehldr5" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRelationMajSharehldr5(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","relationMajSharehldr6").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"relationMajSharehldr6" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRelationMajSharehldr6(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","relationMajSharehldr7").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"relationMajSharehldr7" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRelationMajSharehldr7(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","relationMajSharehldr8").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"relationMajSharehldr8" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRelationMajSharehldr8(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","relationMajSharehldr9").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"relationMajSharehldr9" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRelationMajSharehldr9(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","relationMajSharehldr10").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"relationMajSharehldr10" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRelationMajSharehldr10(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custBusinessLicenseNo").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custBusinessLicenseNo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustBusinessLicenseNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custBusinessLicenseExpiry").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custBusinessLicenseExpiry" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustBusinessLicenseExpiry(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custBusinessStartDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custBusinessStartDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustBusinessStartDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","contactPersonName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"contactPersonName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setContactPersonName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","contactPersnonDesignation").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"contactPersnonDesignation" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setContactPersnonDesignation(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custParentCompanyName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custParentCompanyName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustParentCompanyName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custApexcompanyName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custApexcompanyName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustApexcompanyName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custAuditor1Name").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custAuditor1Name" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustAuditor1Name(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custAuditor2Name").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custAuditor2Name" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustAuditor2Name(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custIntCreditRating").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custIntCreditRating" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustIntCreditRating(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custBusinesstype").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custBusinesstype" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustBusinesstype(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class MisCodeDetails_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = misCodeDetails_type0
                Namespace URI = http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd
                Namespace Prefix = ns3
                */
            

                        /**
                        * field for MisCodes
                        * This was an Array!
                        */

                        
                                    protected MisCodes_type0[] localMisCodes ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMisCodesTracker = false ;

                           public boolean isMisCodesSpecified(){
                               return localMisCodesTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return MisCodes_type0[]
                           */
                           public  MisCodes_type0[] getMisCodes(){
                               return localMisCodes;
                           }

                           
                        


                               
                              /**
                               * validate the array for MisCodes
                               */
                              protected void validateMisCodes(MisCodes_type0[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param MisCodes
                              */
                              public void setMisCodes(MisCodes_type0[] param){
                              
                                   validateMisCodes(param);

                               localMisCodesTracker = param != null;
                                      
                                      this.localMisCodes=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param MisCodes_type0
                             */
                             public void addMisCodes(MisCodes_type0 param){
                                   if (localMisCodes == null){
                                   localMisCodes = new MisCodes_type0[]{};
                                   }

                            
                                 //update the setting tracker
                                localMisCodesTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localMisCodes);
                               list.add(param);
                               this.localMisCodes =
                             (MisCodes_type0[])list.toArray(
                            new MisCodes_type0[list.size()]);

                             }
                             

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":misCodeDetails_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "misCodeDetails_type0",
                           xmlWriter);
                   }

               
                   }
                if (localMisCodesTracker){
                                       if (localMisCodes!=null){
                                            for (int i = 0;i < localMisCodes.length;i++){
                                                if (localMisCodes[i] != null){
                                                 localMisCodes[i].serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","misCodes"),
                                                           xmlWriter);
                                                } else {
                                                   
                                                        // we don't have to do any thing since minOccures is zero
                                                    
                                                }

                                            }
                                     } else {
                                        
                                               throw new org.apache.axis2.databinding.ADBException("misCodes cannot be null!!");
                                        
                                    }
                                 }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd")){
                return "ns3";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localMisCodesTracker){
                             if (localMisCodes!=null) {
                                 for (int i = 0;i < localMisCodes.length;i++){

                                    if (localMisCodes[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                          "misCodes"));
                                         elementList.add(localMisCodes[i]);
                                    } else {
                                        
                                                // nothing to do
                                            
                                    }

                                 }
                             } else {
                                 
                                        throw new org.apache.axis2.databinding.ADBException("misCodes cannot be null!!");
                                    
                             }

                        }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static MisCodeDetails_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            MisCodeDetails_type0 object =
                new MisCodeDetails_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"misCodeDetails_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (MisCodeDetails_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                        java.util.ArrayList list1 = new java.util.ArrayList();
                    
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","misCodes").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    list1.add(MisCodes_type0.Factory.parse(reader));
                                                                
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone1 = false;
                                                        while(!loopDone1){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone1 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","misCodes").equals(reader.getName())){
                                                                    list1.add(MisCodes_type0.Factory.parse(reader));
                                                                        
                                                                }else{
                                                                    loopDone1 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array
                                                        
                                                        object.setMisCodes((MisCodes_type0[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                MisCodes_type0.class,
                                                                list1));
                                                            
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class UBODetails_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = UBODetails_type0
                Namespace URI = http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd
                Namespace Prefix = ns3
                */
            

                        /**
                        * field for PctHolding
                        */

                        
                                    protected java.lang.String localPctHolding ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPctHoldingTracker = false ;

                           public boolean isPctHoldingSpecified(){
                               return localPctHoldingTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPctHolding(){
                               return localPctHolding;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PctHolding
                               */
                               public void setPctHolding(java.lang.String param){
                            localPctHoldingTracker = param != null;
                                   
                                            this.localPctHolding=param;
                                    

                               }
                            

                        /**
                        * field for Nationality
                        */

                        
                                    protected java.lang.String localNationality ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNationalityTracker = false ;

                           public boolean isNationalitySpecified(){
                               return localNationalityTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNationality(){
                               return localNationality;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Nationality
                               */
                               public void setNationality(java.lang.String param){
                            localNationalityTracker = param != null;
                                   
                                            this.localNationality=param;
                                    

                               }
                            

                        /**
                        * field for DateOfBirth
                        */

                        
                                    protected java.lang.String localDateOfBirth ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDateOfBirthTracker = false ;

                           public boolean isDateOfBirthSpecified(){
                               return localDateOfBirthTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDateOfBirth(){
                               return localDateOfBirth;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DateOfBirth
                               */
                               public void setDateOfBirth(java.lang.String param){
                            localDateOfBirthTracker = param != null;
                                   
                                            this.localDateOfBirth=param;
                                    

                               }
                            

                        /**
                        * field for OwnershipType
                        */

                        
                                    protected java.lang.String localOwnershipType ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOwnershipTypeTracker = false ;

                           public boolean isOwnershipTypeSpecified(){
                               return localOwnershipTypeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOwnershipType(){
                               return localOwnershipType;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OwnershipType
                               */
                               public void setOwnershipType(java.lang.String param){
                            localOwnershipTypeTracker = param != null;
                                   
                                            this.localOwnershipType=param;
                                    

                               }
                            

                        /**
                        * field for UBOEmiratesIdNumber
                        */

                        
                                    protected java.lang.String localUBOEmiratesIdNumber ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUBOEmiratesIdNumberTracker = false ;

                           public boolean isUBOEmiratesIdNumberSpecified(){
                               return localUBOEmiratesIdNumberTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUBOEmiratesIdNumber(){
                               return localUBOEmiratesIdNumber;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param UBOEmiratesIdNumber
                               */
                               public void setUBOEmiratesIdNumber(java.lang.String param){
                            localUBOEmiratesIdNumberTracker = param != null;
                                   
                                            this.localUBOEmiratesIdNumber=param;
                                    

                               }
                            

                        /**
                        * field for UBOEmiratesIdExpiryDate
                        */

                        
                                    protected java.lang.String localUBOEmiratesIdExpiryDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUBOEmiratesIdExpiryDateTracker = false ;

                           public boolean isUBOEmiratesIdExpiryDateSpecified(){
                               return localUBOEmiratesIdExpiryDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUBOEmiratesIdExpiryDate(){
                               return localUBOEmiratesIdExpiryDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param UBOEmiratesIdExpiryDate
                               */
                               public void setUBOEmiratesIdExpiryDate(java.lang.String param){
                            localUBOEmiratesIdExpiryDateTracker = param != null;
                                   
                                            this.localUBOEmiratesIdExpiryDate=param;
                                    

                               }
                            

                        /**
                        * field for UBOPassportNumber
                        */

                        
                                    protected java.lang.String localUBOPassportNumber ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUBOPassportNumberTracker = false ;

                           public boolean isUBOPassportNumberSpecified(){
                               return localUBOPassportNumberTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUBOPassportNumber(){
                               return localUBOPassportNumber;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param UBOPassportNumber
                               */
                               public void setUBOPassportNumber(java.lang.String param){
                            localUBOPassportNumberTracker = param != null;
                                   
                                            this.localUBOPassportNumber=param;
                                    

                               }
                            

                        /**
                        * field for UBOPassportIssueDate
                        */

                        
                                    protected java.lang.String localUBOPassportIssueDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUBOPassportIssueDateTracker = false ;

                           public boolean isUBOPassportIssueDateSpecified(){
                               return localUBOPassportIssueDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUBOPassportIssueDate(){
                               return localUBOPassportIssueDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param UBOPassportIssueDate
                               */
                               public void setUBOPassportIssueDate(java.lang.String param){
                            localUBOPassportIssueDateTracker = param != null;
                                   
                                            this.localUBOPassportIssueDate=param;
                                    

                               }
                            

                        /**
                        * field for UBOPassportExpiryDate
                        */

                        
                                    protected java.lang.String localUBOPassportExpiryDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUBOPassportExpiryDateTracker = false ;

                           public boolean isUBOPassportExpiryDateSpecified(){
                               return localUBOPassportExpiryDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUBOPassportExpiryDate(){
                               return localUBOPassportExpiryDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param UBOPassportExpiryDate
                               */
                               public void setUBOPassportExpiryDate(java.lang.String param){
                            localUBOPassportExpiryDateTracker = param != null;
                                   
                                            this.localUBOPassportExpiryDate=param;
                                    

                               }
                            

                        /**
                        * field for UBOVisaNumber
                        */

                        
                                    protected java.lang.String localUBOVisaNumber ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUBOVisaNumberTracker = false ;

                           public boolean isUBOVisaNumberSpecified(){
                               return localUBOVisaNumberTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUBOVisaNumber(){
                               return localUBOVisaNumber;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param UBOVisaNumber
                               */
                               public void setUBOVisaNumber(java.lang.String param){
                            localUBOVisaNumberTracker = param != null;
                                   
                                            this.localUBOVisaNumber=param;
                                    

                               }
                            

                        /**
                        * field for UBOVisaExpiryDate
                        */

                        
                                    protected java.lang.String localUBOVisaExpiryDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUBOVisaExpiryDateTracker = false ;

                           public boolean isUBOVisaExpiryDateSpecified(){
                               return localUBOVisaExpiryDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUBOVisaExpiryDate(){
                               return localUBOVisaExpiryDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param UBOVisaExpiryDate
                               */
                               public void setUBOVisaExpiryDate(java.lang.String param){
                            localUBOVisaExpiryDateTracker = param != null;
                                   
                                            this.localUBOVisaExpiryDate=param;
                                    

                               }
                            

                        /**
                        * field for CountryOfResidenceRisk
                        */

                        
                                    protected java.lang.String localCountryOfResidenceRisk ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCountryOfResidenceRiskTracker = false ;

                           public boolean isCountryOfResidenceRiskSpecified(){
                               return localCountryOfResidenceRiskTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCountryOfResidenceRisk(){
                               return localCountryOfResidenceRisk;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CountryOfResidenceRisk
                               */
                               public void setCountryOfResidenceRisk(java.lang.String param){
                            localCountryOfResidenceRiskTracker = param != null;
                                   
                                            this.localCountryOfResidenceRisk=param;
                                    

                               }
                            

                        /**
                        * field for OwnershipSerialnum
                        */

                        
                                    protected java.lang.String localOwnershipSerialnum ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOwnershipSerialnumTracker = false ;

                           public boolean isOwnershipSerialnumSpecified(){
                               return localOwnershipSerialnumTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOwnershipSerialnum(){
                               return localOwnershipSerialnum;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OwnershipSerialnum
                               */
                               public void setOwnershipSerialnum(java.lang.String param){
                            localOwnershipSerialnumTracker = param != null;
                                   
                                            this.localOwnershipSerialnum=param;
                                    

                               }
                            

                        /**
                        * field for OwnershipDOLevel
                        */

                        
                                    protected java.lang.String localOwnershipDOLevel ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOwnershipDOLevelTracker = false ;

                           public boolean isOwnershipDOLevelSpecified(){
                               return localOwnershipDOLevelTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOwnershipDOLevel(){
                               return localOwnershipDOLevel;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OwnershipDOLevel
                               */
                               public void setOwnershipDOLevel(java.lang.String param){
                            localOwnershipDOLevelTracker = param != null;
                                   
                                            this.localOwnershipDOLevel=param;
                                    

                               }
                            

                        /**
                        * field for OwnershipRisk
                        */

                        
                                    protected java.lang.String localOwnershipRisk ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOwnershipRiskTracker = false ;

                           public boolean isOwnershipRiskSpecified(){
                               return localOwnershipRiskTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOwnershipRisk(){
                               return localOwnershipRisk;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OwnershipRisk
                               */
                               public void setOwnershipRisk(java.lang.String param){
                            localOwnershipRiskTracker = param != null;
                                   
                                            this.localOwnershipRisk=param;
                                    

                               }
                            

                        /**
                        * field for OwnershipName
                        */

                        
                                    protected java.lang.String localOwnershipName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOwnershipNameTracker = false ;

                           public boolean isOwnershipNameSpecified(){
                               return localOwnershipNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOwnershipName(){
                               return localOwnershipName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OwnershipName
                               */
                               public void setOwnershipName(java.lang.String param){
                            localOwnershipNameTracker = param != null;
                                   
                                            this.localOwnershipName=param;
                                    

                               }
                            

                        /**
                        * field for OwnershipResidency
                        */

                        
                                    protected java.lang.String localOwnershipResidency ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOwnershipResidencyTracker = false ;

                           public boolean isOwnershipResidencySpecified(){
                               return localOwnershipResidencyTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOwnershipResidency(){
                               return localOwnershipResidency;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OwnershipResidency
                               */
                               public void setOwnershipResidency(java.lang.String param){
                            localOwnershipResidencyTracker = param != null;
                                   
                                            this.localOwnershipResidency=param;
                                    

                               }
                            

                        /**
                        * field for OwnershipEmail
                        */

                        
                                    protected java.lang.String localOwnershipEmail ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOwnershipEmailTracker = false ;

                           public boolean isOwnershipEmailSpecified(){
                               return localOwnershipEmailTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOwnershipEmail(){
                               return localOwnershipEmail;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OwnershipEmail
                               */
                               public void setOwnershipEmail(java.lang.String param){
                            localOwnershipEmailTracker = param != null;
                                   
                                            this.localOwnershipEmail=param;
                                    

                               }
                            

                        /**
                        * field for NetWorthPS
                        */

                        
                                    protected java.lang.String localNetWorthPS ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNetWorthPSTracker = false ;

                           public boolean isNetWorthPSSpecified(){
                               return localNetWorthPSTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNetWorthPS(){
                               return localNetWorthPS;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NetWorthPS
                               */
                               public void setNetWorthPS(java.lang.String param){
                            localNetWorthPSTracker = param != null;
                                   
                                            this.localNetWorthPS=param;
                                    

                               }
                            

                        /**
                        * field for OwnershipScndNationality
                        */

                        
                                    protected java.lang.String localOwnershipScndNationality ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOwnershipScndNationalityTracker = false ;

                           public boolean isOwnershipScndNationalitySpecified(){
                               return localOwnershipScndNationalityTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOwnershipScndNationality(){
                               return localOwnershipScndNationality;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OwnershipScndNationality
                               */
                               public void setOwnershipScndNationality(java.lang.String param){
                            localOwnershipScndNationalityTracker = param != null;
                                   
                                            this.localOwnershipScndNationality=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":UBODetails_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "UBODetails_type0",
                           xmlWriter);
                   }

               
                   }
                if (localPctHoldingTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "pctHolding", xmlWriter);
                             

                                          if (localPctHolding==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("pctHolding cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPctHolding);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNationalityTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "nationality", xmlWriter);
                             

                                          if (localNationality==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("nationality cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNationality);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDateOfBirthTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "dateOfBirth", xmlWriter);
                             

                                          if (localDateOfBirth==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("dateOfBirth cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDateOfBirth);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOwnershipTypeTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "ownershipType", xmlWriter);
                             

                                          if (localOwnershipType==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ownershipType cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOwnershipType);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUBOEmiratesIdNumberTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "uBOEmiratesIdNumber", xmlWriter);
                             

                                          if (localUBOEmiratesIdNumber==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("uBOEmiratesIdNumber cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUBOEmiratesIdNumber);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUBOEmiratesIdExpiryDateTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "uBOEmiratesIdExpiryDate", xmlWriter);
                             

                                          if (localUBOEmiratesIdExpiryDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("uBOEmiratesIdExpiryDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUBOEmiratesIdExpiryDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUBOPassportNumberTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "uBOPassportNumber", xmlWriter);
                             

                                          if (localUBOPassportNumber==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("uBOPassportNumber cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUBOPassportNumber);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUBOPassportIssueDateTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "uBOPassportIssueDate", xmlWriter);
                             

                                          if (localUBOPassportIssueDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("uBOPassportIssueDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUBOPassportIssueDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUBOPassportExpiryDateTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "uBOPassportExpiryDate", xmlWriter);
                             

                                          if (localUBOPassportExpiryDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("uBOPassportExpiryDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUBOPassportExpiryDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUBOVisaNumberTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "uBOVisaNumber", xmlWriter);
                             

                                          if (localUBOVisaNumber==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("uBOVisaNumber cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUBOVisaNumber);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUBOVisaExpiryDateTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "uBOVisaExpiryDate", xmlWriter);
                             

                                          if (localUBOVisaExpiryDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("uBOVisaExpiryDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUBOVisaExpiryDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCountryOfResidenceRiskTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "countryOfResidenceRisk", xmlWriter);
                             

                                          if (localCountryOfResidenceRisk==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("countryOfResidenceRisk cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCountryOfResidenceRisk);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOwnershipSerialnumTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "ownershipSerialnum", xmlWriter);
                             

                                          if (localOwnershipSerialnum==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ownershipSerialnum cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOwnershipSerialnum);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOwnershipDOLevelTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "ownershipDOLevel", xmlWriter);
                             

                                          if (localOwnershipDOLevel==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ownershipDOLevel cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOwnershipDOLevel);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOwnershipRiskTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "ownershipRisk", xmlWriter);
                             

                                          if (localOwnershipRisk==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ownershipRisk cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOwnershipRisk);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOwnershipNameTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "ownershipName", xmlWriter);
                             

                                          if (localOwnershipName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ownershipName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOwnershipName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOwnershipResidencyTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "ownershipResidency", xmlWriter);
                             

                                          if (localOwnershipResidency==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ownershipResidency cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOwnershipResidency);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOwnershipEmailTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "ownershipEmail", xmlWriter);
                             

                                          if (localOwnershipEmail==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ownershipEmail cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOwnershipEmail);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNetWorthPSTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "netWorthPS", xmlWriter);
                             

                                          if (localNetWorthPS==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("netWorthPS cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNetWorthPS);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOwnershipScndNationalityTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "ownershipScndNationality", xmlWriter);
                             

                                          if (localOwnershipScndNationality==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ownershipScndNationality cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOwnershipScndNationality);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd")){
                return "ns3";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localPctHoldingTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "pctHolding"));
                                 
                                        if (localPctHolding != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPctHolding));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("pctHolding cannot be null!!");
                                        }
                                    } if (localNationalityTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "nationality"));
                                 
                                        if (localNationality != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNationality));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("nationality cannot be null!!");
                                        }
                                    } if (localDateOfBirthTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "dateOfBirth"));
                                 
                                        if (localDateOfBirth != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDateOfBirth));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("dateOfBirth cannot be null!!");
                                        }
                                    } if (localOwnershipTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "ownershipType"));
                                 
                                        if (localOwnershipType != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOwnershipType));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ownershipType cannot be null!!");
                                        }
                                    } if (localUBOEmiratesIdNumberTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "uBOEmiratesIdNumber"));
                                 
                                        if (localUBOEmiratesIdNumber != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUBOEmiratesIdNumber));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("uBOEmiratesIdNumber cannot be null!!");
                                        }
                                    } if (localUBOEmiratesIdExpiryDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "uBOEmiratesIdExpiryDate"));
                                 
                                        if (localUBOEmiratesIdExpiryDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUBOEmiratesIdExpiryDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("uBOEmiratesIdExpiryDate cannot be null!!");
                                        }
                                    } if (localUBOPassportNumberTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "uBOPassportNumber"));
                                 
                                        if (localUBOPassportNumber != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUBOPassportNumber));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("uBOPassportNumber cannot be null!!");
                                        }
                                    } if (localUBOPassportIssueDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "uBOPassportIssueDate"));
                                 
                                        if (localUBOPassportIssueDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUBOPassportIssueDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("uBOPassportIssueDate cannot be null!!");
                                        }
                                    } if (localUBOPassportExpiryDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "uBOPassportExpiryDate"));
                                 
                                        if (localUBOPassportExpiryDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUBOPassportExpiryDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("uBOPassportExpiryDate cannot be null!!");
                                        }
                                    } if (localUBOVisaNumberTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "uBOVisaNumber"));
                                 
                                        if (localUBOVisaNumber != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUBOVisaNumber));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("uBOVisaNumber cannot be null!!");
                                        }
                                    } if (localUBOVisaExpiryDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "uBOVisaExpiryDate"));
                                 
                                        if (localUBOVisaExpiryDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUBOVisaExpiryDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("uBOVisaExpiryDate cannot be null!!");
                                        }
                                    } if (localCountryOfResidenceRiskTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "countryOfResidenceRisk"));
                                 
                                        if (localCountryOfResidenceRisk != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCountryOfResidenceRisk));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("countryOfResidenceRisk cannot be null!!");
                                        }
                                    } if (localOwnershipSerialnumTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "ownershipSerialnum"));
                                 
                                        if (localOwnershipSerialnum != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOwnershipSerialnum));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ownershipSerialnum cannot be null!!");
                                        }
                                    } if (localOwnershipDOLevelTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "ownershipDOLevel"));
                                 
                                        if (localOwnershipDOLevel != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOwnershipDOLevel));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ownershipDOLevel cannot be null!!");
                                        }
                                    } if (localOwnershipRiskTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "ownershipRisk"));
                                 
                                        if (localOwnershipRisk != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOwnershipRisk));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ownershipRisk cannot be null!!");
                                        }
                                    } if (localOwnershipNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "ownershipName"));
                                 
                                        if (localOwnershipName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOwnershipName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ownershipName cannot be null!!");
                                        }
                                    } if (localOwnershipResidencyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "ownershipResidency"));
                                 
                                        if (localOwnershipResidency != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOwnershipResidency));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ownershipResidency cannot be null!!");
                                        }
                                    } if (localOwnershipEmailTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "ownershipEmail"));
                                 
                                        if (localOwnershipEmail != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOwnershipEmail));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ownershipEmail cannot be null!!");
                                        }
                                    } if (localNetWorthPSTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "netWorthPS"));
                                 
                                        if (localNetWorthPS != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNetWorthPS));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("netWorthPS cannot be null!!");
                                        }
                                    } if (localOwnershipScndNationalityTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "ownershipScndNationality"));
                                 
                                        if (localOwnershipScndNationality != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOwnershipScndNationality));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ownershipScndNationality cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static UBODetails_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            UBODetails_type0 object =
                new UBODetails_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"UBODetails_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (UBODetails_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","pctHolding").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"pctHolding" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPctHolding(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","nationality").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"nationality" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNationality(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","dateOfBirth").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"dateOfBirth" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDateOfBirth(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","ownershipType").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ownershipType" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOwnershipType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","uBOEmiratesIdNumber").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"uBOEmiratesIdNumber" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUBOEmiratesIdNumber(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","uBOEmiratesIdExpiryDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"uBOEmiratesIdExpiryDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUBOEmiratesIdExpiryDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","uBOPassportNumber").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"uBOPassportNumber" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUBOPassportNumber(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","uBOPassportIssueDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"uBOPassportIssueDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUBOPassportIssueDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","uBOPassportExpiryDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"uBOPassportExpiryDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUBOPassportExpiryDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","uBOVisaNumber").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"uBOVisaNumber" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUBOVisaNumber(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","uBOVisaExpiryDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"uBOVisaExpiryDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUBOVisaExpiryDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","countryOfResidenceRisk").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"countryOfResidenceRisk" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCountryOfResidenceRisk(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","ownershipSerialnum").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ownershipSerialnum" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOwnershipSerialnum(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","ownershipDOLevel").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ownershipDOLevel" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOwnershipDOLevel(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","ownershipRisk").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ownershipRisk" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOwnershipRisk(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","ownershipName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ownershipName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOwnershipName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","ownershipResidency").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ownershipResidency" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOwnershipResidency(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","ownershipEmail").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ownershipEmail" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOwnershipEmail(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","netWorthPS").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"netWorthPS" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNetWorthPS(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","ownershipScndNationality").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ownershipScndNationality" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOwnershipScndNationality(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class ModCustomerInfoRes_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = ModCustomerInfoRes_type0
                Namespace URI = http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd
                Namespace Prefix = ns3
                */
            

                        /**
                        * field for CustomerId
                        */

                        
                                    protected java.lang.String localCustomerId ;
                                

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustomerId(){
                               return localCustomerId;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustomerId
                               */
                               public void setCustomerId(java.lang.String param){
                            
                                            this.localCustomerId=param;
                                    

                               }
                            

                        /**
                        * field for Status
                        */

                        
                                    protected java.lang.String localStatus ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localStatusTracker = false ;

                           public boolean isStatusSpecified(){
                               return localStatusTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getStatus(){
                               return localStatus;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Status
                               */
                               public void setStatus(java.lang.String param){
                            localStatusTracker = param != null;
                                   
                                            this.localStatus=param;
                                    

                               }
                            

                        /**
                        * field for Reason
                        */

                        
                                    protected java.lang.String localReason ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localReasonTracker = false ;

                           public boolean isReasonSpecified(){
                               return localReasonTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getReason(){
                               return localReason;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Reason
                               */
                               public void setReason(java.lang.String param){
                            localReasonTracker = param != null;
                                   
                                            this.localReason=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":ModCustomerInfoRes_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "ModCustomerInfoRes_type0",
                           xmlWriter);
                   }

               
                   }
               
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "customerId", xmlWriter);
                             

                                          if (localCustomerId==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("customerId cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustomerId);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                              if (localStatusTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "status", xmlWriter);
                             

                                          if (localStatus==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("status cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localStatus);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localReasonTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "reason", xmlWriter);
                             

                                          if (localReason==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("reason cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localReason);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd")){
                return "ns3";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "customerId"));
                                 
                                        if (localCustomerId != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustomerId));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("customerId cannot be null!!");
                                        }
                                     if (localStatusTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "status"));
                                 
                                        if (localStatus != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localStatus));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("status cannot be null!!");
                                        }
                                    } if (localReasonTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "reason"));
                                 
                                        if (localReason != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReason));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("reason cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static ModCustomerInfoRes_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            ModCustomerInfoRes_type0 object =
                new ModCustomerInfoRes_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"ModCustomerInfoRes_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (ModCustomerInfoRes_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","customerId").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"customerId" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustomerId(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                                }
                            
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","status").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"status" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setStatus(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","reason").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"reason" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReason(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class CustomerAdresses_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = customerAdresses_type0
                Namespace URI = http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd
                Namespace Prefix = ns3
                */
            

                        /**
                        * field for Addresses
                        * This was an Array!
                        */

                        
                                    protected Addresses_type0[] localAddresses ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAddressesTracker = false ;

                           public boolean isAddressesSpecified(){
                               return localAddressesTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Addresses_type0[]
                           */
                           public  Addresses_type0[] getAddresses(){
                               return localAddresses;
                           }

                           
                        


                               
                              /**
                               * validate the array for Addresses
                               */
                              protected void validateAddresses(Addresses_type0[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param Addresses
                              */
                              public void setAddresses(Addresses_type0[] param){
                              
                                   validateAddresses(param);

                               localAddressesTracker = param != null;
                                      
                                      this.localAddresses=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param Addresses_type0
                             */
                             public void addAddresses(Addresses_type0 param){
                                   if (localAddresses == null){
                                   localAddresses = new Addresses_type0[]{};
                                   }

                            
                                 //update the setting tracker
                                localAddressesTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localAddresses);
                               list.add(param);
                               this.localAddresses =
                             (Addresses_type0[])list.toArray(
                            new Addresses_type0[list.size()]);

                             }
                             

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":customerAdresses_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "customerAdresses_type0",
                           xmlWriter);
                   }

               
                   }
                if (localAddressesTracker){
                                       if (localAddresses!=null){
                                            for (int i = 0;i < localAddresses.length;i++){
                                                if (localAddresses[i] != null){
                                                 localAddresses[i].serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","addresses"),
                                                           xmlWriter);
                                                } else {
                                                   
                                                        // we don't have to do any thing since minOccures is zero
                                                    
                                                }

                                            }
                                     } else {
                                        
                                               throw new org.apache.axis2.databinding.ADBException("addresses cannot be null!!");
                                        
                                    }
                                 }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd")){
                return "ns3";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localAddressesTracker){
                             if (localAddresses!=null) {
                                 for (int i = 0;i < localAddresses.length;i++){

                                    if (localAddresses[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                          "addresses"));
                                         elementList.add(localAddresses[i]);
                                    } else {
                                        
                                                // nothing to do
                                            
                                    }

                                 }
                             } else {
                                 
                                        throw new org.apache.axis2.databinding.ADBException("addresses cannot be null!!");
                                    
                             }

                        }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static CustomerAdresses_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            CustomerAdresses_type0 object =
                new CustomerAdresses_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"customerAdresses_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (CustomerAdresses_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                        java.util.ArrayList list1 = new java.util.ArrayList();
                    
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","addresses").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    list1.add(Addresses_type0.Factory.parse(reader));
                                                                
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone1 = false;
                                                        while(!loopDone1){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone1 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","addresses").equals(reader.getName())){
                                                                    list1.add(Addresses_type0.Factory.parse(reader));
                                                                        
                                                                }else{
                                                                    loopDone1 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array
                                                        
                                                        object.setAddresses((Addresses_type0[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                Addresses_type0.class,
                                                                list1));
                                                            
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class CompMIScb_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = compMIScb_type0
                Namespace URI = http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd
                Namespace Prefix = ns3
                */
            

                        /**
                        * field for PeerId
                        */

                        
                                    protected java.lang.String localPeerId ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPeerIdTracker = false ;

                           public boolean isPeerIdSpecified(){
                               return localPeerIdTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPeerId(){
                               return localPeerId;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PeerId
                               */
                               public void setPeerId(java.lang.String param){
                            localPeerIdTracker = param != null;
                                   
                                            this.localPeerId=param;
                                    

                               }
                            

                        /**
                        * field for DivisionId
                        */

                        
                                    protected java.lang.String localDivisionId ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDivisionIdTracker = false ;

                           public boolean isDivisionIdSpecified(){
                               return localDivisionIdTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDivisionId(){
                               return localDivisionId;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DivisionId
                               */
                               public void setDivisionId(java.lang.String param){
                            localDivisionIdTracker = param != null;
                                   
                                            this.localDivisionId=param;
                                    

                               }
                            

                        /**
                        * field for GroupId
                        */

                        
                                    protected java.lang.String localGroupId ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localGroupIdTracker = false ;

                           public boolean isGroupIdSpecified(){
                               return localGroupIdTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getGroupId(){
                               return localGroupId;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param GroupId
                               */
                               public void setGroupId(java.lang.String param){
                            localGroupIdTracker = param != null;
                                   
                                            this.localGroupId=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":compMIScb_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "compMIScb_type0",
                           xmlWriter);
                   }

               
                   }
                if (localPeerIdTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "peerId", xmlWriter);
                             

                                          if (localPeerId==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("peerId cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPeerId);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDivisionIdTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "divisionId", xmlWriter);
                             

                                          if (localDivisionId==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("divisionId cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDivisionId);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localGroupIdTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "groupId", xmlWriter);
                             

                                          if (localGroupId==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("groupId cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localGroupId);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd")){
                return "ns3";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localPeerIdTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "peerId"));
                                 
                                        if (localPeerId != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPeerId));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("peerId cannot be null!!");
                                        }
                                    } if (localDivisionIdTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "divisionId"));
                                 
                                        if (localDivisionId != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDivisionId));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("divisionId cannot be null!!");
                                        }
                                    } if (localGroupIdTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "groupId"));
                                 
                                        if (localGroupId != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localGroupId));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("groupId cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static CompMIScb_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            CompMIScb_type0 object =
                new CompMIScb_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"compMIScb_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (CompMIScb_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","peerId").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"peerId" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPeerId(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","divisionId").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"divisionId" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDivisionId(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","groupId").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"groupId" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setGroupId(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class AdditionalIncomeCountry_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = additionalIncomeCountry_type0
                Namespace URI = http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd
                Namespace Prefix = ns3
                */
            

                        /**
                        * field for AddsourceIncomeCountry
                        */

                        
                                    protected java.lang.String localAddsourceIncomeCountry ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAddsourceIncomeCountryTracker = false ;

                           public boolean isAddsourceIncomeCountrySpecified(){
                               return localAddsourceIncomeCountryTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAddsourceIncomeCountry(){
                               return localAddsourceIncomeCountry;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AddsourceIncomeCountry
                               */
                               public void setAddsourceIncomeCountry(java.lang.String param){
                            localAddsourceIncomeCountryTracker = param != null;
                                   
                                            this.localAddsourceIncomeCountry=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":additionalIncomeCountry_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "additionalIncomeCountry_type0",
                           xmlWriter);
                   }

               
                   }
                if (localAddsourceIncomeCountryTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "addsourceIncomeCountry", xmlWriter);
                             

                                          if (localAddsourceIncomeCountry==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("addsourceIncomeCountry cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAddsourceIncomeCountry);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd")){
                return "ns3";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localAddsourceIncomeCountryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "addsourceIncomeCountry"));
                                 
                                        if (localAddsourceIncomeCountry != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAddsourceIncomeCountry));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("addsourceIncomeCountry cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static AdditionalIncomeCountry_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            AdditionalIncomeCountry_type0 object =
                new AdditionalIncomeCountry_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"additionalIncomeCountry_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (AdditionalIncomeCountry_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","addsourceIncomeCountry").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"addsourceIncomeCountry" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAddsourceIncomeCountry(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class MisCodes_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = misCodes_type0
                Namespace URI = http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd
                Namespace Prefix = ns3
                */
            

                        /**
                        * field for MisCodeType
                        */

                        
                                    protected java.lang.String localMisCodeType ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMisCodeTypeTracker = false ;

                           public boolean isMisCodeTypeSpecified(){
                               return localMisCodeTypeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMisCodeType(){
                               return localMisCodeType;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MisCodeType
                               */
                               public void setMisCodeType(java.lang.String param){
                            localMisCodeTypeTracker = param != null;
                                   
                                            this.localMisCodeType=param;
                                    

                               }
                            

                        /**
                        * field for MisCodeNumber
                        */

                        
                                    protected java.lang.String localMisCodeNumber ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMisCodeNumberTracker = false ;

                           public boolean isMisCodeNumberSpecified(){
                               return localMisCodeNumberTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMisCodeNumber(){
                               return localMisCodeNumber;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MisCodeNumber
                               */
                               public void setMisCodeNumber(java.lang.String param){
                            localMisCodeNumberTracker = param != null;
                                   
                                            this.localMisCodeNumber=param;
                                    

                               }
                            

                        /**
                        * field for MisCodeText
                        */

                        
                                    protected java.lang.String localMisCodeText ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMisCodeTextTracker = false ;

                           public boolean isMisCodeTextSpecified(){
                               return localMisCodeTextTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMisCodeText(){
                               return localMisCodeText;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MisCodeText
                               */
                               public void setMisCodeText(java.lang.String param){
                            localMisCodeTextTracker = param != null;
                                   
                                            this.localMisCodeText=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":misCodes_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "misCodes_type0",
                           xmlWriter);
                   }

               
                   }
                if (localMisCodeTypeTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "misCodeType", xmlWriter);
                             

                                          if (localMisCodeType==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("misCodeType cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMisCodeType);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMisCodeNumberTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "misCodeNumber", xmlWriter);
                             

                                          if (localMisCodeNumber==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("misCodeNumber cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMisCodeNumber);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMisCodeTextTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "misCodeText", xmlWriter);
                             

                                          if (localMisCodeText==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("misCodeText cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMisCodeText);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd")){
                return "ns3";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localMisCodeTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "misCodeType"));
                                 
                                        if (localMisCodeType != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMisCodeType));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("misCodeType cannot be null!!");
                                        }
                                    } if (localMisCodeNumberTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "misCodeNumber"));
                                 
                                        if (localMisCodeNumber != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMisCodeNumber));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("misCodeNumber cannot be null!!");
                                        }
                                    } if (localMisCodeTextTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "misCodeText"));
                                 
                                        if (localMisCodeText != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMisCodeText));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("misCodeText cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static MisCodes_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            MisCodes_type0 object =
                new MisCodes_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"misCodes_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (MisCodes_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","misCodeType").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"misCodeType" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMisCodeType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","misCodeNumber").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"misCodeNumber" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMisCodeNumber(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","misCodeText").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"misCodeText" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMisCodeText(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class Signatories_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = signatories_type0
                Namespace URI = http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd
                Namespace Prefix = ns3
                */
            

                        /**
                        * field for SigCounter
                        */

                        
                                    protected java.lang.String localSigCounter ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSigCounterTracker = false ;

                           public boolean isSigCounterSpecified(){
                               return localSigCounterTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSigCounter(){
                               return localSigCounter;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SigCounter
                               */
                               public void setSigCounter(java.lang.String param){
                            localSigCounterTracker = param != null;
                                   
                                            this.localSigCounter=param;
                                    

                               }
                            

                        /**
                        * field for SigName
                        */

                        
                                    protected java.lang.String localSigName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSigNameTracker = false ;

                           public boolean isSigNameSpecified(){
                               return localSigNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSigName(){
                               return localSigName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SigName
                               */
                               public void setSigName(java.lang.String param){
                            localSigNameTracker = param != null;
                                   
                                            this.localSigName=param;
                                    

                               }
                            

                        /**
                        * field for SigDesignation
                        */

                        
                                    protected java.lang.String localSigDesignation ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSigDesignationTracker = false ;

                           public boolean isSigDesignationSpecified(){
                               return localSigDesignationTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSigDesignation(){
                               return localSigDesignation;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SigDesignation
                               */
                               public void setSigDesignation(java.lang.String param){
                            localSigDesignationTracker = param != null;
                                   
                                            this.localSigDesignation=param;
                                    

                               }
                            

                        /**
                        * field for SigDirectorName
                        */

                        
                                    protected java.lang.String localSigDirectorName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSigDirectorNameTracker = false ;

                           public boolean isSigDirectorNameSpecified(){
                               return localSigDirectorNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSigDirectorName(){
                               return localSigDirectorName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SigDirectorName
                               */
                               public void setSigDirectorName(java.lang.String param){
                            localSigDirectorNameTracker = param != null;
                                   
                                            this.localSigDirectorName=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":signatories_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "signatories_type0",
                           xmlWriter);
                   }

               
                   }
                if (localSigCounterTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "sigCounter", xmlWriter);
                             

                                          if (localSigCounter==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sigCounter cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSigCounter);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSigNameTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "sigName", xmlWriter);
                             

                                          if (localSigName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sigName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSigName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSigDesignationTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "sigDesignation", xmlWriter);
                             

                                          if (localSigDesignation==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sigDesignation cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSigDesignation);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSigDirectorNameTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "sigDirectorName", xmlWriter);
                             

                                          if (localSigDirectorName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sigDirectorName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSigDirectorName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd")){
                return "ns3";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localSigCounterTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "sigCounter"));
                                 
                                        if (localSigCounter != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSigCounter));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sigCounter cannot be null!!");
                                        }
                                    } if (localSigNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "sigName"));
                                 
                                        if (localSigName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSigName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sigName cannot be null!!");
                                        }
                                    } if (localSigDesignationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "sigDesignation"));
                                 
                                        if (localSigDesignation != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSigDesignation));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sigDesignation cannot be null!!");
                                        }
                                    } if (localSigDirectorNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "sigDirectorName"));
                                 
                                        if (localSigDirectorName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSigDirectorName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sigDirectorName cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static Signatories_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            Signatories_type0 object =
                new Signatories_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"signatories_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (Signatories_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","sigCounter").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"sigCounter" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSigCounter(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","sigName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"sigName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSigName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","sigDesignation").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"sigDesignation" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSigDesignation(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","sigDirectorName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"sigDirectorName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSigDirectorName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class SignatoryInfo_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = signatoryInfo_type0
                Namespace URI = http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd
                Namespace Prefix = ns3
                */
            

                        /**
                        * field for Signatories
                        * This was an Array!
                        */

                        
                                    protected Signatories_type0[] localSignatories ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSignatoriesTracker = false ;

                           public boolean isSignatoriesSpecified(){
                               return localSignatoriesTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Signatories_type0[]
                           */
                           public  Signatories_type0[] getSignatories(){
                               return localSignatories;
                           }

                           
                        


                               
                              /**
                               * validate the array for Signatories
                               */
                              protected void validateSignatories(Signatories_type0[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param Signatories
                              */
                              public void setSignatories(Signatories_type0[] param){
                              
                                   validateSignatories(param);

                               localSignatoriesTracker = param != null;
                                      
                                      this.localSignatories=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param Signatories_type0
                             */
                             public void addSignatories(Signatories_type0 param){
                                   if (localSignatories == null){
                                   localSignatories = new Signatories_type0[]{};
                                   }

                            
                                 //update the setting tracker
                                localSignatoriesTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localSignatories);
                               list.add(param);
                               this.localSignatories =
                             (Signatories_type0[])list.toArray(
                            new Signatories_type0[list.size()]);

                             }
                             

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":signatoryInfo_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "signatoryInfo_type0",
                           xmlWriter);
                   }

               
                   }
                if (localSignatoriesTracker){
                                       if (localSignatories!=null){
                                            for (int i = 0;i < localSignatories.length;i++){
                                                if (localSignatories[i] != null){
                                                 localSignatories[i].serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","signatories"),
                                                           xmlWriter);
                                                } else {
                                                   
                                                        // we don't have to do any thing since minOccures is zero
                                                    
                                                }

                                            }
                                     } else {
                                        
                                               throw new org.apache.axis2.databinding.ADBException("signatories cannot be null!!");
                                        
                                    }
                                 }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd")){
                return "ns3";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localSignatoriesTracker){
                             if (localSignatories!=null) {
                                 for (int i = 0;i < localSignatories.length;i++){

                                    if (localSignatories[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                          "signatories"));
                                         elementList.add(localSignatories[i]);
                                    } else {
                                        
                                                // nothing to do
                                            
                                    }

                                 }
                             } else {
                                 
                                        throw new org.apache.axis2.databinding.ADBException("signatories cannot be null!!");
                                    
                             }

                        }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static SignatoryInfo_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            SignatoryInfo_type0 object =
                new SignatoryInfo_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"signatoryInfo_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (SignatoryInfo_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                        java.util.ArrayList list1 = new java.util.ArrayList();
                    
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","signatories").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    list1.add(Signatories_type0.Factory.parse(reader));
                                                                
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone1 = false;
                                                        while(!loopDone1){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone1 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","signatories").equals(reader.getName())){
                                                                    list1.add(Signatories_type0.Factory.parse(reader));
                                                                        
                                                                }else{
                                                                    loopDone1 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array
                                                        
                                                        object.setSignatories((Signatories_type0[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                Signatories_type0.class,
                                                                list1));
                                                            
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class ModCustomerInfoReq_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = ModCustomerInfoReq_type0
                Namespace URI = http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd
                Namespace Prefix = ns3
                */
            

                        /**
                        * field for CustomerId
                        */

                        
                                    protected java.lang.String localCustomerId ;
                                

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustomerId(){
                               return localCustomerId;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustomerId
                               */
                               public void setCustomerId(java.lang.String param){
                            
                                            this.localCustomerId=param;
                                    

                               }
                            

                        /**
                        * field for CustPrefix
                        */

                        
                                    protected java.lang.String localCustPrefix ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustPrefixTracker = false ;

                           public boolean isCustPrefixSpecified(){
                               return localCustPrefixTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustPrefix(){
                               return localCustPrefix;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustPrefix
                               */
                               public void setCustPrefix(java.lang.String param){
                            localCustPrefixTracker = param != null;
                                   
                                            this.localCustPrefix=param;
                                    

                               }
                            

                        /**
                        * field for CustFullName
                        */

                        
                                    protected java.lang.String localCustFullName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustFullNameTracker = false ;

                           public boolean isCustFullNameSpecified(){
                               return localCustFullNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustFullName(){
                               return localCustFullName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustFullName
                               */
                               public void setCustFullName(java.lang.String param){
                            localCustFullNameTracker = param != null;
                                   
                                            this.localCustFullName=param;
                                    

                               }
                            

                        /**
                        * field for CustShortName
                        */

                        
                                    protected java.lang.String localCustShortName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustShortNameTracker = false ;

                           public boolean isCustShortNameSpecified(){
                               return localCustShortNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustShortName(){
                               return localCustShortName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustShortName
                               */
                               public void setCustShortName(java.lang.String param){
                            localCustShortNameTracker = param != null;
                                   
                                            this.localCustShortName=param;
                                    

                               }
                            

                        /**
                        * field for CustCodeStat
                        */

                        
                                    protected java.lang.String localCustCodeStat ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustCodeStatTracker = false ;

                           public boolean isCustCodeStatSpecified(){
                               return localCustCodeStatTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustCodeStat(){
                               return localCustCodeStat;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustCodeStat
                               */
                               public void setCustCodeStat(java.lang.String param){
                            localCustCodeStatTracker = param != null;
                                   
                                            this.localCustCodeStat=param;
                                    

                               }
                            

                        /**
                        * field for CustDeceasedStatus
                        */

                        
                                    protected java.lang.String localCustDeceasedStatus ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustDeceasedStatusTracker = false ;

                           public boolean isCustDeceasedStatusSpecified(){
                               return localCustDeceasedStatusTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustDeceasedStatus(){
                               return localCustDeceasedStatus;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustDeceasedStatus
                               */
                               public void setCustDeceasedStatus(java.lang.String param){
                            localCustDeceasedStatusTracker = param != null;
                                   
                                            this.localCustDeceasedStatus=param;
                                    

                               }
                            

                        /**
                        * field for CustCodeStatus
                        */

                        
                                    protected java.lang.String localCustCodeStatus ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustCodeStatusTracker = false ;

                           public boolean isCustCodeStatusSpecified(){
                               return localCustCodeStatusTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustCodeStatus(){
                               return localCustCodeStatus;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustCodeStatus
                               */
                               public void setCustCodeStatus(java.lang.String param){
                            localCustCodeStatusTracker = param != null;
                                   
                                            this.localCustCodeStatus=param;
                                    

                               }
                            

                        /**
                        * field for CustDesignation
                        */

                        
                                    protected java.lang.String localCustDesignation ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustDesignationTracker = false ;

                           public boolean isCustDesignationSpecified(){
                               return localCustDesignationTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustDesignation(){
                               return localCustDesignation;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustDesignation
                               */
                               public void setCustDesignation(java.lang.String param){
                            localCustDesignationTracker = param != null;
                                   
                                            this.localCustDesignation=param;
                                    

                               }
                            

                        /**
                        * field for CustLanguage
                        */

                        
                                    protected java.lang.String localCustLanguage ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustLanguageTracker = false ;

                           public boolean isCustLanguageSpecified(){
                               return localCustLanguageTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustLanguage(){
                               return localCustLanguage;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustLanguage
                               */
                               public void setCustLanguage(java.lang.String param){
                            localCustLanguageTracker = param != null;
                                   
                                            this.localCustLanguage=param;
                                    

                               }
                            

                        /**
                        * field for CustIncomeCategory
                        */

                        
                                    protected java.lang.String localCustIncomeCategory ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustIncomeCategoryTracker = false ;

                           public boolean isCustIncomeCategorySpecified(){
                               return localCustIncomeCategoryTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustIncomeCategory(){
                               return localCustIncomeCategory;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustIncomeCategory
                               */
                               public void setCustIncomeCategory(java.lang.String param){
                            localCustIncomeCategoryTracker = param != null;
                                   
                                            this.localCustIncomeCategory=param;
                                    

                               }
                            

                        /**
                        * field for CustSignatureType
                        */

                        
                                    protected java.lang.String localCustSignatureType ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustSignatureTypeTracker = false ;

                           public boolean isCustSignatureTypeSpecified(){
                               return localCustSignatureTypeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustSignatureType(){
                               return localCustSignatureType;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustSignatureType
                               */
                               public void setCustSignatureType(java.lang.String param){
                            localCustSignatureTypeTracker = param != null;
                                   
                                            this.localCustSignatureType=param;
                                    

                               }
                            

                        /**
                        * field for CustProfessionCategory
                        */

                        
                                    protected java.lang.String localCustProfessionCategory ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustProfessionCategoryTracker = false ;

                           public boolean isCustProfessionCategorySpecified(){
                               return localCustProfessionCategoryTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustProfessionCategory(){
                               return localCustProfessionCategory;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustProfessionCategory
                               */
                               public void setCustProfessionCategory(java.lang.String param){
                            localCustProfessionCategoryTracker = param != null;
                                   
                                            this.localCustProfessionCategory=param;
                                    

                               }
                            

                        /**
                        * field for CustITNum
                        */

                        
                                    protected java.lang.String localCustITNum ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustITNumTracker = false ;

                           public boolean isCustITNumSpecified(){
                               return localCustITNumTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustITNum(){
                               return localCustITNum;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustITNum
                               */
                               public void setCustITNum(java.lang.String param){
                            localCustITNumTracker = param != null;
                                   
                                            this.localCustITNum=param;
                                    

                               }
                            

                        /**
                        * field for CustPhone
                        */

                        
                                    protected java.lang.String localCustPhone ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustPhoneTracker = false ;

                           public boolean isCustPhoneSpecified(){
                               return localCustPhoneTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustPhone(){
                               return localCustPhone;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustPhone
                               */
                               public void setCustPhone(java.lang.String param){
                            localCustPhoneTracker = param != null;
                                   
                                            this.localCustPhone=param;
                                    

                               }
                            

                        /**
                        * field for CustPhoneOff
                        */

                        
                                    protected java.lang.String localCustPhoneOff ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustPhoneOffTracker = false ;

                           public boolean isCustPhoneOffSpecified(){
                               return localCustPhoneOffTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustPhoneOff(){
                               return localCustPhoneOff;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustPhoneOff
                               */
                               public void setCustPhoneOff(java.lang.String param){
                            localCustPhoneOffTracker = param != null;
                                   
                                            this.localCustPhoneOff=param;
                                    

                               }
                            

                        /**
                        * field for CustFax
                        */

                        
                                    protected java.lang.String localCustFax ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustFaxTracker = false ;

                           public boolean isCustFaxSpecified(){
                               return localCustFaxTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustFax(){
                               return localCustFax;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustFax
                               */
                               public void setCustFax(java.lang.String param){
                            localCustFaxTracker = param != null;
                                   
                                            this.localCustFax=param;
                                    

                               }
                            

                        /**
                        * field for CustMobile
                        */

                        
                                    protected java.lang.String localCustMobile ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustMobileTracker = false ;

                           public boolean isCustMobileSpecified(){
                               return localCustMobileTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustMobile(){
                               return localCustMobile;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustMobile
                               */
                               public void setCustMobile(java.lang.String param){
                            localCustMobileTracker = param != null;
                                   
                                            this.localCustMobile=param;
                                    

                               }
                            

                        /**
                        * field for CustEmail
                        */

                        
                                    protected java.lang.String localCustEmail ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustEmailTracker = false ;

                           public boolean isCustEmailSpecified(){
                               return localCustEmailTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustEmail(){
                               return localCustEmail;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustEmail
                               */
                               public void setCustEmail(java.lang.String param){
                            localCustEmailTracker = param != null;
                                   
                                            this.localCustEmail=param;
                                    

                               }
                            

                        /**
                        * field for CustStatus
                        */

                        
                                    protected java.lang.String localCustStatus ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustStatusTracker = false ;

                           public boolean isCustStatusSpecified(){
                               return localCustStatusTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustStatus(){
                               return localCustStatus;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustStatus
                               */
                               public void setCustStatus(java.lang.String param){
                            localCustStatusTracker = param != null;
                                   
                                            this.localCustStatus=param;
                                    

                               }
                            

                        /**
                        * field for CustType
                        */

                        
                                    protected java.lang.String localCustType ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustTypeTracker = false ;

                           public boolean isCustTypeSpecified(){
                               return localCustTypeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustType(){
                               return localCustType;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustType
                               */
                               public void setCustType(java.lang.String param){
                            localCustTypeTracker = param != null;
                                   
                                            this.localCustType=param;
                                    

                               }
                            

                        /**
                        * field for CustSex
                        */

                        
                                    protected java.lang.String localCustSex ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustSexTracker = false ;

                           public boolean isCustSexSpecified(){
                               return localCustSexTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustSex(){
                               return localCustSex;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustSex
                               */
                               public void setCustSex(java.lang.String param){
                            localCustSexTracker = param != null;
                                   
                                            this.localCustSex=param;
                                    

                               }
                            

                        /**
                        * field for CustMaritalStatus
                        */

                        
                                    protected java.lang.String localCustMaritalStatus ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustMaritalStatusTracker = false ;

                           public boolean isCustMaritalStatusSpecified(){
                               return localCustMaritalStatusTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustMaritalStatus(){
                               return localCustMaritalStatus;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustMaritalStatus
                               */
                               public void setCustMaritalStatus(java.lang.String param){
                            localCustMaritalStatusTracker = param != null;
                                   
                                            this.localCustMaritalStatus=param;
                                    

                               }
                            

                        /**
                        * field for CustDependantChildren
                        */

                        
                                    protected java.lang.String localCustDependantChildren ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustDependantChildrenTracker = false ;

                           public boolean isCustDependantChildrenSpecified(){
                               return localCustDependantChildrenTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustDependantChildren(){
                               return localCustDependantChildren;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustDependantChildren
                               */
                               public void setCustDependantChildren(java.lang.String param){
                            localCustDependantChildrenTracker = param != null;
                                   
                                            this.localCustDependantChildren=param;
                                    

                               }
                            

                        /**
                        * field for CustEthnicOrigin
                        */

                        
                                    protected java.lang.String localCustEthnicOrigin ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustEthnicOriginTracker = false ;

                           public boolean isCustEthnicOriginSpecified(){
                               return localCustEthnicOriginTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustEthnicOrigin(){
                               return localCustEthnicOrigin;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustEthnicOrigin
                               */
                               public void setCustEthnicOrigin(java.lang.String param){
                            localCustEthnicOriginTracker = param != null;
                                   
                                            this.localCustEthnicOrigin=param;
                                    

                               }
                            

                        /**
                        * field for CustNationality
                        */

                        
                                    protected java.lang.String localCustNationality ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustNationalityTracker = false ;

                           public boolean isCustNationalitySpecified(){
                               return localCustNationalityTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustNationality(){
                               return localCustNationality;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustNationality
                               */
                               public void setCustNationality(java.lang.String param){
                            localCustNationalityTracker = param != null;
                                   
                                            this.localCustNationality=param;
                                    

                               }
                            

                        /**
                        * field for CustBusinessRegNo
                        */

                        
                                    protected java.lang.String localCustBusinessRegNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustBusinessRegNoTracker = false ;

                           public boolean isCustBusinessRegNoSpecified(){
                               return localCustBusinessRegNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustBusinessRegNo(){
                               return localCustBusinessRegNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustBusinessRegNo
                               */
                               public void setCustBusinessRegNo(java.lang.String param){
                            localCustBusinessRegNoTracker = param != null;
                                   
                                            this.localCustBusinessRegNo=param;
                                    

                               }
                            

                        /**
                        * field for CustBusinessCategory
                        */

                        
                                    protected java.lang.String localCustBusinessCategory ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustBusinessCategoryTracker = false ;

                           public boolean isCustBusinessCategorySpecified(){
                               return localCustBusinessCategoryTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustBusinessCategory(){
                               return localCustBusinessCategory;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustBusinessCategory
                               */
                               public void setCustBusinessCategory(java.lang.String param){
                            localCustBusinessCategoryTracker = param != null;
                                   
                                            this.localCustBusinessCategory=param;
                                    

                               }
                            

                        /**
                        * field for CustBusinessType
                        */

                        
                                    protected java.lang.String localCustBusinessType ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustBusinessTypeTracker = false ;

                           public boolean isCustBusinessTypeSpecified(){
                               return localCustBusinessTypeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustBusinessType(){
                               return localCustBusinessType;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustBusinessType
                               */
                               public void setCustBusinessType(java.lang.String param){
                            localCustBusinessTypeTracker = param != null;
                                   
                                            this.localCustBusinessType=param;
                                    

                               }
                            

                        /**
                        * field for FlagStaff
                        */

                        
                                    protected java.lang.String localFlagStaff ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFlagStaffTracker = false ;

                           public boolean isFlagStaffSpecified(){
                               return localFlagStaffTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFlagStaff(){
                               return localFlagStaff;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FlagStaff
                               */
                               public void setFlagStaff(java.lang.String param){
                            localFlagStaffTracker = param != null;
                                   
                                            this.localFlagStaff=param;
                                    

                               }
                            

                        /**
                        * field for FlagMinor
                        */

                        
                                    protected java.lang.String localFlagMinor ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFlagMinorTracker = false ;

                           public boolean isFlagMinorSpecified(){
                               return localFlagMinorTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFlagMinor(){
                               return localFlagMinor;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FlagMinor
                               */
                               public void setFlagMinor(java.lang.String param){
                            localFlagMinorTracker = param != null;
                                   
                                            this.localFlagMinor=param;
                                    

                               }
                            

                        /**
                        * field for FlagMember
                        */

                        
                                    protected java.lang.String localFlagMember ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFlagMemberTracker = false ;

                           public boolean isFlagMemberSpecified(){
                               return localFlagMemberTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFlagMember(){
                               return localFlagMember;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FlagMember
                               */
                               public void setFlagMember(java.lang.String param){
                            localFlagMemberTracker = param != null;
                                   
                                            this.localFlagMember=param;
                                    

                               }
                            

                        /**
                        * field for FlagLocGlob
                        */

                        
                                    protected java.lang.String localFlagLocGlob ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFlagLocGlobTracker = false ;

                           public boolean isFlagLocGlobSpecified(){
                               return localFlagLocGlobTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFlagLocGlob(){
                               return localFlagLocGlob;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FlagLocGlob
                               */
                               public void setFlagLocGlob(java.lang.String param){
                            localFlagLocGlobTracker = param != null;
                                   
                                            this.localFlagLocGlob=param;
                                    

                               }
                            

                        /**
                        * field for FlagUnadv
                        */

                        
                                    protected java.lang.String localFlagUnadv ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFlagUnadvTracker = false ;

                           public boolean isFlagUnadvSpecified(){
                               return localFlagUnadvTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFlagUnadv(){
                               return localFlagUnadv;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FlagUnadv
                               */
                               public void setFlagUnadv(java.lang.String param){
                            localFlagUnadvTracker = param != null;
                                   
                                            this.localFlagUnadv=param;
                                    

                               }
                            

                        /**
                        * field for FlagDocComplete
                        */

                        
                                    protected java.lang.String localFlagDocComplete ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFlagDocCompleteTracker = false ;

                           public boolean isFlagDocCompleteSpecified(){
                               return localFlagDocCompleteTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFlagDocComplete(){
                               return localFlagDocComplete;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FlagDocComplete
                               */
                               public void setFlagDocComplete(java.lang.String param){
                            localFlagDocCompleteTracker = param != null;
                                   
                                            this.localFlagDocComplete=param;
                                    

                               }
                            

                        /**
                        * field for FlagKio
                        */

                        
                                    protected java.lang.String localFlagKio ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFlagKioTracker = false ;

                           public boolean isFlagKioSpecified(){
                               return localFlagKioTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFlagKio(){
                               return localFlagKio;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FlagKio
                               */
                               public void setFlagKio(java.lang.String param){
                            localFlagKioTracker = param != null;
                                   
                                            this.localFlagKio=param;
                                    

                               }
                            

                        /**
                        * field for FlagHoldMail
                        */

                        
                                    protected java.lang.String localFlagHoldMail ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFlagHoldMailTracker = false ;

                           public boolean isFlagHoldMailSpecified(){
                               return localFlagHoldMailTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFlagHoldMail(){
                               return localFlagHoldMail;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FlagHoldMail
                               */
                               public void setFlagHoldMail(java.lang.String param){
                            localFlagHoldMailTracker = param != null;
                                   
                                            this.localFlagHoldMail=param;
                                    

                               }
                            

                        /**
                        * field for CodMntOption
                        */

                        
                                    protected java.lang.String localCodMntOption ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCodMntOptionTracker = false ;

                           public boolean isCodMntOptionSpecified(){
                               return localCodMntOptionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCodMntOption(){
                               return localCodMntOption;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CodMntOption
                               */
                               public void setCodMntOption(java.lang.String param){
                            localCodMntOptionTracker = param != null;
                                   
                                            this.localCodMntOption=param;
                                    

                               }
                            

                        /**
                        * field for CodLastMntMakerId
                        */

                        
                                    protected java.lang.String localCodLastMntMakerId ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCodLastMntMakerIdTracker = false ;

                           public boolean isCodLastMntMakerIdSpecified(){
                               return localCodLastMntMakerIdTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCodLastMntMakerId(){
                               return localCodLastMntMakerId;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CodLastMntMakerId
                               */
                               public void setCodLastMntMakerId(java.lang.String param){
                            localCodLastMntMakerIdTracker = param != null;
                                   
                                            this.localCodLastMntMakerId=param;
                                    

                               }
                            

                        /**
                        * field for CodLastMntCheckerId
                        */

                        
                                    protected java.lang.String localCodLastMntCheckerId ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCodLastMntCheckerIdTracker = false ;

                           public boolean isCodLastMntCheckerIdSpecified(){
                               return localCodLastMntCheckerIdTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCodLastMntCheckerId(){
                               return localCodLastMntCheckerId;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CodLastMntCheckerId
                               */
                               public void setCodLastMntCheckerId(java.lang.String param){
                            localCodLastMntCheckerIdTracker = param != null;
                                   
                                            this.localCodLastMntCheckerId=param;
                                    

                               }
                            

                        /**
                        * field for CodOfficerId
                        */

                        
                                    protected java.lang.String localCodOfficerId ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCodOfficerIdTracker = false ;

                           public boolean isCodOfficerIdSpecified(){
                               return localCodOfficerIdTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCodOfficerId(){
                               return localCodOfficerId;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CodOfficerId
                               */
                               public void setCodOfficerId(java.lang.String param){
                            localCodOfficerIdTracker = param != null;
                                   
                                            this.localCodOfficerId=param;
                                    

                               }
                            

                        /**
                        * field for CodMemberNo
                        */

                        
                                    protected java.lang.String localCodMemberNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCodMemberNoTracker = false ;

                           public boolean isCodMemberNoSpecified(){
                               return localCodMemberNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCodMemberNo(){
                               return localCodMemberNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CodMemberNo
                               */
                               public void setCodMemberNo(java.lang.String param){
                            localCodMemberNoTracker = param != null;
                                   
                                            this.localCodMemberNo=param;
                                    

                               }
                            

                        /**
                        * field for CodReport1
                        */

                        
                                    protected java.lang.String localCodReport1 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCodReport1Tracker = false ;

                           public boolean isCodReport1Specified(){
                               return localCodReport1Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCodReport1(){
                               return localCodReport1;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CodReport1
                               */
                               public void setCodReport1(java.lang.String param){
                            localCodReport1Tracker = param != null;
                                   
                                            this.localCodReport1=param;
                                    

                               }
                            

                        /**
                        * field for CodReport2
                        */

                        
                                    protected java.lang.String localCodReport2 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCodReport2Tracker = false ;

                           public boolean isCodReport2Specified(){
                               return localCodReport2Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCodReport2(){
                               return localCodReport2;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CodReport2
                               */
                               public void setCodReport2(java.lang.String param){
                            localCodReport2Tracker = param != null;
                                   
                                            this.localCodReport2=param;
                                    

                               }
                            

                        /**
                        * field for CodReport3
                        */

                        
                                    protected java.lang.String localCodReport3 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCodReport3Tracker = false ;

                           public boolean isCodReport3Specified(){
                               return localCodReport3Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCodReport3(){
                               return localCodReport3;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CodReport3
                               */
                               public void setCodReport3(java.lang.String param){
                            localCodReport3Tracker = param != null;
                                   
                                            this.localCodReport3=param;
                                    

                               }
                            

                        /**
                        * field for CodLiabNo
                        */

                        
                                    protected java.lang.String localCodLiabNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCodLiabNoTracker = false ;

                           public boolean isCodLiabNoSpecified(){
                               return localCodLiabNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCodLiabNo(){
                               return localCodLiabNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CodLiabNo
                               */
                               public void setCodLiabNo(java.lang.String param){
                            localCodLiabNoTracker = param != null;
                                   
                                            this.localCodLiabNo=param;
                                    

                               }
                            

                        /**
                        * field for CreditRating
                        */

                        
                                    protected java.lang.String localCreditRating ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCreditRatingTracker = false ;

                           public boolean isCreditRatingSpecified(){
                               return localCreditRatingTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCreditRating(){
                               return localCreditRating;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CreditRating
                               */
                               public void setCreditRating(java.lang.String param){
                            localCreditRatingTracker = param != null;
                                   
                                            this.localCreditRating=param;
                                    

                               }
                            

                        /**
                        * field for DateRevision
                        */

                        
                                    protected java.lang.String localDateRevision ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDateRevisionTracker = false ;

                           public boolean isDateRevisionSpecified(){
                               return localDateRevisionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDateRevision(){
                               return localDateRevision;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DateRevision
                               */
                               public void setDateRevision(java.lang.String param){
                            localDateRevisionTracker = param != null;
                                   
                                            this.localDateRevision=param;
                                    

                               }
                            

                        /**
                        * field for FxCustCleanRiskLimit
                        */

                        
                                    protected java.lang.String localFxCustCleanRiskLimit ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFxCustCleanRiskLimitTracker = false ;

                           public boolean isFxCustCleanRiskLimitSpecified(){
                               return localFxCustCleanRiskLimitTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFxCustCleanRiskLimit(){
                               return localFxCustCleanRiskLimit;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FxCustCleanRiskLimit
                               */
                               public void setFxCustCleanRiskLimit(java.lang.String param){
                            localFxCustCleanRiskLimitTracker = param != null;
                                   
                                            this.localFxCustCleanRiskLimit=param;
                                    

                               }
                            

                        /**
                        * field for FxCleanRiskLimit
                        */

                        
                                    protected java.lang.String localFxCleanRiskLimit ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFxCleanRiskLimitTracker = false ;

                           public boolean isFxCleanRiskLimitSpecified(){
                               return localFxCleanRiskLimitTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFxCleanRiskLimit(){
                               return localFxCleanRiskLimit;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FxCleanRiskLimit
                               */
                               public void setFxCleanRiskLimit(java.lang.String param){
                            localFxCleanRiskLimitTracker = param != null;
                                   
                                            this.localFxCleanRiskLimit=param;
                                    

                               }
                            

                        /**
                        * field for AmtLimitTot
                        */

                        
                                    protected java.lang.String localAmtLimitTot ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAmtLimitTotTracker = false ;

                           public boolean isAmtLimitTotSpecified(){
                               return localAmtLimitTotTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAmtLimitTot(){
                               return localAmtLimitTot;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AmtLimitTot
                               */
                               public void setAmtLimitTot(java.lang.String param){
                            localAmtLimitTotTracker = param != null;
                                   
                                            this.localAmtLimitTot=param;
                                    

                               }
                            

                        /**
                        * field for CodCcyLimit
                        */

                        
                                    protected java.lang.String localCodCcyLimit ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCodCcyLimitTracker = false ;

                           public boolean isCodCcyLimitSpecified(){
                               return localCodCcyLimitTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCodCcyLimit(){
                               return localCodCcyLimit;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CodCcyLimit
                               */
                               public void setCodCcyLimit(java.lang.String param){
                            localCodCcyLimitTracker = param != null;
                                   
                                            this.localCodCcyLimit=param;
                                    

                               }
                            

                        /**
                        * field for SecCustCleanRiskLlimit
                        */

                        
                                    protected java.lang.String localSecCustCleanRiskLlimit ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSecCustCleanRiskLlimitTracker = false ;

                           public boolean isSecCustCleanRiskLlimitSpecified(){
                               return localSecCustCleanRiskLlimitTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSecCustCleanRiskLlimit(){
                               return localSecCustCleanRiskLlimit;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SecCustCleanRiskLlimit
                               */
                               public void setSecCustCleanRiskLlimit(java.lang.String param){
                            localSecCustCleanRiskLlimitTracker = param != null;
                                   
                                            this.localSecCustCleanRiskLlimit=param;
                                    

                               }
                            

                        /**
                        * field for SecCleanRiskLimit
                        */

                        
                                    protected java.lang.String localSecCleanRiskLimit ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSecCleanRiskLimitTracker = false ;

                           public boolean isSecCleanRiskLimitSpecified(){
                               return localSecCleanRiskLimitTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSecCleanRiskLimit(){
                               return localSecCleanRiskLimit;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SecCleanRiskLimit
                               */
                               public void setSecCleanRiskLimit(java.lang.String param){
                            localSecCleanRiskLimitTracker = param != null;
                                   
                                            this.localSecCleanRiskLimit=param;
                                    

                               }
                            

                        /**
                        * field for SecCustPstlRiskLlimit
                        */

                        
                                    protected java.lang.String localSecCustPstlRiskLlimit ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSecCustPstlRiskLlimitTracker = false ;

                           public boolean isSecCustPstlRiskLlimitSpecified(){
                               return localSecCustPstlRiskLlimitTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSecCustPstlRiskLlimit(){
                               return localSecCustPstlRiskLlimit;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SecCustPstlRiskLlimit
                               */
                               public void setSecCustPstlRiskLlimit(java.lang.String param){
                            localSecCustPstlRiskLlimitTracker = param != null;
                                   
                                            this.localSecCustPstlRiskLlimit=param;
                                    

                               }
                            

                        /**
                        * field for SecPstlRiskLlimit
                        */

                        
                                    protected java.lang.String localSecPstlRiskLlimit ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSecPstlRiskLlimitTracker = false ;

                           public boolean isSecPstlRiskLlimitSpecified(){
                               return localSecPstlRiskLlimitTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSecPstlRiskLlimit(){
                               return localSecPstlRiskLlimit;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SecPstlRiskLlimit
                               */
                               public void setSecPstlRiskLlimit(java.lang.String param){
                            localSecPstlRiskLlimitTracker = param != null;
                                   
                                            this.localSecPstlRiskLlimit=param;
                                    

                               }
                            

                        /**
                        * field for CodEmployeeId
                        */

                        
                                    protected java.lang.String localCodEmployeeId ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCodEmployeeIdTracker = false ;

                           public boolean isCodEmployeeIdSpecified(){
                               return localCodEmployeeIdTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCodEmployeeId(){
                               return localCodEmployeeId;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CodEmployeeId
                               */
                               public void setCodEmployeeId(java.lang.String param){
                            localCodEmployeeIdTracker = param != null;
                                   
                                            this.localCodEmployeeId=param;
                                    

                               }
                            

                        /**
                        * field for GuardianType
                        */

                        
                                    protected java.lang.String localGuardianType ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localGuardianTypeTracker = false ;

                           public boolean isGuardianTypeSpecified(){
                               return localGuardianTypeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getGuardianType(){
                               return localGuardianType;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param GuardianType
                               */
                               public void setGuardianType(java.lang.String param){
                            localGuardianTypeTracker = param != null;
                                   
                                            this.localGuardianType=param;
                                    

                               }
                            

                        /**
                        * field for AcctNoDefault
                        */

                        
                                    protected java.lang.String localAcctNoDefault ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAcctNoDefaultTracker = false ;

                           public boolean isAcctNoDefaultSpecified(){
                               return localAcctNoDefaultTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAcctNoDefault(){
                               return localAcctNoDefault;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AcctNoDefault
                               */
                               public void setAcctNoDefault(java.lang.String param){
                            localAcctNoDefaultTracker = param != null;
                                   
                                            this.localAcctNoDefault=param;
                                    

                               }
                            

                        /**
                        * field for TxtCustResidence
                        */

                        
                                    protected java.lang.String localTxtCustResidence ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTxtCustResidenceTracker = false ;

                           public boolean isTxtCustResidenceSpecified(){
                               return localTxtCustResidenceTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTxtCustResidence(){
                               return localTxtCustResidence;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TxtCustResidence
                               */
                               public void setTxtCustResidence(java.lang.String param){
                            localTxtCustResidenceTracker = param != null;
                                   
                                            this.localTxtCustResidence=param;
                                    

                               }
                            

                        /**
                        * field for AflIssueDate
                        */

                        
                                    protected java.lang.String localAflIssueDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAflIssueDateTracker = false ;

                           public boolean isAflIssueDateSpecified(){
                               return localAflIssueDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAflIssueDate(){
                               return localAflIssueDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AflIssueDate
                               */
                               public void setAflIssueDate(java.lang.String param){
                            localAflIssueDateTracker = param != null;
                                   
                                            this.localAflIssueDate=param;
                                    

                               }
                            

                        /**
                        * field for AflExpiryDate
                        */

                        
                                    protected java.lang.String localAflExpiryDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAflExpiryDateTracker = false ;

                           public boolean isAflExpiryDateSpecified(){
                               return localAflExpiryDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAflExpiryDate(){
                               return localAflExpiryDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AflExpiryDate
                               */
                               public void setAflExpiryDate(java.lang.String param){
                            localAflExpiryDateTracker = param != null;
                                   
                                            this.localAflExpiryDate=param;
                                    

                               }
                            

                        /**
                        * field for AflEffectiveDate
                        */

                        
                                    protected java.lang.String localAflEffectiveDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAflEffectiveDateTracker = false ;

                           public boolean isAflEffectiveDateSpecified(){
                               return localAflEffectiveDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAflEffectiveDate(){
                               return localAflEffectiveDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AflEffectiveDate
                               */
                               public void setAflEffectiveDate(java.lang.String param){
                            localAflEffectiveDateTracker = param != null;
                                   
                                            this.localAflEffectiveDate=param;
                                    

                               }
                            

                        /**
                        * field for LastRenewDate
                        */

                        
                                    protected java.lang.String localLastRenewDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLastRenewDateTracker = false ;

                           public boolean isLastRenewDateSpecified(){
                               return localLastRenewDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLastRenewDate(){
                               return localLastRenewDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LastRenewDate
                               */
                               public void setLastRenewDate(java.lang.String param){
                            localLastRenewDateTracker = param != null;
                                   
                                            this.localLastRenewDate=param;
                                    

                               }
                            

                        /**
                        * field for RefHoldPhone
                        */

                        
                                    protected java.lang.String localRefHoldPhone ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRefHoldPhoneTracker = false ;

                           public boolean isRefHoldPhoneSpecified(){
                               return localRefHoldPhoneTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRefHoldPhone(){
                               return localRefHoldPhone;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RefHoldPhone
                               */
                               public void setRefHoldPhone(java.lang.String param){
                            localRefHoldPhoneTracker = param != null;
                                   
                                            this.localRefHoldPhone=param;
                                    

                               }
                            

                        /**
                        * field for RefHoldPhoneOff
                        */

                        
                                    protected java.lang.String localRefHoldPhoneOff ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRefHoldPhoneOffTracker = false ;

                           public boolean isRefHoldPhoneOffSpecified(){
                               return localRefHoldPhoneOffTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRefHoldPhoneOff(){
                               return localRefHoldPhoneOff;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RefHoldPhoneOff
                               */
                               public void setRefHoldPhoneOff(java.lang.String param){
                            localRefHoldPhoneOffTracker = param != null;
                                   
                                            this.localRefHoldPhoneOff=param;
                                    

                               }
                            

                        /**
                        * field for RefHoldFax
                        */

                        
                                    protected java.lang.String localRefHoldFax ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRefHoldFaxTracker = false ;

                           public boolean isRefHoldFaxSpecified(){
                               return localRefHoldFaxTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRefHoldFax(){
                               return localRefHoldFax;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RefHoldFax
                               */
                               public void setRefHoldFax(java.lang.String param){
                            localRefHoldFaxTracker = param != null;
                                   
                                            this.localRefHoldFax=param;
                                    

                               }
                            

                        /**
                        * field for RefHoldMobile
                        */

                        
                                    protected java.lang.String localRefHoldMobile ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRefHoldMobileTracker = false ;

                           public boolean isRefHoldMobileSpecified(){
                               return localRefHoldMobileTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRefHoldMobile(){
                               return localRefHoldMobile;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RefHoldMobile
                               */
                               public void setRefHoldMobile(java.lang.String param){
                            localRefHoldMobileTracker = param != null;
                                   
                                            this.localRefHoldMobile=param;
                                    

                               }
                            

                        /**
                        * field for RefHoldEmail
                        */

                        
                                    protected java.lang.String localRefHoldEmail ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRefHoldEmailTracker = false ;

                           public boolean isRefHoldEmailSpecified(){
                               return localRefHoldEmailTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRefHoldEmail(){
                               return localRefHoldEmail;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RefHoldEmail
                               */
                               public void setRefHoldEmail(java.lang.String param){
                            localRefHoldEmailTracker = param != null;
                                   
                                            this.localRefHoldEmail=param;
                                    

                               }
                            

                        /**
                        * field for CustCitizenshipId
                        */

                        
                                    protected java.lang.String localCustCitizenshipId ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustCitizenshipIdTracker = false ;

                           public boolean isCustCitizenshipIdSpecified(){
                               return localCustCitizenshipIdTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustCitizenshipId(){
                               return localCustCitizenshipId;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustCitizenshipId
                               */
                               public void setCustCitizenshipId(java.lang.String param){
                            localCustCitizenshipIdTracker = param != null;
                                   
                                            this.localCustCitizenshipId=param;
                                    

                               }
                            

                        /**
                        * field for MisCodeDetails
                        */

                        
                                    protected MisCodeDetails_type0 localMisCodeDetails ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMisCodeDetailsTracker = false ;

                           public boolean isMisCodeDetailsSpecified(){
                               return localMisCodeDetailsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return MisCodeDetails_type0
                           */
                           public  MisCodeDetails_type0 getMisCodeDetails(){
                               return localMisCodeDetails;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MisCodeDetails
                               */
                               public void setMisCodeDetails(MisCodeDetails_type0 param){
                            localMisCodeDetailsTracker = param != null;
                                   
                                            this.localMisCodeDetails=param;
                                    

                               }
                            

                        /**
                        * field for CustomerAdresses
                        */

                        
                                    protected CustomerAdresses_type0 localCustomerAdresses ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustomerAdressesTracker = false ;

                           public boolean isCustomerAdressesSpecified(){
                               return localCustomerAdressesTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return CustomerAdresses_type0
                           */
                           public  CustomerAdresses_type0 getCustomerAdresses(){
                               return localCustomerAdresses;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustomerAdresses
                               */
                               public void setCustomerAdresses(CustomerAdresses_type0 param){
                            localCustomerAdressesTracker = param != null;
                                   
                                            this.localCustomerAdresses=param;
                                    

                               }
                            

                        /**
                        * field for SignatoryInfo
                        */

                        
                                    protected SignatoryInfo_type0 localSignatoryInfo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSignatoryInfoTracker = false ;

                           public boolean isSignatoryInfoSpecified(){
                               return localSignatoryInfoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return SignatoryInfo_type0
                           */
                           public  SignatoryInfo_type0 getSignatoryInfo(){
                               return localSignatoryInfo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SignatoryInfo
                               */
                               public void setSignatoryInfo(SignatoryInfo_type0 param){
                            localSignatoryInfoTracker = param != null;
                                   
                                            this.localSignatoryInfo=param;
                                    

                               }
                            

                        /**
                        * field for CustomerCBRCodes
                        */

                        
                                    protected CustomerCBRCodes_type0 localCustomerCBRCodes ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustomerCBRCodesTracker = false ;

                           public boolean isCustomerCBRCodesSpecified(){
                               return localCustomerCBRCodesTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return CustomerCBRCodes_type0
                           */
                           public  CustomerCBRCodes_type0 getCustomerCBRCodes(){
                               return localCustomerCBRCodes;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustomerCBRCodes
                               */
                               public void setCustomerCBRCodes(CustomerCBRCodes_type0 param){
                            localCustomerCBRCodesTracker = param != null;
                                   
                                            this.localCustomerCBRCodes=param;
                                    

                               }
                            

                        /**
                        * field for CustomerAdditionalDetails
                        */

                        
                                    protected CustomerAdditionalDetails_type0 localCustomerAdditionalDetails ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustomerAdditionalDetailsTracker = false ;

                           public boolean isCustomerAdditionalDetailsSpecified(){
                               return localCustomerAdditionalDetailsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return CustomerAdditionalDetails_type0
                           */
                           public  CustomerAdditionalDetails_type0 getCustomerAdditionalDetails(){
                               return localCustomerAdditionalDetails;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustomerAdditionalDetails
                               */
                               public void setCustomerAdditionalDetails(CustomerAdditionalDetails_type0 param){
                            localCustomerAdditionalDetailsTracker = param != null;
                                   
                                            this.localCustomerAdditionalDetails=param;
                                    

                               }
                            

                        /**
                        * field for BorrowerSubsidiary
                        */

                        
                                    protected java.lang.String localBorrowerSubsidiary ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBorrowerSubsidiaryTracker = false ;

                           public boolean isBorrowerSubsidiarySpecified(){
                               return localBorrowerSubsidiaryTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBorrowerSubsidiary(){
                               return localBorrowerSubsidiary;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BorrowerSubsidiary
                               */
                               public void setBorrowerSubsidiary(java.lang.String param){
                            localBorrowerSubsidiaryTracker = param != null;
                                   
                                            this.localBorrowerSubsidiary=param;
                                    

                               }
                            

                        /**
                        * field for GroupUltimateParent
                        */

                        
                                    protected java.lang.String localGroupUltimateParent ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localGroupUltimateParentTracker = false ;

                           public boolean isGroupUltimateParentSpecified(){
                               return localGroupUltimateParentTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getGroupUltimateParent(){
                               return localGroupUltimateParent;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param GroupUltimateParent
                               */
                               public void setGroupUltimateParent(java.lang.String param){
                            localGroupUltimateParentTracker = param != null;
                                   
                                            this.localGroupUltimateParent=param;
                                    

                               }
                            

                        /**
                        * field for LegalEntityIdentifierNumber
                        */

                        
                                    protected java.lang.String localLegalEntityIdentifierNumber ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLegalEntityIdentifierNumberTracker = false ;

                           public boolean isLegalEntityIdentifierNumberSpecified(){
                               return localLegalEntityIdentifierNumberTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLegalEntityIdentifierNumber(){
                               return localLegalEntityIdentifierNumber;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LegalEntityIdentifierNumber
                               */
                               public void setLegalEntityIdentifierNumber(java.lang.String param){
                            localLegalEntityIdentifierNumberTracker = param != null;
                                   
                                            this.localLegalEntityIdentifierNumber=param;
                                    

                               }
                            

                        /**
                        * field for ModifyCorporateCustDtls
                        */

                        
                                    protected ModifyCorporateCustDtls_type0 localModifyCorporateCustDtls ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localModifyCorporateCustDtlsTracker = false ;

                           public boolean isModifyCorporateCustDtlsSpecified(){
                               return localModifyCorporateCustDtlsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return ModifyCorporateCustDtls_type0
                           */
                           public  ModifyCorporateCustDtls_type0 getModifyCorporateCustDtls(){
                               return localModifyCorporateCustDtls;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ModifyCorporateCustDtls
                               */
                               public void setModifyCorporateCustDtls(ModifyCorporateCustDtls_type0 param){
                            localModifyCorporateCustDtlsTracker = param != null;
                                   
                                            this.localModifyCorporateCustDtls=param;
                                    

                               }
                            

                        /**
                        * field for CustEducationalQualification
                        */

                        
                                    protected java.lang.String localCustEducationalQualification ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustEducationalQualificationTracker = false ;

                           public boolean isCustEducationalQualificationSpecified(){
                               return localCustEducationalQualificationTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustEducationalQualification(){
                               return localCustEducationalQualification;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustEducationalQualification
                               */
                               public void setCustEducationalQualification(java.lang.String param){
                            localCustEducationalQualificationTracker = param != null;
                                   
                                            this.localCustEducationalQualification=param;
                                    

                               }
                            

                        /**
                        * field for CustomerProductRelationInfo
                        */

                        
                                    protected CustomerProductRelationInfo_type0 localCustomerProductRelationInfo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustomerProductRelationInfoTracker = false ;

                           public boolean isCustomerProductRelationInfoSpecified(){
                               return localCustomerProductRelationInfoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return CustomerProductRelationInfo_type0
                           */
                           public  CustomerProductRelationInfo_type0 getCustomerProductRelationInfo(){
                               return localCustomerProductRelationInfo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustomerProductRelationInfo
                               */
                               public void setCustomerProductRelationInfo(CustomerProductRelationInfo_type0 param){
                            localCustomerProductRelationInfoTracker = param != null;
                                   
                                            this.localCustomerProductRelationInfo=param;
                                    

                               }
                            

                        /**
                        * field for CustAccountOpenPurpose
                        * This was an Array!
                        */

                        
                                    protected CustAccountOpenPurpose_type0[] localCustAccountOpenPurpose ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustAccountOpenPurposeTracker = false ;

                           public boolean isCustAccountOpenPurposeSpecified(){
                               return localCustAccountOpenPurposeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return CustAccountOpenPurpose_type0[]
                           */
                           public  CustAccountOpenPurpose_type0[] getCustAccountOpenPurpose(){
                               return localCustAccountOpenPurpose;
                           }

                           
                        


                               
                              /**
                               * validate the array for CustAccountOpenPurpose
                               */
                              protected void validateCustAccountOpenPurpose(CustAccountOpenPurpose_type0[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param CustAccountOpenPurpose
                              */
                              public void setCustAccountOpenPurpose(CustAccountOpenPurpose_type0[] param){
                              
                                   validateCustAccountOpenPurpose(param);

                               localCustAccountOpenPurposeTracker = param != null;
                                      
                                      this.localCustAccountOpenPurpose=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param CustAccountOpenPurpose_type0
                             */
                             public void addCustAccountOpenPurpose(CustAccountOpenPurpose_type0 param){
                                   if (localCustAccountOpenPurpose == null){
                                   localCustAccountOpenPurpose = new CustAccountOpenPurpose_type0[]{};
                                   }

                            
                                 //update the setting tracker
                                localCustAccountOpenPurposeTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localCustAccountOpenPurpose);
                               list.add(param);
                               this.localCustAccountOpenPurpose =
                             (CustAccountOpenPurpose_type0[])list.toArray(
                            new CustAccountOpenPurpose_type0[list.size()]);

                             }
                             

                        /**
                        * field for WebsiteAddress
                        */

                        
                                    protected java.lang.String localWebsiteAddress ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localWebsiteAddressTracker = false ;

                           public boolean isWebsiteAddressSpecified(){
                               return localWebsiteAddressTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getWebsiteAddress(){
                               return localWebsiteAddress;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param WebsiteAddress
                               */
                               public void setWebsiteAddress(java.lang.String param){
                            localWebsiteAddressTracker = param != null;
                                   
                                            this.localWebsiteAddress=param;
                                    

                               }
                            

                        /**
                        * field for SourceOfincome
                        */

                        
                                    protected java.lang.String localSourceOfincome ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSourceOfincomeTracker = false ;

                           public boolean isSourceOfincomeSpecified(){
                               return localSourceOfincomeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSourceOfincome(){
                               return localSourceOfincome;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SourceOfincome
                               */
                               public void setSourceOfincome(java.lang.String param){
                            localSourceOfincomeTracker = param != null;
                                   
                                            this.localSourceOfincome=param;
                                    

                               }
                            

                        /**
                        * field for NatureOfBusiness
                        */

                        
                                    protected java.lang.String localNatureOfBusiness ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNatureOfBusinessTracker = false ;

                           public boolean isNatureOfBusinessSpecified(){
                               return localNatureOfBusinessTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNatureOfBusiness(){
                               return localNatureOfBusiness;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NatureOfBusiness
                               */
                               public void setNatureOfBusiness(java.lang.String param){
                            localNatureOfBusinessTracker = param != null;
                                   
                                            this.localNatureOfBusiness=param;
                                    

                               }
                            

                        /**
                        * field for EmploymentType
                        */

                        
                                    protected java.lang.String localEmploymentType ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmploymentTypeTracker = false ;

                           public boolean isEmploymentTypeSpecified(){
                               return localEmploymentTypeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEmploymentType(){
                               return localEmploymentType;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EmploymentType
                               */
                               public void setEmploymentType(java.lang.String param){
                            localEmploymentTypeTracker = param != null;
                                   
                                            this.localEmploymentType=param;
                                    

                               }
                            

                        /**
                        * field for ResLandmark
                        */

                        
                                    protected java.lang.String localResLandmark ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localResLandmarkTracker = false ;

                           public boolean isResLandmarkSpecified(){
                               return localResLandmarkTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getResLandmark(){
                               return localResLandmark;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ResLandmark
                               */
                               public void setResLandmark(java.lang.String param){
                            localResLandmarkTracker = param != null;
                                   
                                            this.localResLandmark=param;
                                    

                               }
                            

                        /**
                        * field for ResLatitude
                        */

                        
                                    protected java.lang.String localResLatitude ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localResLatitudeTracker = false ;

                           public boolean isResLatitudeSpecified(){
                               return localResLatitudeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getResLatitude(){
                               return localResLatitude;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ResLatitude
                               */
                               public void setResLatitude(java.lang.String param){
                            localResLatitudeTracker = param != null;
                                   
                                            this.localResLatitude=param;
                                    

                               }
                            

                        /**
                        * field for ResLongitude
                        */

                        
                                    protected java.lang.String localResLongitude ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localResLongitudeTracker = false ;

                           public boolean isResLongitudeSpecified(){
                               return localResLongitudeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getResLongitude(){
                               return localResLongitude;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ResLongitude
                               */
                               public void setResLongitude(java.lang.String param){
                            localResLongitudeTracker = param != null;
                                   
                                            this.localResLongitude=param;
                                    

                               }
                            

                        /**
                        * field for MailingLandmark
                        */

                        
                                    protected java.lang.String localMailingLandmark ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMailingLandmarkTracker = false ;

                           public boolean isMailingLandmarkSpecified(){
                               return localMailingLandmarkTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMailingLandmark(){
                               return localMailingLandmark;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MailingLandmark
                               */
                               public void setMailingLandmark(java.lang.String param){
                            localMailingLandmarkTracker = param != null;
                                   
                                            this.localMailingLandmark=param;
                                    

                               }
                            

                        /**
                        * field for MailingLatitude
                        */

                        
                                    protected java.lang.String localMailingLatitude ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMailingLatitudeTracker = false ;

                           public boolean isMailingLatitudeSpecified(){
                               return localMailingLatitudeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMailingLatitude(){
                               return localMailingLatitude;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MailingLatitude
                               */
                               public void setMailingLatitude(java.lang.String param){
                            localMailingLatitudeTracker = param != null;
                                   
                                            this.localMailingLatitude=param;
                                    

                               }
                            

                        /**
                        * field for MailingLongitude
                        */

                        
                                    protected java.lang.String localMailingLongitude ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMailingLongitudeTracker = false ;

                           public boolean isMailingLongitudeSpecified(){
                               return localMailingLongitudeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMailingLongitude(){
                               return localMailingLongitude;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MailingLongitude
                               */
                               public void setMailingLongitude(java.lang.String param){
                            localMailingLongitudeTracker = param != null;
                                   
                                            this.localMailingLongitude=param;
                                    

                               }
                            

                        /**
                        * field for EidaExpiryDate
                        */

                        
                                    protected java.lang.String localEidaExpiryDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEidaExpiryDateTracker = false ;

                           public boolean isEidaExpiryDateSpecified(){
                               return localEidaExpiryDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEidaExpiryDate(){
                               return localEidaExpiryDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EidaExpiryDate
                               */
                               public void setEidaExpiryDate(java.lang.String param){
                            localEidaExpiryDateTracker = param != null;
                                   
                                            this.localEidaExpiryDate=param;
                                    

                               }
                            

                        /**
                        * field for CountryOfIncome
                        */

                        
                                    protected java.lang.String localCountryOfIncome ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCountryOfIncomeTracker = false ;

                           public boolean isCountryOfIncomeSpecified(){
                               return localCountryOfIncomeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCountryOfIncome(){
                               return localCountryOfIncome;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CountryOfIncome
                               */
                               public void setCountryOfIncome(java.lang.String param){
                            localCountryOfIncomeTracker = param != null;
                                   
                                            this.localCountryOfIncome=param;
                                    

                               }
                            

                        /**
                        * field for AnnualIncome
                        */

                        
                                    protected java.lang.String localAnnualIncome ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAnnualIncomeTracker = false ;

                           public boolean isAnnualIncomeSpecified(){
                               return localAnnualIncomeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAnnualIncome(){
                               return localAnnualIncome;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AnnualIncome
                               */
                               public void setAnnualIncome(java.lang.String param){
                            localAnnualIncomeTracker = param != null;
                                   
                                            this.localAnnualIncome=param;
                                    

                               }
                            

                        /**
                        * field for AnnualIncomeCurrency
                        */

                        
                                    protected java.lang.String localAnnualIncomeCurrency ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAnnualIncomeCurrencyTracker = false ;

                           public boolean isAnnualIncomeCurrencySpecified(){
                               return localAnnualIncomeCurrencyTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAnnualIncomeCurrency(){
                               return localAnnualIncomeCurrency;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AnnualIncomeCurrency
                               */
                               public void setAnnualIncomeCurrency(java.lang.String param){
                            localAnnualIncomeCurrencyTracker = param != null;
                                   
                                            this.localAnnualIncomeCurrency=param;
                                    

                               }
                            

                        /**
                        * field for DualNationalityFlag
                        */

                        
                                    protected java.lang.String localDualNationalityFlag ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDualNationalityFlagTracker = false ;

                           public boolean isDualNationalityFlagSpecified(){
                               return localDualNationalityFlagTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDualNationalityFlag(){
                               return localDualNationalityFlag;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DualNationalityFlag
                               */
                               public void setDualNationalityFlag(java.lang.String param){
                            localDualNationalityFlagTracker = param != null;
                                   
                                            this.localDualNationalityFlag=param;
                                    

                               }
                            

                        /**
                        * field for SecondNationality
                        */

                        
                                    protected java.lang.String localSecondNationality ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSecondNationalityTracker = false ;

                           public boolean isSecondNationalitySpecified(){
                               return localSecondNationalityTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSecondNationality(){
                               return localSecondNationality;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SecondNationality
                               */
                               public void setSecondNationality(java.lang.String param){
                            localSecondNationalityTracker = param != null;
                                   
                                            this.localSecondNationality=param;
                                    

                               }
                            

                        /**
                        * field for PermLandmark
                        */

                        
                                    protected java.lang.String localPermLandmark ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPermLandmarkTracker = false ;

                           public boolean isPermLandmarkSpecified(){
                               return localPermLandmarkTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPermLandmark(){
                               return localPermLandmark;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PermLandmark
                               */
                               public void setPermLandmark(java.lang.String param){
                            localPermLandmarkTracker = param != null;
                                   
                                            this.localPermLandmark=param;
                                    

                               }
                            

                        /**
                        * field for PermLatitude
                        */

                        
                                    protected java.lang.String localPermLatitude ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPermLatitudeTracker = false ;

                           public boolean isPermLatitudeSpecified(){
                               return localPermLatitudeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPermLatitude(){
                               return localPermLatitude;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PermLatitude
                               */
                               public void setPermLatitude(java.lang.String param){
                            localPermLatitudeTracker = param != null;
                                   
                                            this.localPermLatitude=param;
                                    

                               }
                            

                        /**
                        * field for PermLongitude
                        */

                        
                                    protected java.lang.String localPermLongitude ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPermLongitudeTracker = false ;

                           public boolean isPermLongitudeSpecified(){
                               return localPermLongitudeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPermLongitude(){
                               return localPermLongitude;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PermLongitude
                               */
                               public void setPermLongitude(java.lang.String param){
                            localPermLongitudeTracker = param != null;
                                   
                                            this.localPermLongitude=param;
                                    

                               }
                            

                        /**
                        * field for SelfEmpCompanyName
                        */

                        
                                    protected java.lang.String localSelfEmpCompanyName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSelfEmpCompanyNameTracker = false ;

                           public boolean isSelfEmpCompanyNameSpecified(){
                               return localSelfEmpCompanyNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSelfEmpCompanyName(){
                               return localSelfEmpCompanyName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SelfEmpCompanyName
                               */
                               public void setSelfEmpCompanyName(java.lang.String param){
                            localSelfEmpCompanyNameTracker = param != null;
                                   
                                            this.localSelfEmpCompanyName=param;
                                    

                               }
                            

                        /**
                        * field for SupplierDualUsedGoods
                        */

                        
                                    protected java.lang.String localSupplierDualUsedGoods ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSupplierDualUsedGoodsTracker = false ;

                           public boolean isSupplierDualUsedGoodsSpecified(){
                               return localSupplierDualUsedGoodsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSupplierDualUsedGoods(){
                               return localSupplierDualUsedGoods;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SupplierDualUsedGoods
                               */
                               public void setSupplierDualUsedGoods(java.lang.String param){
                            localSupplierDualUsedGoodsTracker = param != null;
                                   
                                            this.localSupplierDualUsedGoods=param;
                                    

                               }
                            

                        /**
                        * field for DualUseGoodsList
                        */

                        
                                    protected java.lang.String localDualUseGoodsList ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDualUseGoodsListTracker = false ;

                           public boolean isDualUseGoodsListSpecified(){
                               return localDualUseGoodsListTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDualUseGoodsList(){
                               return localDualUseGoodsList;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DualUseGoodsList
                               */
                               public void setDualUseGoodsList(java.lang.String param){
                            localDualUseGoodsListTracker = param != null;
                                   
                                            this.localDualUseGoodsList=param;
                                    

                               }
                            

                        /**
                        * field for SourceOfWealth
                        */

                        
                                    protected java.lang.String localSourceOfWealth ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSourceOfWealthTracker = false ;

                           public boolean isSourceOfWealthSpecified(){
                               return localSourceOfWealthTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSourceOfWealth(){
                               return localSourceOfWealth;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SourceOfWealth
                               */
                               public void setSourceOfWealth(java.lang.String param){
                            localSourceOfWealthTracker = param != null;
                                   
                                            this.localSourceOfWealth=param;
                                    

                               }
                            

                        /**
                        * field for OtherBankUAEAccount
                        */

                        
                                    protected java.lang.String localOtherBankUAEAccount ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOtherBankUAEAccountTracker = false ;

                           public boolean isOtherBankUAEAccountSpecified(){
                               return localOtherBankUAEAccountTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOtherBankUAEAccount(){
                               return localOtherBankUAEAccount;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OtherBankUAEAccount
                               */
                               public void setOtherBankUAEAccount(java.lang.String param){
                            localOtherBankUAEAccountTracker = param != null;
                                   
                                            this.localOtherBankUAEAccount=param;
                                    

                               }
                            

                        /**
                        * field for PepStatusRisk
                        */

                        
                                    protected java.lang.String localPepStatusRisk ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPepStatusRiskTracker = false ;

                           public boolean isPepStatusRiskSpecified(){
                               return localPepStatusRiskTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPepStatusRisk(){
                               return localPepStatusRisk;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PepStatusRisk
                               */
                               public void setPepStatusRisk(java.lang.String param){
                            localPepStatusRiskTracker = param != null;
                                   
                                            this.localPepStatusRisk=param;
                                    

                               }
                            

                        /**
                        * field for OnboardingRisk
                        */

                        
                                    protected java.lang.String localOnboardingRisk ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOnboardingRiskTracker = false ;

                           public boolean isOnboardingRiskSpecified(){
                               return localOnboardingRiskTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOnboardingRisk(){
                               return localOnboardingRisk;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OnboardingRisk
                               */
                               public void setOnboardingRisk(java.lang.String param){
                            localOnboardingRiskTracker = param != null;
                                   
                                            this.localOnboardingRisk=param;
                                    

                               }
                            

                        /**
                        * field for ChannelRisk
                        */

                        
                                    protected java.lang.String localChannelRisk ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localChannelRiskTracker = false ;

                           public boolean isChannelRiskSpecified(){
                               return localChannelRiskTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getChannelRisk(){
                               return localChannelRisk;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ChannelRisk
                               */
                               public void setChannelRisk(java.lang.String param){
                            localChannelRiskTracker = param != null;
                                   
                                            this.localChannelRisk=param;
                                    

                               }
                            

                        /**
                        * field for LegalEntityRisk
                        */

                        
                                    protected java.lang.String localLegalEntityRisk ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLegalEntityRiskTracker = false ;

                           public boolean isLegalEntityRiskSpecified(){
                               return localLegalEntityRiskTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLegalEntityRisk(){
                               return localLegalEntityRisk;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LegalEntityRisk
                               */
                               public void setLegalEntityRisk(java.lang.String param){
                            localLegalEntityRiskTracker = param != null;
                                   
                                            this.localLegalEntityRisk=param;
                                    

                               }
                            

                        /**
                        * field for EntityTypeRisk
                        */

                        
                                    protected java.lang.String localEntityTypeRisk ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEntityTypeRiskTracker = false ;

                           public boolean isEntityTypeRiskSpecified(){
                               return localEntityTypeRiskTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEntityTypeRisk(){
                               return localEntityTypeRisk;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EntityTypeRisk
                               */
                               public void setEntityTypeRisk(java.lang.String param){
                            localEntityTypeRiskTracker = param != null;
                                   
                                            this.localEntityTypeRisk=param;
                                    

                               }
                            

                        /**
                        * field for OwnershipStructureRisk
                        */

                        
                                    protected java.lang.String localOwnershipStructureRisk ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOwnershipStructureRiskTracker = false ;

                           public boolean isOwnershipStructureRiskSpecified(){
                               return localOwnershipStructureRiskTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOwnershipStructureRisk(){
                               return localOwnershipStructureRisk;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OwnershipStructureRisk
                               */
                               public void setOwnershipStructureRisk(java.lang.String param){
                            localOwnershipStructureRiskTracker = param != null;
                                   
                                            this.localOwnershipStructureRisk=param;
                                    

                               }
                            

                        /**
                        * field for CompanyJurisdiction
                        */

                        
                                    protected java.lang.String localCompanyJurisdiction ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCompanyJurisdictionTracker = false ;

                           public boolean isCompanyJurisdictionSpecified(){
                               return localCompanyJurisdictionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCompanyJurisdiction(){
                               return localCompanyJurisdiction;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CompanyJurisdiction
                               */
                               public void setCompanyJurisdiction(java.lang.String param){
                            localCompanyJurisdictionTracker = param != null;
                                   
                                            this.localCompanyJurisdiction=param;
                                    

                               }
                            

                        /**
                        * field for CountryOfOperations
                        */

                        
                                    protected java.lang.String localCountryOfOperations ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCountryOfOperationsTracker = false ;

                           public boolean isCountryOfOperationsSpecified(){
                               return localCountryOfOperationsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCountryOfOperations(){
                               return localCountryOfOperations;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CountryOfOperations
                               */
                               public void setCountryOfOperations(java.lang.String param){
                            localCountryOfOperationsTracker = param != null;
                                   
                                            this.localCountryOfOperations=param;
                                    

                               }
                            

                        /**
                        * field for PowerOfAttorney
                        */

                        
                                    protected java.lang.String localPowerOfAttorney ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPowerOfAttorneyTracker = false ;

                           public boolean isPowerOfAttorneySpecified(){
                               return localPowerOfAttorneyTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPowerOfAttorney(){
                               return localPowerOfAttorney;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PowerOfAttorney
                               */
                               public void setPowerOfAttorney(java.lang.String param){
                            localPowerOfAttorneyTracker = param != null;
                                   
                                            this.localPowerOfAttorney=param;
                                    

                               }
                            

                        /**
                        * field for PoaNationality
                        */

                        
                                    protected java.lang.String localPoaNationality ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPoaNationalityTracker = false ;

                           public boolean isPoaNationalitySpecified(){
                               return localPoaNationalityTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPoaNationality(){
                               return localPoaNationality;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PoaNationality
                               */
                               public void setPoaNationality(java.lang.String param){
                            localPoaNationalityTracker = param != null;
                                   
                                            this.localPoaNationality=param;
                                    

                               }
                            

                        /**
                        * field for PoaResidence
                        */

                        
                                    protected java.lang.String localPoaResidence ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPoaResidenceTracker = false ;

                           public boolean isPoaResidenceSpecified(){
                               return localPoaResidenceTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPoaResidence(){
                               return localPoaResidence;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PoaResidence
                               */
                               public void setPoaResidence(java.lang.String param){
                            localPoaResidenceTracker = param != null;
                                   
                                            this.localPoaResidence=param;
                                    

                               }
                            

                        /**
                        * field for InCorpDate
                        */

                        
                                    protected java.lang.String localInCorpDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localInCorpDateTracker = false ;

                           public boolean isInCorpDateSpecified(){
                               return localInCorpDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getInCorpDate(){
                               return localInCorpDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param InCorpDate
                               */
                               public void setInCorpDate(java.lang.String param){
                            localInCorpDateTracker = param != null;
                                   
                                            this.localInCorpDate=param;
                                    

                               }
                            

                        /**
                        * field for PrimSourceofIncomeIndustry
                        */

                        
                                    protected java.lang.String localPrimSourceofIncomeIndustry ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPrimSourceofIncomeIndustryTracker = false ;

                           public boolean isPrimSourceofIncomeIndustrySpecified(){
                               return localPrimSourceofIncomeIndustryTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPrimSourceofIncomeIndustry(){
                               return localPrimSourceofIncomeIndustry;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PrimSourceofIncomeIndustry
                               */
                               public void setPrimSourceofIncomeIndustry(java.lang.String param){
                            localPrimSourceofIncomeIndustryTracker = param != null;
                                   
                                            this.localPrimSourceofIncomeIndustry=param;
                                    

                               }
                            

                        /**
                        * field for PrimSourceofIncomeCntry
                        */

                        
                                    protected java.lang.String localPrimSourceofIncomeCntry ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPrimSourceofIncomeCntryTracker = false ;

                           public boolean isPrimSourceofIncomeCntrySpecified(){
                               return localPrimSourceofIncomeCntryTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPrimSourceofIncomeCntry(){
                               return localPrimSourceofIncomeCntry;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PrimSourceofIncomeCntry
                               */
                               public void setPrimSourceofIncomeCntry(java.lang.String param){
                            localPrimSourceofIncomeCntryTracker = param != null;
                                   
                                            this.localPrimSourceofIncomeCntry=param;
                                    

                               }
                            

                        /**
                        * field for AddSourceIncomeIndustry
                        */

                        
                                    protected java.lang.String localAddSourceIncomeIndustry ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAddSourceIncomeIndustryTracker = false ;

                           public boolean isAddSourceIncomeIndustrySpecified(){
                               return localAddSourceIncomeIndustryTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAddSourceIncomeIndustry(){
                               return localAddSourceIncomeIndustry;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AddSourceIncomeIndustry
                               */
                               public void setAddSourceIncomeIndustry(java.lang.String param){
                            localAddSourceIncomeIndustryTracker = param != null;
                                   
                                            this.localAddSourceIncomeIndustry=param;
                                    

                               }
                            

                        /**
                        * field for AdditionalIncome
                        * This was an Array!
                        */

                        
                                    protected AdditionalIncome_type0[] localAdditionalIncome ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAdditionalIncomeTracker = false ;

                           public boolean isAdditionalIncomeSpecified(){
                               return localAdditionalIncomeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return AdditionalIncome_type0[]
                           */
                           public  AdditionalIncome_type0[] getAdditionalIncome(){
                               return localAdditionalIncome;
                           }

                           
                        


                               
                              /**
                               * validate the array for AdditionalIncome
                               */
                              protected void validateAdditionalIncome(AdditionalIncome_type0[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param AdditionalIncome
                              */
                              public void setAdditionalIncome(AdditionalIncome_type0[] param){
                              
                                   validateAdditionalIncome(param);

                               localAdditionalIncomeTracker = param != null;
                                      
                                      this.localAdditionalIncome=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param AdditionalIncome_type0
                             */
                             public void addAdditionalIncome(AdditionalIncome_type0 param){
                                   if (localAdditionalIncome == null){
                                   localAdditionalIncome = new AdditionalIncome_type0[]{};
                                   }

                            
                                 //update the setting tracker
                                localAdditionalIncomeTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localAdditionalIncome);
                               list.add(param);
                               this.localAdditionalIncome =
                             (AdditionalIncome_type0[])list.toArray(
                            new AdditionalIncome_type0[list.size()]);

                             }
                             

                        /**
                        * field for AdditionalIncomeCountry
                        * This was an Array!
                        */

                        
                                    protected AdditionalIncomeCountry_type0[] localAdditionalIncomeCountry ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAdditionalIncomeCountryTracker = false ;

                           public boolean isAdditionalIncomeCountrySpecified(){
                               return localAdditionalIncomeCountryTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return AdditionalIncomeCountry_type0[]
                           */
                           public  AdditionalIncomeCountry_type0[] getAdditionalIncomeCountry(){
                               return localAdditionalIncomeCountry;
                           }

                           
                        


                               
                              /**
                               * validate the array for AdditionalIncomeCountry
                               */
                              protected void validateAdditionalIncomeCountry(AdditionalIncomeCountry_type0[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param AdditionalIncomeCountry
                              */
                              public void setAdditionalIncomeCountry(AdditionalIncomeCountry_type0[] param){
                              
                                   validateAdditionalIncomeCountry(param);

                               localAdditionalIncomeCountryTracker = param != null;
                                      
                                      this.localAdditionalIncomeCountry=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param AdditionalIncomeCountry_type0
                             */
                             public void addAdditionalIncomeCountry(AdditionalIncomeCountry_type0 param){
                                   if (localAdditionalIncomeCountry == null){
                                   localAdditionalIncomeCountry = new AdditionalIncomeCountry_type0[]{};
                                   }

                            
                                 //update the setting tracker
                                localAdditionalIncomeCountryTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localAdditionalIncomeCountry);
                               list.add(param);
                               this.localAdditionalIncomeCountry =
                             (AdditionalIncomeCountry_type0[])list.toArray(
                            new AdditionalIncomeCountry_type0[list.size()]);

                             }
                             

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":ModCustomerInfoReq_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "ModCustomerInfoReq_type0",
                           xmlWriter);
                   }

               
                   }
               
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "customerId", xmlWriter);
                             

                                          if (localCustomerId==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("customerId cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustomerId);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                              if (localCustPrefixTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custPrefix", xmlWriter);
                             

                                          if (localCustPrefix==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custPrefix cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustPrefix);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustFullNameTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custFullName", xmlWriter);
                             

                                          if (localCustFullName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custFullName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustFullName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustShortNameTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custShortName", xmlWriter);
                             

                                          if (localCustShortName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custShortName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustShortName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustCodeStatTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custCodeStat", xmlWriter);
                             

                                          if (localCustCodeStat==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custCodeStat cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustCodeStat);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustDeceasedStatusTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custDeceasedStatus", xmlWriter);
                             

                                          if (localCustDeceasedStatus==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custDeceasedStatus cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustDeceasedStatus);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustCodeStatusTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custCodeStatus", xmlWriter);
                             

                                          if (localCustCodeStatus==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custCodeStatus cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustCodeStatus);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustDesignationTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custDesignation", xmlWriter);
                             

                                          if (localCustDesignation==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custDesignation cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustDesignation);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustLanguageTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custLanguage", xmlWriter);
                             

                                          if (localCustLanguage==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custLanguage cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustLanguage);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustIncomeCategoryTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custIncomeCategory", xmlWriter);
                             

                                          if (localCustIncomeCategory==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custIncomeCategory cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustIncomeCategory);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustSignatureTypeTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custSignatureType", xmlWriter);
                             

                                          if (localCustSignatureType==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custSignatureType cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustSignatureType);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustProfessionCategoryTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custProfessionCategory", xmlWriter);
                             

                                          if (localCustProfessionCategory==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custProfessionCategory cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustProfessionCategory);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustITNumTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custITNum", xmlWriter);
                             

                                          if (localCustITNum==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custITNum cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustITNum);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustPhoneTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custPhone", xmlWriter);
                             

                                          if (localCustPhone==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custPhone cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustPhone);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustPhoneOffTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custPhoneOff", xmlWriter);
                             

                                          if (localCustPhoneOff==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custPhoneOff cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustPhoneOff);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustFaxTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custFax", xmlWriter);
                             

                                          if (localCustFax==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custFax cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustFax);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustMobileTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custMobile", xmlWriter);
                             

                                          if (localCustMobile==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custMobile cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustMobile);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustEmailTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custEmail", xmlWriter);
                             

                                          if (localCustEmail==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custEmail cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustEmail);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustStatusTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custStatus", xmlWriter);
                             

                                          if (localCustStatus==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custStatus cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustStatus);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustTypeTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custType", xmlWriter);
                             

                                          if (localCustType==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custType cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustType);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustSexTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custSex", xmlWriter);
                             

                                          if (localCustSex==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custSex cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustSex);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustMaritalStatusTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custMaritalStatus", xmlWriter);
                             

                                          if (localCustMaritalStatus==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custMaritalStatus cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustMaritalStatus);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustDependantChildrenTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custDependantChildren", xmlWriter);
                             

                                          if (localCustDependantChildren==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custDependantChildren cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustDependantChildren);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustEthnicOriginTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custEthnicOrigin", xmlWriter);
                             

                                          if (localCustEthnicOrigin==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custEthnicOrigin cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustEthnicOrigin);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustNationalityTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custNationality", xmlWriter);
                             

                                          if (localCustNationality==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custNationality cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustNationality);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustBusinessRegNoTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custBusinessRegNo", xmlWriter);
                             

                                          if (localCustBusinessRegNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custBusinessRegNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustBusinessRegNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustBusinessCategoryTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custBusinessCategory", xmlWriter);
                             

                                          if (localCustBusinessCategory==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custBusinessCategory cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustBusinessCategory);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustBusinessTypeTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custBusinessType", xmlWriter);
                             

                                          if (localCustBusinessType==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custBusinessType cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustBusinessType);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFlagStaffTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "flagStaff", xmlWriter);
                             

                                          if (localFlagStaff==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("flagStaff cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFlagStaff);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFlagMinorTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "flagMinor", xmlWriter);
                             

                                          if (localFlagMinor==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("flagMinor cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFlagMinor);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFlagMemberTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "flagMember", xmlWriter);
                             

                                          if (localFlagMember==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("flagMember cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFlagMember);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFlagLocGlobTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "flagLocGlob", xmlWriter);
                             

                                          if (localFlagLocGlob==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("flagLocGlob cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFlagLocGlob);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFlagUnadvTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "flagUnadv", xmlWriter);
                             

                                          if (localFlagUnadv==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("flagUnadv cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFlagUnadv);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFlagDocCompleteTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "flagDocComplete", xmlWriter);
                             

                                          if (localFlagDocComplete==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("flagDocComplete cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFlagDocComplete);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFlagKioTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "flagKio", xmlWriter);
                             

                                          if (localFlagKio==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("flagKio cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFlagKio);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFlagHoldMailTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "flagHoldMail", xmlWriter);
                             

                                          if (localFlagHoldMail==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("flagHoldMail cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFlagHoldMail);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCodMntOptionTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "codMntOption", xmlWriter);
                             

                                          if (localCodMntOption==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("codMntOption cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCodMntOption);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCodLastMntMakerIdTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "codLastMntMakerId", xmlWriter);
                             

                                          if (localCodLastMntMakerId==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("codLastMntMakerId cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCodLastMntMakerId);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCodLastMntCheckerIdTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "codLastMntCheckerId", xmlWriter);
                             

                                          if (localCodLastMntCheckerId==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("codLastMntCheckerId cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCodLastMntCheckerId);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCodOfficerIdTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "codOfficerId", xmlWriter);
                             

                                          if (localCodOfficerId==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("codOfficerId cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCodOfficerId);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCodMemberNoTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "codMemberNo", xmlWriter);
                             

                                          if (localCodMemberNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("codMemberNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCodMemberNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCodReport1Tracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "codReport1", xmlWriter);
                             

                                          if (localCodReport1==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("codReport1 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCodReport1);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCodReport2Tracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "codReport2", xmlWriter);
                             

                                          if (localCodReport2==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("codReport2 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCodReport2);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCodReport3Tracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "codReport3", xmlWriter);
                             

                                          if (localCodReport3==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("codReport3 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCodReport3);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCodLiabNoTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "codLiabNo", xmlWriter);
                             

                                          if (localCodLiabNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("codLiabNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCodLiabNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCreditRatingTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "creditRating", xmlWriter);
                             

                                          if (localCreditRating==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("creditRating cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCreditRating);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDateRevisionTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "dateRevision", xmlWriter);
                             

                                          if (localDateRevision==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("dateRevision cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDateRevision);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFxCustCleanRiskLimitTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "fxCustCleanRiskLimit", xmlWriter);
                             

                                          if (localFxCustCleanRiskLimit==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("fxCustCleanRiskLimit cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFxCustCleanRiskLimit);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFxCleanRiskLimitTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "fxCleanRiskLimit", xmlWriter);
                             

                                          if (localFxCleanRiskLimit==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("fxCleanRiskLimit cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFxCleanRiskLimit);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAmtLimitTotTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "amtLimitTot", xmlWriter);
                             

                                          if (localAmtLimitTot==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("amtLimitTot cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAmtLimitTot);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCodCcyLimitTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "codCcyLimit", xmlWriter);
                             

                                          if (localCodCcyLimit==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("codCcyLimit cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCodCcyLimit);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSecCustCleanRiskLlimitTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "secCustCleanRiskLlimit", xmlWriter);
                             

                                          if (localSecCustCleanRiskLlimit==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("secCustCleanRiskLlimit cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSecCustCleanRiskLlimit);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSecCleanRiskLimitTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "secCleanRiskLimit", xmlWriter);
                             

                                          if (localSecCleanRiskLimit==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("secCleanRiskLimit cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSecCleanRiskLimit);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSecCustPstlRiskLlimitTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "secCustPstlRiskLlimit", xmlWriter);
                             

                                          if (localSecCustPstlRiskLlimit==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("secCustPstlRiskLlimit cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSecCustPstlRiskLlimit);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSecPstlRiskLlimitTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "secPstlRiskLlimit", xmlWriter);
                             

                                          if (localSecPstlRiskLlimit==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("secPstlRiskLlimit cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSecPstlRiskLlimit);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCodEmployeeIdTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "codEmployeeId", xmlWriter);
                             

                                          if (localCodEmployeeId==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("codEmployeeId cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCodEmployeeId);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localGuardianTypeTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "guardianType", xmlWriter);
                             

                                          if (localGuardianType==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("guardianType cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localGuardianType);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAcctNoDefaultTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "acctNoDefault", xmlWriter);
                             

                                          if (localAcctNoDefault==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("acctNoDefault cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAcctNoDefault);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTxtCustResidenceTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "txtCustResidence", xmlWriter);
                             

                                          if (localTxtCustResidence==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("txtCustResidence cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTxtCustResidence);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAflIssueDateTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "aflIssueDate", xmlWriter);
                             

                                          if (localAflIssueDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("aflIssueDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAflIssueDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAflExpiryDateTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "aflExpiryDate", xmlWriter);
                             

                                          if (localAflExpiryDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("aflExpiryDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAflExpiryDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAflEffectiveDateTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "aflEffectiveDate", xmlWriter);
                             

                                          if (localAflEffectiveDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("aflEffectiveDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAflEffectiveDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLastRenewDateTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "lastRenewDate", xmlWriter);
                             

                                          if (localLastRenewDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("lastRenewDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLastRenewDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRefHoldPhoneTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "refHoldPhone", xmlWriter);
                             

                                          if (localRefHoldPhone==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("refHoldPhone cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRefHoldPhone);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRefHoldPhoneOffTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "refHoldPhoneOff", xmlWriter);
                             

                                          if (localRefHoldPhoneOff==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("refHoldPhoneOff cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRefHoldPhoneOff);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRefHoldFaxTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "refHoldFax", xmlWriter);
                             

                                          if (localRefHoldFax==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("refHoldFax cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRefHoldFax);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRefHoldMobileTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "refHoldMobile", xmlWriter);
                             

                                          if (localRefHoldMobile==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("refHoldMobile cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRefHoldMobile);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRefHoldEmailTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "refHoldEmail", xmlWriter);
                             

                                          if (localRefHoldEmail==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("refHoldEmail cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRefHoldEmail);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustCitizenshipIdTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custCitizenshipId", xmlWriter);
                             

                                          if (localCustCitizenshipId==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custCitizenshipId cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustCitizenshipId);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMisCodeDetailsTracker){
                                            if (localMisCodeDetails==null){
                                                 throw new org.apache.axis2.databinding.ADBException("misCodeDetails cannot be null!!");
                                            }
                                           localMisCodeDetails.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","misCodeDetails"),
                                               xmlWriter);
                                        } if (localCustomerAdressesTracker){
                                            if (localCustomerAdresses==null){
                                                 throw new org.apache.axis2.databinding.ADBException("customerAdresses cannot be null!!");
                                            }
                                           localCustomerAdresses.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","customerAdresses"),
                                               xmlWriter);
                                        } if (localSignatoryInfoTracker){
                                            if (localSignatoryInfo==null){
                                                 throw new org.apache.axis2.databinding.ADBException("signatoryInfo cannot be null!!");
                                            }
                                           localSignatoryInfo.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","signatoryInfo"),
                                               xmlWriter);
                                        } if (localCustomerCBRCodesTracker){
                                            if (localCustomerCBRCodes==null){
                                                 throw new org.apache.axis2.databinding.ADBException("customerCBRCodes cannot be null!!");
                                            }
                                           localCustomerCBRCodes.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","customerCBRCodes"),
                                               xmlWriter);
                                        } if (localCustomerAdditionalDetailsTracker){
                                            if (localCustomerAdditionalDetails==null){
                                                 throw new org.apache.axis2.databinding.ADBException("customerAdditionalDetails cannot be null!!");
                                            }
                                           localCustomerAdditionalDetails.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","customerAdditionalDetails"),
                                               xmlWriter);
                                        } if (localBorrowerSubsidiaryTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "borrowerSubsidiary", xmlWriter);
                             

                                          if (localBorrowerSubsidiary==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("borrowerSubsidiary cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBorrowerSubsidiary);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localGroupUltimateParentTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "groupUltimateParent", xmlWriter);
                             

                                          if (localGroupUltimateParent==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("groupUltimateParent cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localGroupUltimateParent);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLegalEntityIdentifierNumberTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "legalEntityIdentifierNumber", xmlWriter);
                             

                                          if (localLegalEntityIdentifierNumber==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("legalEntityIdentifierNumber cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLegalEntityIdentifierNumber);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localModifyCorporateCustDtlsTracker){
                                            if (localModifyCorporateCustDtls==null){
                                                 throw new org.apache.axis2.databinding.ADBException("modifyCorporateCustDtls cannot be null!!");
                                            }
                                           localModifyCorporateCustDtls.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","modifyCorporateCustDtls"),
                                               xmlWriter);
                                        } if (localCustEducationalQualificationTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custEducationalQualification", xmlWriter);
                             

                                          if (localCustEducationalQualification==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custEducationalQualification cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustEducationalQualification);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustomerProductRelationInfoTracker){
                                            if (localCustomerProductRelationInfo==null){
                                                 throw new org.apache.axis2.databinding.ADBException("customerProductRelationInfo cannot be null!!");
                                            }
                                           localCustomerProductRelationInfo.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","customerProductRelationInfo"),
                                               xmlWriter);
                                        } if (localCustAccountOpenPurposeTracker){
                                       if (localCustAccountOpenPurpose!=null){
                                            for (int i = 0;i < localCustAccountOpenPurpose.length;i++){
                                                if (localCustAccountOpenPurpose[i] != null){
                                                 localCustAccountOpenPurpose[i].serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custAccountOpenPurpose"),
                                                           xmlWriter);
                                                } else {
                                                   
                                                        // we don't have to do any thing since minOccures is zero
                                                    
                                                }

                                            }
                                     } else {
                                        
                                               throw new org.apache.axis2.databinding.ADBException("custAccountOpenPurpose cannot be null!!");
                                        
                                    }
                                 } if (localWebsiteAddressTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "websiteAddress", xmlWriter);
                             

                                          if (localWebsiteAddress==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("websiteAddress cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localWebsiteAddress);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSourceOfincomeTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "sourceOfincome", xmlWriter);
                             

                                          if (localSourceOfincome==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sourceOfincome cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSourceOfincome);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNatureOfBusinessTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "natureOfBusiness", xmlWriter);
                             

                                          if (localNatureOfBusiness==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("natureOfBusiness cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNatureOfBusiness);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEmploymentTypeTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "employmentType", xmlWriter);
                             

                                          if (localEmploymentType==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("employmentType cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEmploymentType);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localResLandmarkTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "resLandmark", xmlWriter);
                             

                                          if (localResLandmark==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("resLandmark cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localResLandmark);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localResLatitudeTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "resLatitude", xmlWriter);
                             

                                          if (localResLatitude==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("resLatitude cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localResLatitude);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localResLongitudeTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "resLongitude", xmlWriter);
                             

                                          if (localResLongitude==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("resLongitude cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localResLongitude);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMailingLandmarkTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "mailingLandmark", xmlWriter);
                             

                                          if (localMailingLandmark==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("mailingLandmark cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMailingLandmark);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMailingLatitudeTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "mailingLatitude", xmlWriter);
                             

                                          if (localMailingLatitude==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("mailingLatitude cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMailingLatitude);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMailingLongitudeTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "mailingLongitude", xmlWriter);
                             

                                          if (localMailingLongitude==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("mailingLongitude cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMailingLongitude);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEidaExpiryDateTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "eidaExpiryDate", xmlWriter);
                             

                                          if (localEidaExpiryDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("eidaExpiryDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEidaExpiryDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCountryOfIncomeTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "countryOfIncome", xmlWriter);
                             

                                          if (localCountryOfIncome==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("countryOfIncome cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCountryOfIncome);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAnnualIncomeTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "annualIncome", xmlWriter);
                             

                                          if (localAnnualIncome==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("annualIncome cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAnnualIncome);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAnnualIncomeCurrencyTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "annualIncomeCurrency", xmlWriter);
                             

                                          if (localAnnualIncomeCurrency==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("annualIncomeCurrency cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAnnualIncomeCurrency);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDualNationalityFlagTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "dualNationalityFlag", xmlWriter);
                             

                                          if (localDualNationalityFlag==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("dualNationalityFlag cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDualNationalityFlag);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSecondNationalityTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "secondNationality", xmlWriter);
                             

                                          if (localSecondNationality==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("secondNationality cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSecondNationality);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPermLandmarkTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "permLandmark", xmlWriter);
                             

                                          if (localPermLandmark==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("permLandmark cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPermLandmark);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPermLatitudeTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "permLatitude", xmlWriter);
                             

                                          if (localPermLatitude==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("permLatitude cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPermLatitude);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPermLongitudeTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "permLongitude", xmlWriter);
                             

                                          if (localPermLongitude==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("permLongitude cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPermLongitude);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSelfEmpCompanyNameTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "selfEmpCompanyName", xmlWriter);
                             

                                          if (localSelfEmpCompanyName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("selfEmpCompanyName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSelfEmpCompanyName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSupplierDualUsedGoodsTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "supplierDualUsedGoods", xmlWriter);
                             

                                          if (localSupplierDualUsedGoods==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("supplierDualUsedGoods cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSupplierDualUsedGoods);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDualUseGoodsListTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "dualUseGoodsList", xmlWriter);
                             

                                          if (localDualUseGoodsList==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("dualUseGoodsList cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDualUseGoodsList);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSourceOfWealthTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "sourceOfWealth", xmlWriter);
                             

                                          if (localSourceOfWealth==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sourceOfWealth cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSourceOfWealth);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOtherBankUAEAccountTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "otherBankUAEAccount", xmlWriter);
                             

                                          if (localOtherBankUAEAccount==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("otherBankUAEAccount cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOtherBankUAEAccount);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPepStatusRiskTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "pepStatusRisk", xmlWriter);
                             

                                          if (localPepStatusRisk==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("pepStatusRisk cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPepStatusRisk);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOnboardingRiskTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "onboardingRisk", xmlWriter);
                             

                                          if (localOnboardingRisk==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("onboardingRisk cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOnboardingRisk);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localChannelRiskTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "channelRisk", xmlWriter);
                             

                                          if (localChannelRisk==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("channelRisk cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localChannelRisk);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLegalEntityRiskTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "legalEntityRisk", xmlWriter);
                             

                                          if (localLegalEntityRisk==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("legalEntityRisk cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLegalEntityRisk);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEntityTypeRiskTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "entityTypeRisk", xmlWriter);
                             

                                          if (localEntityTypeRisk==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("entityTypeRisk cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEntityTypeRisk);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOwnershipStructureRiskTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "ownershipStructureRisk", xmlWriter);
                             

                                          if (localOwnershipStructureRisk==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ownershipStructureRisk cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOwnershipStructureRisk);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCompanyJurisdictionTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "companyJurisdiction", xmlWriter);
                             

                                          if (localCompanyJurisdiction==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("companyJurisdiction cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCompanyJurisdiction);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCountryOfOperationsTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "countryOfOperations", xmlWriter);
                             

                                          if (localCountryOfOperations==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("countryOfOperations cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCountryOfOperations);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPowerOfAttorneyTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "powerOfAttorney", xmlWriter);
                             

                                          if (localPowerOfAttorney==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("powerOfAttorney cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPowerOfAttorney);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPoaNationalityTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "poaNationality", xmlWriter);
                             

                                          if (localPoaNationality==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("poaNationality cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPoaNationality);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPoaResidenceTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "poaResidence", xmlWriter);
                             

                                          if (localPoaResidence==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("poaResidence cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPoaResidence);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localInCorpDateTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "inCorpDate", xmlWriter);
                             

                                          if (localInCorpDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("inCorpDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localInCorpDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPrimSourceofIncomeIndustryTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "primSourceofIncomeIndustry", xmlWriter);
                             

                                          if (localPrimSourceofIncomeIndustry==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("primSourceofIncomeIndustry cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPrimSourceofIncomeIndustry);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPrimSourceofIncomeCntryTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "primSourceofIncomeCntry", xmlWriter);
                             

                                          if (localPrimSourceofIncomeCntry==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("primSourceofIncomeCntry cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPrimSourceofIncomeCntry);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAddSourceIncomeIndustryTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "addSourceIncomeIndustry", xmlWriter);
                             

                                          if (localAddSourceIncomeIndustry==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("addSourceIncomeIndustry cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAddSourceIncomeIndustry);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAdditionalIncomeTracker){
                                       if (localAdditionalIncome!=null){
                                            for (int i = 0;i < localAdditionalIncome.length;i++){
                                                if (localAdditionalIncome[i] != null){
                                                 localAdditionalIncome[i].serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","additionalIncome"),
                                                           xmlWriter);
                                                } else {
                                                   
                                                        // we don't have to do any thing since minOccures is zero
                                                    
                                                }

                                            }
                                     } else {
                                        
                                               throw new org.apache.axis2.databinding.ADBException("additionalIncome cannot be null!!");
                                        
                                    }
                                 } if (localAdditionalIncomeCountryTracker){
                                       if (localAdditionalIncomeCountry!=null){
                                            for (int i = 0;i < localAdditionalIncomeCountry.length;i++){
                                                if (localAdditionalIncomeCountry[i] != null){
                                                 localAdditionalIncomeCountry[i].serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","additionalIncomeCountry"),
                                                           xmlWriter);
                                                } else {
                                                   
                                                        // we don't have to do any thing since minOccures is zero
                                                    
                                                }

                                            }
                                     } else {
                                        
                                               throw new org.apache.axis2.databinding.ADBException("additionalIncomeCountry cannot be null!!");
                                        
                                    }
                                 }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd")){
                return "ns3";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "customerId"));
                                 
                                        if (localCustomerId != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustomerId));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("customerId cannot be null!!");
                                        }
                                     if (localCustPrefixTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custPrefix"));
                                 
                                        if (localCustPrefix != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustPrefix));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custPrefix cannot be null!!");
                                        }
                                    } if (localCustFullNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custFullName"));
                                 
                                        if (localCustFullName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustFullName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custFullName cannot be null!!");
                                        }
                                    } if (localCustShortNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custShortName"));
                                 
                                        if (localCustShortName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustShortName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custShortName cannot be null!!");
                                        }
                                    } if (localCustCodeStatTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custCodeStat"));
                                 
                                        if (localCustCodeStat != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustCodeStat));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custCodeStat cannot be null!!");
                                        }
                                    } if (localCustDeceasedStatusTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custDeceasedStatus"));
                                 
                                        if (localCustDeceasedStatus != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustDeceasedStatus));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custDeceasedStatus cannot be null!!");
                                        }
                                    } if (localCustCodeStatusTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custCodeStatus"));
                                 
                                        if (localCustCodeStatus != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustCodeStatus));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custCodeStatus cannot be null!!");
                                        }
                                    } if (localCustDesignationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custDesignation"));
                                 
                                        if (localCustDesignation != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustDesignation));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custDesignation cannot be null!!");
                                        }
                                    } if (localCustLanguageTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custLanguage"));
                                 
                                        if (localCustLanguage != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustLanguage));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custLanguage cannot be null!!");
                                        }
                                    } if (localCustIncomeCategoryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custIncomeCategory"));
                                 
                                        if (localCustIncomeCategory != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustIncomeCategory));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custIncomeCategory cannot be null!!");
                                        }
                                    } if (localCustSignatureTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custSignatureType"));
                                 
                                        if (localCustSignatureType != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustSignatureType));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custSignatureType cannot be null!!");
                                        }
                                    } if (localCustProfessionCategoryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custProfessionCategory"));
                                 
                                        if (localCustProfessionCategory != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustProfessionCategory));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custProfessionCategory cannot be null!!");
                                        }
                                    } if (localCustITNumTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custITNum"));
                                 
                                        if (localCustITNum != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustITNum));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custITNum cannot be null!!");
                                        }
                                    } if (localCustPhoneTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custPhone"));
                                 
                                        if (localCustPhone != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustPhone));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custPhone cannot be null!!");
                                        }
                                    } if (localCustPhoneOffTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custPhoneOff"));
                                 
                                        if (localCustPhoneOff != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustPhoneOff));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custPhoneOff cannot be null!!");
                                        }
                                    } if (localCustFaxTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custFax"));
                                 
                                        if (localCustFax != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustFax));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custFax cannot be null!!");
                                        }
                                    } if (localCustMobileTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custMobile"));
                                 
                                        if (localCustMobile != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustMobile));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custMobile cannot be null!!");
                                        }
                                    } if (localCustEmailTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custEmail"));
                                 
                                        if (localCustEmail != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustEmail));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custEmail cannot be null!!");
                                        }
                                    } if (localCustStatusTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custStatus"));
                                 
                                        if (localCustStatus != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustStatus));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custStatus cannot be null!!");
                                        }
                                    } if (localCustTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custType"));
                                 
                                        if (localCustType != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustType));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custType cannot be null!!");
                                        }
                                    } if (localCustSexTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custSex"));
                                 
                                        if (localCustSex != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustSex));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custSex cannot be null!!");
                                        }
                                    } if (localCustMaritalStatusTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custMaritalStatus"));
                                 
                                        if (localCustMaritalStatus != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustMaritalStatus));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custMaritalStatus cannot be null!!");
                                        }
                                    } if (localCustDependantChildrenTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custDependantChildren"));
                                 
                                        if (localCustDependantChildren != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustDependantChildren));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custDependantChildren cannot be null!!");
                                        }
                                    } if (localCustEthnicOriginTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custEthnicOrigin"));
                                 
                                        if (localCustEthnicOrigin != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustEthnicOrigin));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custEthnicOrigin cannot be null!!");
                                        }
                                    } if (localCustNationalityTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custNationality"));
                                 
                                        if (localCustNationality != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustNationality));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custNationality cannot be null!!");
                                        }
                                    } if (localCustBusinessRegNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custBusinessRegNo"));
                                 
                                        if (localCustBusinessRegNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustBusinessRegNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custBusinessRegNo cannot be null!!");
                                        }
                                    } if (localCustBusinessCategoryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custBusinessCategory"));
                                 
                                        if (localCustBusinessCategory != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustBusinessCategory));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custBusinessCategory cannot be null!!");
                                        }
                                    } if (localCustBusinessTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custBusinessType"));
                                 
                                        if (localCustBusinessType != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustBusinessType));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custBusinessType cannot be null!!");
                                        }
                                    } if (localFlagStaffTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "flagStaff"));
                                 
                                        if (localFlagStaff != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFlagStaff));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("flagStaff cannot be null!!");
                                        }
                                    } if (localFlagMinorTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "flagMinor"));
                                 
                                        if (localFlagMinor != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFlagMinor));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("flagMinor cannot be null!!");
                                        }
                                    } if (localFlagMemberTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "flagMember"));
                                 
                                        if (localFlagMember != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFlagMember));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("flagMember cannot be null!!");
                                        }
                                    } if (localFlagLocGlobTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "flagLocGlob"));
                                 
                                        if (localFlagLocGlob != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFlagLocGlob));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("flagLocGlob cannot be null!!");
                                        }
                                    } if (localFlagUnadvTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "flagUnadv"));
                                 
                                        if (localFlagUnadv != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFlagUnadv));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("flagUnadv cannot be null!!");
                                        }
                                    } if (localFlagDocCompleteTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "flagDocComplete"));
                                 
                                        if (localFlagDocComplete != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFlagDocComplete));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("flagDocComplete cannot be null!!");
                                        }
                                    } if (localFlagKioTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "flagKio"));
                                 
                                        if (localFlagKio != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFlagKio));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("flagKio cannot be null!!");
                                        }
                                    } if (localFlagHoldMailTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "flagHoldMail"));
                                 
                                        if (localFlagHoldMail != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFlagHoldMail));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("flagHoldMail cannot be null!!");
                                        }
                                    } if (localCodMntOptionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "codMntOption"));
                                 
                                        if (localCodMntOption != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCodMntOption));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("codMntOption cannot be null!!");
                                        }
                                    } if (localCodLastMntMakerIdTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "codLastMntMakerId"));
                                 
                                        if (localCodLastMntMakerId != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCodLastMntMakerId));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("codLastMntMakerId cannot be null!!");
                                        }
                                    } if (localCodLastMntCheckerIdTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "codLastMntCheckerId"));
                                 
                                        if (localCodLastMntCheckerId != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCodLastMntCheckerId));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("codLastMntCheckerId cannot be null!!");
                                        }
                                    } if (localCodOfficerIdTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "codOfficerId"));
                                 
                                        if (localCodOfficerId != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCodOfficerId));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("codOfficerId cannot be null!!");
                                        }
                                    } if (localCodMemberNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "codMemberNo"));
                                 
                                        if (localCodMemberNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCodMemberNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("codMemberNo cannot be null!!");
                                        }
                                    } if (localCodReport1Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "codReport1"));
                                 
                                        if (localCodReport1 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCodReport1));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("codReport1 cannot be null!!");
                                        }
                                    } if (localCodReport2Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "codReport2"));
                                 
                                        if (localCodReport2 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCodReport2));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("codReport2 cannot be null!!");
                                        }
                                    } if (localCodReport3Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "codReport3"));
                                 
                                        if (localCodReport3 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCodReport3));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("codReport3 cannot be null!!");
                                        }
                                    } if (localCodLiabNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "codLiabNo"));
                                 
                                        if (localCodLiabNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCodLiabNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("codLiabNo cannot be null!!");
                                        }
                                    } if (localCreditRatingTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "creditRating"));
                                 
                                        if (localCreditRating != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCreditRating));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("creditRating cannot be null!!");
                                        }
                                    } if (localDateRevisionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "dateRevision"));
                                 
                                        if (localDateRevision != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDateRevision));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("dateRevision cannot be null!!");
                                        }
                                    } if (localFxCustCleanRiskLimitTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "fxCustCleanRiskLimit"));
                                 
                                        if (localFxCustCleanRiskLimit != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFxCustCleanRiskLimit));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("fxCustCleanRiskLimit cannot be null!!");
                                        }
                                    } if (localFxCleanRiskLimitTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "fxCleanRiskLimit"));
                                 
                                        if (localFxCleanRiskLimit != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFxCleanRiskLimit));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("fxCleanRiskLimit cannot be null!!");
                                        }
                                    } if (localAmtLimitTotTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "amtLimitTot"));
                                 
                                        if (localAmtLimitTot != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAmtLimitTot));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("amtLimitTot cannot be null!!");
                                        }
                                    } if (localCodCcyLimitTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "codCcyLimit"));
                                 
                                        if (localCodCcyLimit != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCodCcyLimit));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("codCcyLimit cannot be null!!");
                                        }
                                    } if (localSecCustCleanRiskLlimitTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "secCustCleanRiskLlimit"));
                                 
                                        if (localSecCustCleanRiskLlimit != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSecCustCleanRiskLlimit));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("secCustCleanRiskLlimit cannot be null!!");
                                        }
                                    } if (localSecCleanRiskLimitTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "secCleanRiskLimit"));
                                 
                                        if (localSecCleanRiskLimit != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSecCleanRiskLimit));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("secCleanRiskLimit cannot be null!!");
                                        }
                                    } if (localSecCustPstlRiskLlimitTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "secCustPstlRiskLlimit"));
                                 
                                        if (localSecCustPstlRiskLlimit != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSecCustPstlRiskLlimit));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("secCustPstlRiskLlimit cannot be null!!");
                                        }
                                    } if (localSecPstlRiskLlimitTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "secPstlRiskLlimit"));
                                 
                                        if (localSecPstlRiskLlimit != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSecPstlRiskLlimit));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("secPstlRiskLlimit cannot be null!!");
                                        }
                                    } if (localCodEmployeeIdTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "codEmployeeId"));
                                 
                                        if (localCodEmployeeId != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCodEmployeeId));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("codEmployeeId cannot be null!!");
                                        }
                                    } if (localGuardianTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "guardianType"));
                                 
                                        if (localGuardianType != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localGuardianType));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("guardianType cannot be null!!");
                                        }
                                    } if (localAcctNoDefaultTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "acctNoDefault"));
                                 
                                        if (localAcctNoDefault != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAcctNoDefault));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("acctNoDefault cannot be null!!");
                                        }
                                    } if (localTxtCustResidenceTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "txtCustResidence"));
                                 
                                        if (localTxtCustResidence != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTxtCustResidence));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("txtCustResidence cannot be null!!");
                                        }
                                    } if (localAflIssueDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "aflIssueDate"));
                                 
                                        if (localAflIssueDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAflIssueDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("aflIssueDate cannot be null!!");
                                        }
                                    } if (localAflExpiryDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "aflExpiryDate"));
                                 
                                        if (localAflExpiryDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAflExpiryDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("aflExpiryDate cannot be null!!");
                                        }
                                    } if (localAflEffectiveDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "aflEffectiveDate"));
                                 
                                        if (localAflEffectiveDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAflEffectiveDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("aflEffectiveDate cannot be null!!");
                                        }
                                    } if (localLastRenewDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "lastRenewDate"));
                                 
                                        if (localLastRenewDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLastRenewDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("lastRenewDate cannot be null!!");
                                        }
                                    } if (localRefHoldPhoneTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "refHoldPhone"));
                                 
                                        if (localRefHoldPhone != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRefHoldPhone));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("refHoldPhone cannot be null!!");
                                        }
                                    } if (localRefHoldPhoneOffTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "refHoldPhoneOff"));
                                 
                                        if (localRefHoldPhoneOff != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRefHoldPhoneOff));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("refHoldPhoneOff cannot be null!!");
                                        }
                                    } if (localRefHoldFaxTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "refHoldFax"));
                                 
                                        if (localRefHoldFax != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRefHoldFax));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("refHoldFax cannot be null!!");
                                        }
                                    } if (localRefHoldMobileTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "refHoldMobile"));
                                 
                                        if (localRefHoldMobile != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRefHoldMobile));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("refHoldMobile cannot be null!!");
                                        }
                                    } if (localRefHoldEmailTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "refHoldEmail"));
                                 
                                        if (localRefHoldEmail != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRefHoldEmail));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("refHoldEmail cannot be null!!");
                                        }
                                    } if (localCustCitizenshipIdTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custCitizenshipId"));
                                 
                                        if (localCustCitizenshipId != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustCitizenshipId));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custCitizenshipId cannot be null!!");
                                        }
                                    } if (localMisCodeDetailsTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "misCodeDetails"));
                            
                            
                                    if (localMisCodeDetails==null){
                                         throw new org.apache.axis2.databinding.ADBException("misCodeDetails cannot be null!!");
                                    }
                                    elementList.add(localMisCodeDetails);
                                } if (localCustomerAdressesTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "customerAdresses"));
                            
                            
                                    if (localCustomerAdresses==null){
                                         throw new org.apache.axis2.databinding.ADBException("customerAdresses cannot be null!!");
                                    }
                                    elementList.add(localCustomerAdresses);
                                } if (localSignatoryInfoTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "signatoryInfo"));
                            
                            
                                    if (localSignatoryInfo==null){
                                         throw new org.apache.axis2.databinding.ADBException("signatoryInfo cannot be null!!");
                                    }
                                    elementList.add(localSignatoryInfo);
                                } if (localCustomerCBRCodesTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "customerCBRCodes"));
                            
                            
                                    if (localCustomerCBRCodes==null){
                                         throw new org.apache.axis2.databinding.ADBException("customerCBRCodes cannot be null!!");
                                    }
                                    elementList.add(localCustomerCBRCodes);
                                } if (localCustomerAdditionalDetailsTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "customerAdditionalDetails"));
                            
                            
                                    if (localCustomerAdditionalDetails==null){
                                         throw new org.apache.axis2.databinding.ADBException("customerAdditionalDetails cannot be null!!");
                                    }
                                    elementList.add(localCustomerAdditionalDetails);
                                } if (localBorrowerSubsidiaryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "borrowerSubsidiary"));
                                 
                                        if (localBorrowerSubsidiary != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBorrowerSubsidiary));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("borrowerSubsidiary cannot be null!!");
                                        }
                                    } if (localGroupUltimateParentTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "groupUltimateParent"));
                                 
                                        if (localGroupUltimateParent != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localGroupUltimateParent));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("groupUltimateParent cannot be null!!");
                                        }
                                    } if (localLegalEntityIdentifierNumberTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "legalEntityIdentifierNumber"));
                                 
                                        if (localLegalEntityIdentifierNumber != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLegalEntityIdentifierNumber));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("legalEntityIdentifierNumber cannot be null!!");
                                        }
                                    } if (localModifyCorporateCustDtlsTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "modifyCorporateCustDtls"));
                            
                            
                                    if (localModifyCorporateCustDtls==null){
                                         throw new org.apache.axis2.databinding.ADBException("modifyCorporateCustDtls cannot be null!!");
                                    }
                                    elementList.add(localModifyCorporateCustDtls);
                                } if (localCustEducationalQualificationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custEducationalQualification"));
                                 
                                        if (localCustEducationalQualification != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustEducationalQualification));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custEducationalQualification cannot be null!!");
                                        }
                                    } if (localCustomerProductRelationInfoTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "customerProductRelationInfo"));
                            
                            
                                    if (localCustomerProductRelationInfo==null){
                                         throw new org.apache.axis2.databinding.ADBException("customerProductRelationInfo cannot be null!!");
                                    }
                                    elementList.add(localCustomerProductRelationInfo);
                                } if (localCustAccountOpenPurposeTracker){
                             if (localCustAccountOpenPurpose!=null) {
                                 for (int i = 0;i < localCustAccountOpenPurpose.length;i++){

                                    if (localCustAccountOpenPurpose[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                          "custAccountOpenPurpose"));
                                         elementList.add(localCustAccountOpenPurpose[i]);
                                    } else {
                                        
                                                // nothing to do
                                            
                                    }

                                 }
                             } else {
                                 
                                        throw new org.apache.axis2.databinding.ADBException("custAccountOpenPurpose cannot be null!!");
                                    
                             }

                        } if (localWebsiteAddressTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "websiteAddress"));
                                 
                                        if (localWebsiteAddress != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localWebsiteAddress));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("websiteAddress cannot be null!!");
                                        }
                                    } if (localSourceOfincomeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "sourceOfincome"));
                                 
                                        if (localSourceOfincome != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSourceOfincome));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sourceOfincome cannot be null!!");
                                        }
                                    } if (localNatureOfBusinessTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "natureOfBusiness"));
                                 
                                        if (localNatureOfBusiness != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNatureOfBusiness));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("natureOfBusiness cannot be null!!");
                                        }
                                    } if (localEmploymentTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "employmentType"));
                                 
                                        if (localEmploymentType != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmploymentType));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("employmentType cannot be null!!");
                                        }
                                    } if (localResLandmarkTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "resLandmark"));
                                 
                                        if (localResLandmark != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localResLandmark));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("resLandmark cannot be null!!");
                                        }
                                    } if (localResLatitudeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "resLatitude"));
                                 
                                        if (localResLatitude != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localResLatitude));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("resLatitude cannot be null!!");
                                        }
                                    } if (localResLongitudeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "resLongitude"));
                                 
                                        if (localResLongitude != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localResLongitude));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("resLongitude cannot be null!!");
                                        }
                                    } if (localMailingLandmarkTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "mailingLandmark"));
                                 
                                        if (localMailingLandmark != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMailingLandmark));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("mailingLandmark cannot be null!!");
                                        }
                                    } if (localMailingLatitudeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "mailingLatitude"));
                                 
                                        if (localMailingLatitude != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMailingLatitude));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("mailingLatitude cannot be null!!");
                                        }
                                    } if (localMailingLongitudeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "mailingLongitude"));
                                 
                                        if (localMailingLongitude != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMailingLongitude));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("mailingLongitude cannot be null!!");
                                        }
                                    } if (localEidaExpiryDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "eidaExpiryDate"));
                                 
                                        if (localEidaExpiryDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEidaExpiryDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("eidaExpiryDate cannot be null!!");
                                        }
                                    } if (localCountryOfIncomeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "countryOfIncome"));
                                 
                                        if (localCountryOfIncome != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCountryOfIncome));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("countryOfIncome cannot be null!!");
                                        }
                                    } if (localAnnualIncomeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "annualIncome"));
                                 
                                        if (localAnnualIncome != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAnnualIncome));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("annualIncome cannot be null!!");
                                        }
                                    } if (localAnnualIncomeCurrencyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "annualIncomeCurrency"));
                                 
                                        if (localAnnualIncomeCurrency != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAnnualIncomeCurrency));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("annualIncomeCurrency cannot be null!!");
                                        }
                                    } if (localDualNationalityFlagTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "dualNationalityFlag"));
                                 
                                        if (localDualNationalityFlag != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDualNationalityFlag));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("dualNationalityFlag cannot be null!!");
                                        }
                                    } if (localSecondNationalityTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "secondNationality"));
                                 
                                        if (localSecondNationality != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSecondNationality));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("secondNationality cannot be null!!");
                                        }
                                    } if (localPermLandmarkTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "permLandmark"));
                                 
                                        if (localPermLandmark != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPermLandmark));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("permLandmark cannot be null!!");
                                        }
                                    } if (localPermLatitudeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "permLatitude"));
                                 
                                        if (localPermLatitude != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPermLatitude));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("permLatitude cannot be null!!");
                                        }
                                    } if (localPermLongitudeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "permLongitude"));
                                 
                                        if (localPermLongitude != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPermLongitude));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("permLongitude cannot be null!!");
                                        }
                                    } if (localSelfEmpCompanyNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "selfEmpCompanyName"));
                                 
                                        if (localSelfEmpCompanyName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSelfEmpCompanyName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("selfEmpCompanyName cannot be null!!");
                                        }
                                    } if (localSupplierDualUsedGoodsTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "supplierDualUsedGoods"));
                                 
                                        if (localSupplierDualUsedGoods != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSupplierDualUsedGoods));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("supplierDualUsedGoods cannot be null!!");
                                        }
                                    } if (localDualUseGoodsListTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "dualUseGoodsList"));
                                 
                                        if (localDualUseGoodsList != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDualUseGoodsList));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("dualUseGoodsList cannot be null!!");
                                        }
                                    } if (localSourceOfWealthTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "sourceOfWealth"));
                                 
                                        if (localSourceOfWealth != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSourceOfWealth));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sourceOfWealth cannot be null!!");
                                        }
                                    } if (localOtherBankUAEAccountTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "otherBankUAEAccount"));
                                 
                                        if (localOtherBankUAEAccount != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOtherBankUAEAccount));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("otherBankUAEAccount cannot be null!!");
                                        }
                                    } if (localPepStatusRiskTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "pepStatusRisk"));
                                 
                                        if (localPepStatusRisk != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPepStatusRisk));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("pepStatusRisk cannot be null!!");
                                        }
                                    } if (localOnboardingRiskTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "onboardingRisk"));
                                 
                                        if (localOnboardingRisk != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOnboardingRisk));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("onboardingRisk cannot be null!!");
                                        }
                                    } if (localChannelRiskTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "channelRisk"));
                                 
                                        if (localChannelRisk != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localChannelRisk));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("channelRisk cannot be null!!");
                                        }
                                    } if (localLegalEntityRiskTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "legalEntityRisk"));
                                 
                                        if (localLegalEntityRisk != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLegalEntityRisk));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("legalEntityRisk cannot be null!!");
                                        }
                                    } if (localEntityTypeRiskTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "entityTypeRisk"));
                                 
                                        if (localEntityTypeRisk != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEntityTypeRisk));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("entityTypeRisk cannot be null!!");
                                        }
                                    } if (localOwnershipStructureRiskTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "ownershipStructureRisk"));
                                 
                                        if (localOwnershipStructureRisk != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOwnershipStructureRisk));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ownershipStructureRisk cannot be null!!");
                                        }
                                    } if (localCompanyJurisdictionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "companyJurisdiction"));
                                 
                                        if (localCompanyJurisdiction != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCompanyJurisdiction));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("companyJurisdiction cannot be null!!");
                                        }
                                    } if (localCountryOfOperationsTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "countryOfOperations"));
                                 
                                        if (localCountryOfOperations != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCountryOfOperations));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("countryOfOperations cannot be null!!");
                                        }
                                    } if (localPowerOfAttorneyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "powerOfAttorney"));
                                 
                                        if (localPowerOfAttorney != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPowerOfAttorney));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("powerOfAttorney cannot be null!!");
                                        }
                                    } if (localPoaNationalityTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "poaNationality"));
                                 
                                        if (localPoaNationality != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPoaNationality));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("poaNationality cannot be null!!");
                                        }
                                    } if (localPoaResidenceTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "poaResidence"));
                                 
                                        if (localPoaResidence != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPoaResidence));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("poaResidence cannot be null!!");
                                        }
                                    } if (localInCorpDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "inCorpDate"));
                                 
                                        if (localInCorpDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localInCorpDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("inCorpDate cannot be null!!");
                                        }
                                    } if (localPrimSourceofIncomeIndustryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "primSourceofIncomeIndustry"));
                                 
                                        if (localPrimSourceofIncomeIndustry != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPrimSourceofIncomeIndustry));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("primSourceofIncomeIndustry cannot be null!!");
                                        }
                                    } if (localPrimSourceofIncomeCntryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "primSourceofIncomeCntry"));
                                 
                                        if (localPrimSourceofIncomeCntry != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPrimSourceofIncomeCntry));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("primSourceofIncomeCntry cannot be null!!");
                                        }
                                    } if (localAddSourceIncomeIndustryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "addSourceIncomeIndustry"));
                                 
                                        if (localAddSourceIncomeIndustry != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAddSourceIncomeIndustry));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("addSourceIncomeIndustry cannot be null!!");
                                        }
                                    } if (localAdditionalIncomeTracker){
                             if (localAdditionalIncome!=null) {
                                 for (int i = 0;i < localAdditionalIncome.length;i++){

                                    if (localAdditionalIncome[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                          "additionalIncome"));
                                         elementList.add(localAdditionalIncome[i]);
                                    } else {
                                        
                                                // nothing to do
                                            
                                    }

                                 }
                             } else {
                                 
                                        throw new org.apache.axis2.databinding.ADBException("additionalIncome cannot be null!!");
                                    
                             }

                        } if (localAdditionalIncomeCountryTracker){
                             if (localAdditionalIncomeCountry!=null) {
                                 for (int i = 0;i < localAdditionalIncomeCountry.length;i++){

                                    if (localAdditionalIncomeCountry[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                          "additionalIncomeCountry"));
                                         elementList.add(localAdditionalIncomeCountry[i]);
                                    } else {
                                        
                                                // nothing to do
                                            
                                    }

                                 }
                             } else {
                                 
                                        throw new org.apache.axis2.databinding.ADBException("additionalIncomeCountry cannot be null!!");
                                    
                             }

                        }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static ModCustomerInfoReq_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            ModCustomerInfoReq_type0 object =
                new ModCustomerInfoReq_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"ModCustomerInfoReq_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (ModCustomerInfoReq_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                        java.util.ArrayList list81 = new java.util.ArrayList();
                    
                        java.util.ArrayList list121 = new java.util.ArrayList();
                    
                        java.util.ArrayList list122 = new java.util.ArrayList();
                    
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","customerId").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"customerId" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustomerId(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                                }
                            
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custPrefix").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custPrefix" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustPrefix(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custFullName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custFullName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustFullName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custShortName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custShortName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustShortName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custCodeStat").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custCodeStat" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustCodeStat(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custDeceasedStatus").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custDeceasedStatus" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustDeceasedStatus(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custCodeStatus").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custCodeStatus" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustCodeStatus(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custDesignation").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custDesignation" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustDesignation(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custLanguage").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custLanguage" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustLanguage(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custIncomeCategory").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custIncomeCategory" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustIncomeCategory(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custSignatureType").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custSignatureType" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustSignatureType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custProfessionCategory").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custProfessionCategory" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustProfessionCategory(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custITNum").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custITNum" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustITNum(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custPhone").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custPhone" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustPhone(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custPhoneOff").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custPhoneOff" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustPhoneOff(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custFax").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custFax" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustFax(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custMobile").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custMobile" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustMobile(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custEmail").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custEmail" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustEmail(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custStatus").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custStatus" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustStatus(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custType").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custType" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custSex").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custSex" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustSex(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custMaritalStatus").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custMaritalStatus" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustMaritalStatus(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custDependantChildren").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custDependantChildren" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustDependantChildren(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custEthnicOrigin").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custEthnicOrigin" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustEthnicOrigin(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custNationality").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custNationality" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustNationality(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custBusinessRegNo").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custBusinessRegNo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustBusinessRegNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custBusinessCategory").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custBusinessCategory" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustBusinessCategory(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custBusinessType").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custBusinessType" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustBusinessType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","flagStaff").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"flagStaff" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFlagStaff(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","flagMinor").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"flagMinor" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFlagMinor(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","flagMember").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"flagMember" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFlagMember(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","flagLocGlob").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"flagLocGlob" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFlagLocGlob(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","flagUnadv").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"flagUnadv" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFlagUnadv(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","flagDocComplete").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"flagDocComplete" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFlagDocComplete(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","flagKio").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"flagKio" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFlagKio(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","flagHoldMail").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"flagHoldMail" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFlagHoldMail(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","codMntOption").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"codMntOption" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCodMntOption(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","codLastMntMakerId").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"codLastMntMakerId" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCodLastMntMakerId(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","codLastMntCheckerId").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"codLastMntCheckerId" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCodLastMntCheckerId(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","codOfficerId").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"codOfficerId" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCodOfficerId(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","codMemberNo").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"codMemberNo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCodMemberNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","codReport1").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"codReport1" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCodReport1(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","codReport2").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"codReport2" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCodReport2(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","codReport3").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"codReport3" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCodReport3(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","codLiabNo").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"codLiabNo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCodLiabNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","creditRating").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"creditRating" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCreditRating(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","dateRevision").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"dateRevision" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDateRevision(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","fxCustCleanRiskLimit").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"fxCustCleanRiskLimit" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFxCustCleanRiskLimit(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","fxCleanRiskLimit").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"fxCleanRiskLimit" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFxCleanRiskLimit(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","amtLimitTot").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"amtLimitTot" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAmtLimitTot(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","codCcyLimit").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"codCcyLimit" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCodCcyLimit(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","secCustCleanRiskLlimit").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"secCustCleanRiskLlimit" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSecCustCleanRiskLlimit(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","secCleanRiskLimit").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"secCleanRiskLimit" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSecCleanRiskLimit(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","secCustPstlRiskLlimit").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"secCustPstlRiskLlimit" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSecCustPstlRiskLlimit(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","secPstlRiskLlimit").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"secPstlRiskLlimit" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSecPstlRiskLlimit(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","codEmployeeId").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"codEmployeeId" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCodEmployeeId(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","guardianType").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"guardianType" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setGuardianType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","acctNoDefault").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"acctNoDefault" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAcctNoDefault(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","txtCustResidence").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"txtCustResidence" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTxtCustResidence(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","aflIssueDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"aflIssueDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAflIssueDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","aflExpiryDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"aflExpiryDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAflExpiryDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","aflEffectiveDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"aflEffectiveDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAflEffectiveDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","lastRenewDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"lastRenewDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLastRenewDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","refHoldPhone").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"refHoldPhone" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRefHoldPhone(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","refHoldPhoneOff").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"refHoldPhoneOff" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRefHoldPhoneOff(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","refHoldFax").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"refHoldFax" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRefHoldFax(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","refHoldMobile").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"refHoldMobile" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRefHoldMobile(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","refHoldEmail").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"refHoldEmail" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRefHoldEmail(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custCitizenshipId").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custCitizenshipId" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustCitizenshipId(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","misCodeDetails").equals(reader.getName())){
                                
                                                object.setMisCodeDetails(MisCodeDetails_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","customerAdresses").equals(reader.getName())){
                                
                                                object.setCustomerAdresses(CustomerAdresses_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","signatoryInfo").equals(reader.getName())){
                                
                                                object.setSignatoryInfo(SignatoryInfo_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","customerCBRCodes").equals(reader.getName())){
                                
                                                object.setCustomerCBRCodes(CustomerCBRCodes_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","customerAdditionalDetails").equals(reader.getName())){
                                
                                                object.setCustomerAdditionalDetails(CustomerAdditionalDetails_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","borrowerSubsidiary").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"borrowerSubsidiary" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBorrowerSubsidiary(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","groupUltimateParent").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"groupUltimateParent" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setGroupUltimateParent(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","legalEntityIdentifierNumber").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"legalEntityIdentifierNumber" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLegalEntityIdentifierNumber(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","modifyCorporateCustDtls").equals(reader.getName())){
                                
                                                object.setModifyCorporateCustDtls(ModifyCorporateCustDtls_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custEducationalQualification").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custEducationalQualification" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustEducationalQualification(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","customerProductRelationInfo").equals(reader.getName())){
                                
                                                object.setCustomerProductRelationInfo(CustomerProductRelationInfo_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custAccountOpenPurpose").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    list81.add(CustAccountOpenPurpose_type0.Factory.parse(reader));
                                                                
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone81 = false;
                                                        while(!loopDone81){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone81 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custAccountOpenPurpose").equals(reader.getName())){
                                                                    list81.add(CustAccountOpenPurpose_type0.Factory.parse(reader));
                                                                        
                                                                }else{
                                                                    loopDone81 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array
                                                        
                                                        object.setCustAccountOpenPurpose((CustAccountOpenPurpose_type0[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                CustAccountOpenPurpose_type0.class,
                                                                list81));
                                                            
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","websiteAddress").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"websiteAddress" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setWebsiteAddress(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","sourceOfincome").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"sourceOfincome" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSourceOfincome(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","natureOfBusiness").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"natureOfBusiness" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNatureOfBusiness(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","employmentType").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"employmentType" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEmploymentType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","resLandmark").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"resLandmark" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setResLandmark(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","resLatitude").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"resLatitude" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setResLatitude(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","resLongitude").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"resLongitude" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setResLongitude(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","mailingLandmark").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"mailingLandmark" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMailingLandmark(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","mailingLatitude").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"mailingLatitude" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMailingLatitude(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","mailingLongitude").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"mailingLongitude" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMailingLongitude(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","eidaExpiryDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"eidaExpiryDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEidaExpiryDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","countryOfIncome").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"countryOfIncome" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCountryOfIncome(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","annualIncome").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"annualIncome" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAnnualIncome(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","annualIncomeCurrency").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"annualIncomeCurrency" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAnnualIncomeCurrency(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","dualNationalityFlag").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"dualNationalityFlag" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDualNationalityFlag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","secondNationality").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"secondNationality" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSecondNationality(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","permLandmark").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"permLandmark" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPermLandmark(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","permLatitude").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"permLatitude" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPermLatitude(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","permLongitude").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"permLongitude" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPermLongitude(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","selfEmpCompanyName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"selfEmpCompanyName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSelfEmpCompanyName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","supplierDualUsedGoods").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"supplierDualUsedGoods" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSupplierDualUsedGoods(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","dualUseGoodsList").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"dualUseGoodsList" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDualUseGoodsList(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","sourceOfWealth").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"sourceOfWealth" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSourceOfWealth(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","otherBankUAEAccount").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"otherBankUAEAccount" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOtherBankUAEAccount(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","pepStatusRisk").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"pepStatusRisk" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPepStatusRisk(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","onboardingRisk").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"onboardingRisk" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOnboardingRisk(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","channelRisk").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"channelRisk" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setChannelRisk(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","legalEntityRisk").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"legalEntityRisk" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLegalEntityRisk(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","entityTypeRisk").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"entityTypeRisk" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEntityTypeRisk(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","ownershipStructureRisk").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ownershipStructureRisk" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOwnershipStructureRisk(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","companyJurisdiction").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"companyJurisdiction" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCompanyJurisdiction(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","countryOfOperations").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"countryOfOperations" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCountryOfOperations(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","powerOfAttorney").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"powerOfAttorney" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPowerOfAttorney(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","poaNationality").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"poaNationality" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPoaNationality(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","poaResidence").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"poaResidence" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPoaResidence(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","inCorpDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"inCorpDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setInCorpDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","primSourceofIncomeIndustry").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"primSourceofIncomeIndustry" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPrimSourceofIncomeIndustry(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","primSourceofIncomeCntry").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"primSourceofIncomeCntry" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPrimSourceofIncomeCntry(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","addSourceIncomeIndustry").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"addSourceIncomeIndustry" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAddSourceIncomeIndustry(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","additionalIncome").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    list121.add(AdditionalIncome_type0.Factory.parse(reader));
                                                                
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone121 = false;
                                                        while(!loopDone121){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone121 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","additionalIncome").equals(reader.getName())){
                                                                    list121.add(AdditionalIncome_type0.Factory.parse(reader));
                                                                        
                                                                }else{
                                                                    loopDone121 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array
                                                        
                                                        object.setAdditionalIncome((AdditionalIncome_type0[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                AdditionalIncome_type0.class,
                                                                list121));
                                                            
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","additionalIncomeCountry").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    list122.add(AdditionalIncomeCountry_type0.Factory.parse(reader));
                                                                
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone122 = false;
                                                        while(!loopDone122){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone122 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","additionalIncomeCountry").equals(reader.getName())){
                                                                    list122.add(AdditionalIncomeCountry_type0.Factory.parse(reader));
                                                                        
                                                                }else{
                                                                    loopDone122 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array
                                                        
                                                        object.setAdditionalIncomeCountry((AdditionalIncomeCountry_type0[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                AdditionalIncomeCountry_type0.class,
                                                                list122));
                                                            
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class ExtensionMapper{

          public static java.lang.Object getTypeObject(java.lang.String namespaceURI,
                                                       java.lang.String typeName,
                                                       javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{

              
                  if (
                  "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd".equals(namespaceURI) &&
                  "custAccountOpenPurpose_type0".equals(typeName)){
                   
                            return  CustAccountOpenPurpose_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd".equals(namespaceURI) &&
                  "customerAdresses_type0".equals(typeName)){
                   
                            return  CustomerAdresses_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd".equals(namespaceURI) &&
                  "additionalIncomeCountry_type0".equals(typeName)){
                   
                            return  AdditionalIncomeCountry_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd".equals(namespaceURI) &&
                  "ModCustomerInfoReq_type0".equals(typeName)){
                   
                            return  ModCustomerInfoReq_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd".equals(namespaceURI) &&
                  "additionalIncome_type0".equals(typeName)){
                   
                            return  AdditionalIncome_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd".equals(namespaceURI) &&
                  "addresses_type0".equals(typeName)){
                   
                            return  Addresses_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd".equals(namespaceURI) &&
                  "customerAdditionalDetails_type0".equals(typeName)){
                   
                            return  CustomerAdditionalDetails_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd".equals(namespaceURI) &&
                  "misCodeDetails_type0".equals(typeName)){
                   
                            return  MisCodeDetails_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd".equals(namespaceURI) &&
                  "signatories_type0".equals(typeName)){
                   
                            return  Signatories_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd".equals(namespaceURI) &&
                  "compMIScb_type0".equals(typeName)){
                   
                            return  CompMIScb_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd".equals(namespaceURI) &&
                  "modifyCorporateCustDtls_type0".equals(typeName)){
                   
                            return  ModifyCorporateCustDtls_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd".equals(namespaceURI) &&
                  "signatoryInfo_type0".equals(typeName)){
                   
                            return  SignatoryInfo_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd".equals(namespaceURI) &&
                  "misCodes_type0".equals(typeName)){
                   
                            return  MisCodes_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/common/header.xsd".equals(namespaceURI) &&
                  "headerType".equals(typeName)){
                   
                            return  HeaderType.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd".equals(namespaceURI) &&
                  "CBRCodes_type0".equals(typeName)){
                   
                            return  CBRCodes_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd".equals(namespaceURI) &&
                  "customerCBRCodes_type0".equals(typeName)){
                   
                            return  CustomerCBRCodes_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd".equals(namespaceURI) &&
                  "UBODetails_type0".equals(typeName)){
                   
                            return  UBODetails_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd".equals(namespaceURI) &&
                  "ModCustomerInfoRes_type0".equals(typeName)){
                   
                            return  ModCustomerInfoRes_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd".equals(namespaceURI) &&
                  "customerProductRelationInfo_type0".equals(typeName)){
                   
                            return  CustomerProductRelationInfo_type0.Factory.parse(reader);
                        

                  }

              
             throw new org.apache.axis2.databinding.ADBException("Unsupported type " + namespaceURI + " " + typeName);
          }

        }
    
        public static class CustomerProductRelationInfo_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = customerProductRelationInfo_type0
                Namespace URI = http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd
                Namespace Prefix = ns3
                */
            

                        /**
                        * field for CustProductRelation1
                        */

                        
                                    protected java.lang.String localCustProductRelation1 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustProductRelation1Tracker = false ;

                           public boolean isCustProductRelation1Specified(){
                               return localCustProductRelation1Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustProductRelation1(){
                               return localCustProductRelation1;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustProductRelation1
                               */
                               public void setCustProductRelation1(java.lang.String param){
                            localCustProductRelation1Tracker = param != null;
                                   
                                            this.localCustProductRelation1=param;
                                    

                               }
                            

                        /**
                        * field for CustProductRelation2
                        */

                        
                                    protected java.lang.String localCustProductRelation2 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustProductRelation2Tracker = false ;

                           public boolean isCustProductRelation2Specified(){
                               return localCustProductRelation2Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustProductRelation2(){
                               return localCustProductRelation2;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustProductRelation2
                               */
                               public void setCustProductRelation2(java.lang.String param){
                            localCustProductRelation2Tracker = param != null;
                                   
                                            this.localCustProductRelation2=param;
                                    

                               }
                            

                        /**
                        * field for CustProductRelation3
                        */

                        
                                    protected java.lang.String localCustProductRelation3 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustProductRelation3Tracker = false ;

                           public boolean isCustProductRelation3Specified(){
                               return localCustProductRelation3Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustProductRelation3(){
                               return localCustProductRelation3;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustProductRelation3
                               */
                               public void setCustProductRelation3(java.lang.String param){
                            localCustProductRelation3Tracker = param != null;
                                   
                                            this.localCustProductRelation3=param;
                                    

                               }
                            

                        /**
                        * field for CustProductRelation4
                        */

                        
                                    protected java.lang.String localCustProductRelation4 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustProductRelation4Tracker = false ;

                           public boolean isCustProductRelation4Specified(){
                               return localCustProductRelation4Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustProductRelation4(){
                               return localCustProductRelation4;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustProductRelation4
                               */
                               public void setCustProductRelation4(java.lang.String param){
                            localCustProductRelation4Tracker = param != null;
                                   
                                            this.localCustProductRelation4=param;
                                    

                               }
                            

                        /**
                        * field for CustProductRelation5
                        */

                        
                                    protected java.lang.String localCustProductRelation5 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustProductRelation5Tracker = false ;

                           public boolean isCustProductRelation5Specified(){
                               return localCustProductRelation5Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustProductRelation5(){
                               return localCustProductRelation5;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustProductRelation5
                               */
                               public void setCustProductRelation5(java.lang.String param){
                            localCustProductRelation5Tracker = param != null;
                                   
                                            this.localCustProductRelation5=param;
                                    

                               }
                            

                        /**
                        * field for CustProductRelation6
                        */

                        
                                    protected java.lang.String localCustProductRelation6 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustProductRelation6Tracker = false ;

                           public boolean isCustProductRelation6Specified(){
                               return localCustProductRelation6Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustProductRelation6(){
                               return localCustProductRelation6;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustProductRelation6
                               */
                               public void setCustProductRelation6(java.lang.String param){
                            localCustProductRelation6Tracker = param != null;
                                   
                                            this.localCustProductRelation6=param;
                                    

                               }
                            

                        /**
                        * field for CustProductRelation7
                        */

                        
                                    protected java.lang.String localCustProductRelation7 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustProductRelation7Tracker = false ;

                           public boolean isCustProductRelation7Specified(){
                               return localCustProductRelation7Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustProductRelation7(){
                               return localCustProductRelation7;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustProductRelation7
                               */
                               public void setCustProductRelation7(java.lang.String param){
                            localCustProductRelation7Tracker = param != null;
                                   
                                            this.localCustProductRelation7=param;
                                    

                               }
                            

                        /**
                        * field for CustProductRelation8
                        */

                        
                                    protected java.lang.String localCustProductRelation8 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustProductRelation8Tracker = false ;

                           public boolean isCustProductRelation8Specified(){
                               return localCustProductRelation8Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustProductRelation8(){
                               return localCustProductRelation8;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustProductRelation8
                               */
                               public void setCustProductRelation8(java.lang.String param){
                            localCustProductRelation8Tracker = param != null;
                                   
                                            this.localCustProductRelation8=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":customerProductRelationInfo_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "customerProductRelationInfo_type0",
                           xmlWriter);
                   }

               
                   }
                if (localCustProductRelation1Tracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custProductRelation1", xmlWriter);
                             

                                          if (localCustProductRelation1==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custProductRelation1 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustProductRelation1);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustProductRelation2Tracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custProductRelation2", xmlWriter);
                             

                                          if (localCustProductRelation2==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custProductRelation2 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustProductRelation2);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustProductRelation3Tracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custProductRelation3", xmlWriter);
                             

                                          if (localCustProductRelation3==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custProductRelation3 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustProductRelation3);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustProductRelation4Tracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custProductRelation4", xmlWriter);
                             

                                          if (localCustProductRelation4==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custProductRelation4 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustProductRelation4);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustProductRelation5Tracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custProductRelation5", xmlWriter);
                             

                                          if (localCustProductRelation5==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custProductRelation5 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustProductRelation5);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustProductRelation6Tracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custProductRelation6", xmlWriter);
                             

                                          if (localCustProductRelation6==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custProductRelation6 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustProductRelation6);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustProductRelation7Tracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custProductRelation7", xmlWriter);
                             

                                          if (localCustProductRelation7==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custProductRelation7 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustProductRelation7);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustProductRelation8Tracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "custProductRelation8", xmlWriter);
                             

                                          if (localCustProductRelation8==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custProductRelation8 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustProductRelation8);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd")){
                return "ns3";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localCustProductRelation1Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custProductRelation1"));
                                 
                                        if (localCustProductRelation1 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustProductRelation1));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custProductRelation1 cannot be null!!");
                                        }
                                    } if (localCustProductRelation2Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custProductRelation2"));
                                 
                                        if (localCustProductRelation2 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustProductRelation2));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custProductRelation2 cannot be null!!");
                                        }
                                    } if (localCustProductRelation3Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custProductRelation3"));
                                 
                                        if (localCustProductRelation3 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustProductRelation3));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custProductRelation3 cannot be null!!");
                                        }
                                    } if (localCustProductRelation4Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custProductRelation4"));
                                 
                                        if (localCustProductRelation4 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustProductRelation4));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custProductRelation4 cannot be null!!");
                                        }
                                    } if (localCustProductRelation5Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custProductRelation5"));
                                 
                                        if (localCustProductRelation5 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustProductRelation5));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custProductRelation5 cannot be null!!");
                                        }
                                    } if (localCustProductRelation6Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custProductRelation6"));
                                 
                                        if (localCustProductRelation6 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustProductRelation6));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custProductRelation6 cannot be null!!");
                                        }
                                    } if (localCustProductRelation7Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custProductRelation7"));
                                 
                                        if (localCustProductRelation7 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustProductRelation7));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custProductRelation7 cannot be null!!");
                                        }
                                    } if (localCustProductRelation8Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "custProductRelation8"));
                                 
                                        if (localCustProductRelation8 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustProductRelation8));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custProductRelation8 cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static CustomerProductRelationInfo_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            CustomerProductRelationInfo_type0 object =
                new CustomerProductRelationInfo_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"customerProductRelationInfo_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (CustomerProductRelationInfo_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custProductRelation1").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custProductRelation1" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustProductRelation1(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custProductRelation2").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custProductRelation2" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustProductRelation2(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custProductRelation3").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custProductRelation3" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustProductRelation3(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custProductRelation4").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custProductRelation4" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustProductRelation4(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custProductRelation5").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custProductRelation5" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustProductRelation5(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custProductRelation6").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custProductRelation6" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustProductRelation6(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custProductRelation7").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custProductRelation7" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustProductRelation7(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","custProductRelation8").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custProductRelation8" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustProductRelation8(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class ModCustomerInfoResMsg
        implements org.apache.axis2.databinding.ADBBean{
        
                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                "ModCustomerInfoResMsg",
                "ns3");

            

                        /**
                        * field for Header
                        */

                        
                                    protected HeaderType localHeader ;
                                

                           /**
                           * Auto generated getter method
                           * @return HeaderType
                           */
                           public  HeaderType getHeader(){
                               return localHeader;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Header
                               */
                               public void setHeader(HeaderType param){
                            
                                            this.localHeader=param;
                                    

                               }
                            

                        /**
                        * field for ModCustomerInfoRes
                        */

                        
                                    protected ModCustomerInfoRes_type0 localModCustomerInfoRes ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localModCustomerInfoResTracker = false ;

                           public boolean isModCustomerInfoResSpecified(){
                               return localModCustomerInfoResTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return ModCustomerInfoRes_type0
                           */
                           public  ModCustomerInfoRes_type0 getModCustomerInfoRes(){
                               return localModCustomerInfoRes;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ModCustomerInfoRes
                               */
                               public void setModCustomerInfoRes(ModCustomerInfoRes_type0 param){
                            localModCustomerInfoResTracker = param != null;
                                   
                                            this.localModCustomerInfoRes=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
               return factory.createOMElement(dataSource,MY_QNAME);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":ModCustomerInfoResMsg",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "ModCustomerInfoResMsg",
                           xmlWriter);
                   }

               
                   }
               
                                            if (localHeader==null){
                                                 throw new org.apache.axis2.databinding.ADBException("header cannot be null!!");
                                            }
                                           localHeader.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","header"),
                                               xmlWriter);
                                         if (localModCustomerInfoResTracker){
                                            if (localModCustomerInfoRes==null){
                                                 throw new org.apache.axis2.databinding.ADBException("ModCustomerInfoRes cannot be null!!");
                                            }
                                           localModCustomerInfoRes.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","ModCustomerInfoRes"),
                                               xmlWriter);
                                        }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd")){
                return "ns3";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "header"));
                            
                            
                                    if (localHeader==null){
                                         throw new org.apache.axis2.databinding.ADBException("header cannot be null!!");
                                    }
                                    elementList.add(localHeader);
                                 if (localModCustomerInfoResTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "ModCustomerInfoRes"));
                            
                            
                                    if (localModCustomerInfoRes==null){
                                         throw new org.apache.axis2.databinding.ADBException("ModCustomerInfoRes cannot be null!!");
                                    }
                                    elementList.add(localModCustomerInfoRes);
                                }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static ModCustomerInfoResMsg parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            ModCustomerInfoResMsg object =
                new ModCustomerInfoResMsg();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"ModCustomerInfoResMsg".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (ModCustomerInfoResMsg)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","header").equals(reader.getName())){
                                
                                                object.setHeader(HeaderType.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                                }
                            
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","ModCustomerInfoRes").equals(reader.getName())){
                                
                                                object.setModCustomerInfoRes(ModCustomerInfoRes_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class ModifyCorporateCustDtls_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = modifyCorporateCustDtls_type0
                Namespace URI = http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd
                Namespace Prefix = ns3
                */
            

                        /**
                        * field for NumberOfEmployees
                        */

                        
                                    protected java.lang.String localNumberOfEmployees ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNumberOfEmployeesTracker = false ;

                           public boolean isNumberOfEmployeesSpecified(){
                               return localNumberOfEmployeesTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNumberOfEmployees(){
                               return localNumberOfEmployees;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NumberOfEmployees
                               */
                               public void setNumberOfEmployees(java.lang.String param){
                            localNumberOfEmployeesTracker = param != null;
                                   
                                            this.localNumberOfEmployees=param;
                                    

                               }
                            

                        /**
                        * field for AmountAnualSales
                        */

                        
                                    protected java.lang.String localAmountAnualSales ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAmountAnualSalesTracker = false ;

                           public boolean isAmountAnualSalesSpecified(){
                               return localAmountAnualSalesTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAmountAnualSales(){
                               return localAmountAnualSales;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AmountAnualSales
                               */
                               public void setAmountAnualSales(java.lang.String param){
                            localAmountAnualSalesTracker = param != null;
                                   
                                            this.localAmountAnualSales=param;
                                    

                               }
                            

                        /**
                        * field for InCorpDate
                        */

                        
                                    protected java.lang.String localInCorpDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localInCorpDateTracker = false ;

                           public boolean isInCorpDateSpecified(){
                               return localInCorpDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getInCorpDate(){
                               return localInCorpDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param InCorpDate
                               */
                               public void setInCorpDate(java.lang.String param){
                            localInCorpDateTracker = param != null;
                                   
                                            this.localInCorpDate=param;
                                    

                               }
                            

                        /**
                        * field for FinInfLastUpdate
                        */

                        
                                    protected java.lang.String localFinInfLastUpdate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFinInfLastUpdateTracker = false ;

                           public boolean isFinInfLastUpdateSpecified(){
                               return localFinInfLastUpdateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFinInfLastUpdate(){
                               return localFinInfLastUpdate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FinInfLastUpdate
                               */
                               public void setFinInfLastUpdate(java.lang.String param){
                            localFinInfLastUpdateTracker = param != null;
                                   
                                            this.localFinInfLastUpdate=param;
                                    

                               }
                            

                        /**
                        * field for LeadRefNumber
                        */

                        
                                    protected java.lang.String localLeadRefNumber ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLeadRefNumberTracker = false ;

                           public boolean isLeadRefNumberSpecified(){
                               return localLeadRefNumberTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLeadRefNumber(){
                               return localLeadRefNumber;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LeadRefNumber
                               */
                               public void setLeadRefNumber(java.lang.String param){
                            localLeadRefNumberTracker = param != null;
                                   
                                            this.localLeadRefNumber=param;
                                    

                               }
                            

                        /**
                        * field for Phone
                        */

                        
                                    protected java.lang.String localPhone ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPhoneTracker = false ;

                           public boolean isPhoneSpecified(){
                               return localPhoneTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPhone(){
                               return localPhone;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Phone
                               */
                               public void setPhone(java.lang.String param){
                            localPhoneTracker = param != null;
                                   
                                            this.localPhone=param;
                                    

                               }
                            

                        /**
                        * field for CompMIScb
                        */

                        
                                    protected CompMIScb_type0 localCompMIScb ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCompMIScbTracker = false ;

                           public boolean isCompMIScbSpecified(){
                               return localCompMIScbTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return CompMIScb_type0
                           */
                           public  CompMIScb_type0 getCompMIScb(){
                               return localCompMIScb;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CompMIScb
                               */
                               public void setCompMIScb(CompMIScb_type0 param){
                            localCompMIScbTracker = param != null;
                                   
                                            this.localCompMIScb=param;
                                    

                               }
                            

                        /**
                        * field for UBODetails
                        * This was an Array!
                        */

                        
                                    protected UBODetails_type0[] localUBODetails ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUBODetailsTracker = false ;

                           public boolean isUBODetailsSpecified(){
                               return localUBODetailsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return UBODetails_type0[]
                           */
                           public  UBODetails_type0[] getUBODetails(){
                               return localUBODetails;
                           }

                           
                        


                               
                              /**
                               * validate the array for UBODetails
                               */
                              protected void validateUBODetails(UBODetails_type0[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param UBODetails
                              */
                              public void setUBODetails(UBODetails_type0[] param){
                              
                                   validateUBODetails(param);

                               localUBODetailsTracker = param != null;
                                      
                                      this.localUBODetails=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param UBODetails_type0
                             */
                             public void addUBODetails(UBODetails_type0 param){
                                   if (localUBODetails == null){
                                   localUBODetails = new UBODetails_type0[]{};
                                   }

                            
                                 //update the setting tracker
                                localUBODetailsTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localUBODetails);
                               list.add(param);
                               this.localUBODetails =
                             (UBODetails_type0[])list.toArray(
                            new UBODetails_type0[list.size()]);

                             }
                             

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":modifyCorporateCustDtls_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "modifyCorporateCustDtls_type0",
                           xmlWriter);
                   }

               
                   }
                if (localNumberOfEmployeesTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "numberOfEmployees", xmlWriter);
                             

                                          if (localNumberOfEmployees==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("numberOfEmployees cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNumberOfEmployees);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAmountAnualSalesTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "amountAnualSales", xmlWriter);
                             

                                          if (localAmountAnualSales==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("amountAnualSales cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAmountAnualSales);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localInCorpDateTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "inCorpDate", xmlWriter);
                             

                                          if (localInCorpDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("inCorpDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localInCorpDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFinInfLastUpdateTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "finInfLastUpdate", xmlWriter);
                             

                                          if (localFinInfLastUpdate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("finInfLastUpdate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFinInfLastUpdate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLeadRefNumberTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "leadRefNumber", xmlWriter);
                             

                                          if (localLeadRefNumber==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("leadRefNumber cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLeadRefNumber);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPhoneTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "phone", xmlWriter);
                             

                                          if (localPhone==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("phone cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPhone);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCompMIScbTracker){
                                            if (localCompMIScb==null){
                                                 throw new org.apache.axis2.databinding.ADBException("compMIScb cannot be null!!");
                                            }
                                           localCompMIScb.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","compMIScb"),
                                               xmlWriter);
                                        } if (localUBODetailsTracker){
                                       if (localUBODetails!=null){
                                            for (int i = 0;i < localUBODetails.length;i++){
                                                if (localUBODetails[i] != null){
                                                 localUBODetails[i].serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","UBODetails"),
                                                           xmlWriter);
                                                } else {
                                                   
                                                        // we don't have to do any thing since minOccures is zero
                                                    
                                                }

                                            }
                                     } else {
                                        
                                               throw new org.apache.axis2.databinding.ADBException("UBODetails cannot be null!!");
                                        
                                    }
                                 }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd")){
                return "ns3";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localNumberOfEmployeesTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "numberOfEmployees"));
                                 
                                        if (localNumberOfEmployees != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNumberOfEmployees));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("numberOfEmployees cannot be null!!");
                                        }
                                    } if (localAmountAnualSalesTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "amountAnualSales"));
                                 
                                        if (localAmountAnualSales != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAmountAnualSales));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("amountAnualSales cannot be null!!");
                                        }
                                    } if (localInCorpDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "inCorpDate"));
                                 
                                        if (localInCorpDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localInCorpDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("inCorpDate cannot be null!!");
                                        }
                                    } if (localFinInfLastUpdateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "finInfLastUpdate"));
                                 
                                        if (localFinInfLastUpdate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFinInfLastUpdate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("finInfLastUpdate cannot be null!!");
                                        }
                                    } if (localLeadRefNumberTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "leadRefNumber"));
                                 
                                        if (localLeadRefNumber != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLeadRefNumber));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("leadRefNumber cannot be null!!");
                                        }
                                    } if (localPhoneTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "phone"));
                                 
                                        if (localPhone != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPhone));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("phone cannot be null!!");
                                        }
                                    } if (localCompMIScbTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "compMIScb"));
                            
                            
                                    if (localCompMIScb==null){
                                         throw new org.apache.axis2.databinding.ADBException("compMIScb cannot be null!!");
                                    }
                                    elementList.add(localCompMIScb);
                                } if (localUBODetailsTracker){
                             if (localUBODetails!=null) {
                                 for (int i = 0;i < localUBODetails.length;i++){

                                    if (localUBODetails[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                          "UBODetails"));
                                         elementList.add(localUBODetails[i]);
                                    } else {
                                        
                                                // nothing to do
                                            
                                    }

                                 }
                             } else {
                                 
                                        throw new org.apache.axis2.databinding.ADBException("UBODetails cannot be null!!");
                                    
                             }

                        }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static ModifyCorporateCustDtls_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            ModifyCorporateCustDtls_type0 object =
                new ModifyCorporateCustDtls_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"modifyCorporateCustDtls_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (ModifyCorporateCustDtls_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                        java.util.ArrayList list8 = new java.util.ArrayList();
                    
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","numberOfEmployees").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"numberOfEmployees" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNumberOfEmployees(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","amountAnualSales").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"amountAnualSales" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAmountAnualSales(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","inCorpDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"inCorpDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setInCorpDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","finInfLastUpdate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"finInfLastUpdate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFinInfLastUpdate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","leadRefNumber").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"leadRefNumber" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLeadRefNumber(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","phone").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"phone" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPhone(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","compMIScb").equals(reader.getName())){
                                
                                                object.setCompMIScb(CompMIScb_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","UBODetails").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    list8.add(UBODetails_type0.Factory.parse(reader));
                                                                
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone8 = false;
                                                        while(!loopDone8){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone8 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","UBODetails").equals(reader.getName())){
                                                                    list8.add(UBODetails_type0.Factory.parse(reader));
                                                                        
                                                                }else{
                                                                    loopDone8 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array
                                                        
                                                        object.setUBODetails((UBODetails_type0[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                UBODetails_type0.class,
                                                                list8));
                                                            
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class ModCustomerInfoReqMsg
        implements org.apache.axis2.databinding.ADBBean{
        
                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                "ModCustomerInfoReqMsg",
                "ns3");

            

                        /**
                        * field for Header
                        */

                        
                                    protected HeaderType localHeader ;
                                

                           /**
                           * Auto generated getter method
                           * @return HeaderType
                           */
                           public  HeaderType getHeader(){
                               return localHeader;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Header
                               */
                               public void setHeader(HeaderType param){
                            
                                            this.localHeader=param;
                                    

                               }
                            

                        /**
                        * field for ModCustomerInfoReq
                        */

                        
                                    protected ModCustomerInfoReq_type0 localModCustomerInfoReq ;
                                

                           /**
                           * Auto generated getter method
                           * @return ModCustomerInfoReq_type0
                           */
                           public  ModCustomerInfoReq_type0 getModCustomerInfoReq(){
                               return localModCustomerInfoReq;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ModCustomerInfoReq
                               */
                               public void setModCustomerInfoReq(ModCustomerInfoReq_type0 param){
                            
                                            this.localModCustomerInfoReq=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
               return factory.createOMElement(dataSource,MY_QNAME);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":ModCustomerInfoReqMsg",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "ModCustomerInfoReqMsg",
                           xmlWriter);
                   }

               
                   }
               
                                            if (localHeader==null){
                                                 throw new org.apache.axis2.databinding.ADBException("header cannot be null!!");
                                            }
                                           localHeader.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","header"),
                                               xmlWriter);
                                        
                                            if (localModCustomerInfoReq==null){
                                                 throw new org.apache.axis2.databinding.ADBException("ModCustomerInfoReq cannot be null!!");
                                            }
                                           localModCustomerInfoReq.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","ModCustomerInfoReq"),
                                               xmlWriter);
                                        
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd")){
                return "ns3";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "header"));
                            
                            
                                    if (localHeader==null){
                                         throw new org.apache.axis2.databinding.ADBException("header cannot be null!!");
                                    }
                                    elementList.add(localHeader);
                                
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "ModCustomerInfoReq"));
                            
                            
                                    if (localModCustomerInfoReq==null){
                                         throw new org.apache.axis2.databinding.ADBException("ModCustomerInfoReq cannot be null!!");
                                    }
                                    elementList.add(localModCustomerInfoReq);
                                

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static ModCustomerInfoReqMsg parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            ModCustomerInfoReqMsg object =
                new ModCustomerInfoReqMsg();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"ModCustomerInfoReqMsg".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (ModCustomerInfoReqMsg)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","header").equals(reader.getName())){
                                
                                                object.setHeader(HeaderType.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                                }
                            
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","ModCustomerInfoReq").equals(reader.getName())){
                                
                                                object.setModCustomerInfoReq(ModCustomerInfoReq_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                                }
                              
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class CBRCodes_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = CBRCodes_type0
                Namespace URI = http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd
                Namespace Prefix = ns3
                */
            

                        /**
                        * field for CBRCode
                        */

                        
                                    protected java.lang.String localCBRCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCBRCodeTracker = false ;

                           public boolean isCBRCodeSpecified(){
                               return localCBRCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCBRCode(){
                               return localCBRCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CBRCode
                               */
                               public void setCBRCode(java.lang.String param){
                            localCBRCodeTracker = param != null;
                                   
                                            this.localCBRCode=param;
                                    

                               }
                            

                        /**
                        * field for CBRValue
                        */

                        
                                    protected java.lang.String localCBRValue ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCBRValueTracker = false ;

                           public boolean isCBRValueSpecified(){
                               return localCBRValueTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCBRValue(){
                               return localCBRValue;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CBRValue
                               */
                               public void setCBRValue(java.lang.String param){
                            localCBRValueTracker = param != null;
                                   
                                            this.localCBRValue=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":CBRCodes_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "CBRCodes_type0",
                           xmlWriter);
                   }

               
                   }
                if (localCBRCodeTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "CBRCode", xmlWriter);
                             

                                          if (localCBRCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("CBRCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCBRCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCBRValueTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "CBRValue", xmlWriter);
                             

                                          if (localCBRValue==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("CBRValue cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCBRValue);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd")){
                return "ns3";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localCBRCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "CBRCode"));
                                 
                                        if (localCBRCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCBRCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("CBRCode cannot be null!!");
                                        }
                                    } if (localCBRValueTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "CBRValue"));
                                 
                                        if (localCBRValue != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCBRValue));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("CBRValue cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static CBRCodes_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            CBRCodes_type0 object =
                new CBRCodes_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"CBRCodes_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (CBRCodes_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","CBRCode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"CBRCode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCBRCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","CBRValue").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"CBRValue" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCBRValue(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class HeaderType
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = headerType
                Namespace URI = http://www.adcb.com/esb/common/header.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for UsecaseID
                        */

                        
                                    protected java.lang.String localUsecaseID ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUsecaseIDTracker = false ;

                           public boolean isUsecaseIDSpecified(){
                               return localUsecaseIDTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUsecaseID(){
                               return localUsecaseID;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param UsecaseID
                               */
                               public void setUsecaseID(java.lang.String param){
                            localUsecaseIDTracker = param != null;
                                   
                                            this.localUsecaseID=param;
                                    

                               }
                            

                        /**
                        * field for ServiceName
                        */

                        
                                    protected java.lang.String localServiceName ;
                                

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getServiceName(){
                               return localServiceName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ServiceName
                               */
                               public void setServiceName(java.lang.String param){
                            
                                            this.localServiceName=param;
                                    

                               }
                            

                        /**
                        * field for VersionNo
                        */

                        
                                    protected java.lang.String localVersionNo ;
                                

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getVersionNo(){
                               return localVersionNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param VersionNo
                               */
                               public void setVersionNo(java.lang.String param){
                            
                                            this.localVersionNo=param;
                                    

                               }
                            

                        /**
                        * field for ServiceAction
                        */

                        
                                    protected java.lang.String localServiceAction ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localServiceActionTracker = false ;

                           public boolean isServiceActionSpecified(){
                               return localServiceActionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getServiceAction(){
                               return localServiceAction;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ServiceAction
                               */
                               public void setServiceAction(java.lang.String param){
                            localServiceActionTracker = param != null;
                                   
                                            this.localServiceAction=param;
                                    

                               }
                            

                        /**
                        * field for CorrelationID
                        */

                        
                                    protected java.lang.String localCorrelationID ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCorrelationIDTracker = false ;

                           public boolean isCorrelationIDSpecified(){
                               return localCorrelationIDTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCorrelationID(){
                               return localCorrelationID;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CorrelationID
                               */
                               public void setCorrelationID(java.lang.String param){
                            localCorrelationIDTracker = param != null;
                                   
                                            this.localCorrelationID=param;
                                    

                               }
                            

                        /**
                        * field for SysRefNumber
                        */

                        
                                    protected java.lang.String localSysRefNumber ;
                                

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSysRefNumber(){
                               return localSysRefNumber;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SysRefNumber
                               */
                               public void setSysRefNumber(java.lang.String param){
                            
                                            this.localSysRefNumber=param;
                                    

                               }
                            

                        /**
                        * field for SenderID
                        */

                        
                                    protected java.lang.String localSenderID ;
                                

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSenderID(){
                               return localSenderID;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SenderID
                               */
                               public void setSenderID(java.lang.String param){
                            
                                            this.localSenderID=param;
                                    

                               }
                            

                        /**
                        * field for Consumer
                        */

                        
                                    protected java.lang.String localConsumer ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localConsumerTracker = false ;

                           public boolean isConsumerSpecified(){
                               return localConsumerTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getConsumer(){
                               return localConsumer;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Consumer
                               */
                               public void setConsumer(java.lang.String param){
                            localConsumerTracker = param != null;
                                   
                                            this.localConsumer=param;
                                    

                               }
                            

                        /**
                        * field for ReqTimeStamp
                        */

                        
                                    protected java.lang.String localReqTimeStamp ;
                                

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getReqTimeStamp(){
                               return localReqTimeStamp;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ReqTimeStamp
                               */
                               public void setReqTimeStamp(java.lang.String param){
                            
                                            this.localReqTimeStamp=param;
                                    

                               }
                            

                        /**
                        * field for RepTimeStamp
                        */

                        
                                    protected java.lang.String localRepTimeStamp ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRepTimeStampTracker = false ;

                           public boolean isRepTimeStampSpecified(){
                               return localRepTimeStampTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRepTimeStamp(){
                               return localRepTimeStamp;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RepTimeStamp
                               */
                               public void setRepTimeStamp(java.lang.String param){
                            localRepTimeStampTracker = param != null;
                                   
                                            this.localRepTimeStamp=param;
                                    

                               }
                            

                        /**
                        * field for Username
                        */

                        
                                    protected java.lang.String localUsername ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUsernameTracker = false ;

                           public boolean isUsernameSpecified(){
                               return localUsernameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUsername(){
                               return localUsername;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Username
                               */
                               public void setUsername(java.lang.String param){
                            localUsernameTracker = param != null;
                                   
                                            this.localUsername=param;
                                    

                               }
                            

                        /**
                        * field for Credentials
                        */

                        
                                    protected java.lang.String localCredentials ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCredentialsTracker = false ;

                           public boolean isCredentialsSpecified(){
                               return localCredentialsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCredentials(){
                               return localCredentials;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Credentials
                               */
                               public void setCredentials(java.lang.String param){
                            localCredentialsTracker = param != null;
                                   
                                            this.localCredentials=param;
                                    

                               }
                            

                        /**
                        * field for ReturnCode
                        */

                        
                                    protected java.lang.String localReturnCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localReturnCodeTracker = false ;

                           public boolean isReturnCodeSpecified(){
                               return localReturnCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getReturnCode(){
                               return localReturnCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ReturnCode
                               */
                               public void setReturnCode(java.lang.String param){
                            localReturnCodeTracker = param != null;
                                   
                                            this.localReturnCode=param;
                                    

                               }
                            

                        /**
                        * field for ErrorDescription
                        */

                        
                                    protected java.lang.String localErrorDescription ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localErrorDescriptionTracker = false ;

                           public boolean isErrorDescriptionSpecified(){
                               return localErrorDescriptionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getErrorDescription(){
                               return localErrorDescription;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ErrorDescription
                               */
                               public void setErrorDescription(java.lang.String param){
                            localErrorDescriptionTracker = param != null;
                                   
                                            this.localErrorDescription=param;
                                    

                               }
                            

                        /**
                        * field for ErrorDetail
                        */

                        
                                    protected java.lang.String localErrorDetail ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localErrorDetailTracker = false ;

                           public boolean isErrorDetailSpecified(){
                               return localErrorDetailTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getErrorDetail(){
                               return localErrorDetail;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ErrorDetail
                               */
                               public void setErrorDetail(java.lang.String param){
                            localErrorDetailTracker = param != null;
                                   
                                            this.localErrorDetail=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/common/header.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":headerType",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "headerType",
                           xmlWriter);
                   }

               
                   }
                if (localUsecaseIDTracker){
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "usecaseID", xmlWriter);
                             

                                          if (localUsecaseID==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("usecaseID cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUsecaseID);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "serviceName", xmlWriter);
                             

                                          if (localServiceName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("serviceName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localServiceName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "versionNo", xmlWriter);
                             

                                          if (localVersionNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("versionNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localVersionNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                              if (localServiceActionTracker){
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "serviceAction", xmlWriter);
                             

                                          if (localServiceAction==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("serviceAction cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localServiceAction);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCorrelationIDTracker){
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "correlationID", xmlWriter);
                             

                                          if (localCorrelationID==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("correlationID cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCorrelationID);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "sysRefNumber", xmlWriter);
                             

                                          if (localSysRefNumber==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sysRefNumber cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSysRefNumber);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "senderID", xmlWriter);
                             

                                          if (localSenderID==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("senderID cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSenderID);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                              if (localConsumerTracker){
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "consumer", xmlWriter);
                             

                                          if (localConsumer==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("consumer cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localConsumer);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "reqTimeStamp", xmlWriter);
                             

                                          if (localReqTimeStamp==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("reqTimeStamp cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localReqTimeStamp);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                              if (localRepTimeStampTracker){
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "repTimeStamp", xmlWriter);
                             

                                          if (localRepTimeStamp==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("repTimeStamp cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRepTimeStamp);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUsernameTracker){
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "username", xmlWriter);
                             

                                          if (localUsername==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("username cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUsername);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCredentialsTracker){
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "credentials", xmlWriter);
                             

                                          if (localCredentials==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("credentials cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCredentials);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localReturnCodeTracker){
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "returnCode", xmlWriter);
                             

                                          if (localReturnCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("returnCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localReturnCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localErrorDescriptionTracker){
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "errorDescription", xmlWriter);
                             

                                          if (localErrorDescription==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("errorDescription cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localErrorDescription);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localErrorDetailTracker){
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "errorDetail", xmlWriter);
                             

                                          if (localErrorDetail==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("errorDetail cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localErrorDetail);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/common/header.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localUsecaseIDTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "usecaseID"));
                                 
                                        if (localUsecaseID != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUsecaseID));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("usecaseID cannot be null!!");
                                        }
                                    }
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "serviceName"));
                                 
                                        if (localServiceName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localServiceName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("serviceName cannot be null!!");
                                        }
                                    
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "versionNo"));
                                 
                                        if (localVersionNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localVersionNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("versionNo cannot be null!!");
                                        }
                                     if (localServiceActionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "serviceAction"));
                                 
                                        if (localServiceAction != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localServiceAction));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("serviceAction cannot be null!!");
                                        }
                                    } if (localCorrelationIDTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "correlationID"));
                                 
                                        if (localCorrelationID != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCorrelationID));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("correlationID cannot be null!!");
                                        }
                                    }
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "sysRefNumber"));
                                 
                                        if (localSysRefNumber != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSysRefNumber));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sysRefNumber cannot be null!!");
                                        }
                                    
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "senderID"));
                                 
                                        if (localSenderID != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSenderID));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("senderID cannot be null!!");
                                        }
                                     if (localConsumerTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "consumer"));
                                 
                                        if (localConsumer != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localConsumer));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("consumer cannot be null!!");
                                        }
                                    }
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "reqTimeStamp"));
                                 
                                        if (localReqTimeStamp != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReqTimeStamp));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("reqTimeStamp cannot be null!!");
                                        }
                                     if (localRepTimeStampTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "repTimeStamp"));
                                 
                                        if (localRepTimeStamp != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRepTimeStamp));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("repTimeStamp cannot be null!!");
                                        }
                                    } if (localUsernameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "username"));
                                 
                                        if (localUsername != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUsername));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("username cannot be null!!");
                                        }
                                    } if (localCredentialsTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "credentials"));
                                 
                                        if (localCredentials != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCredentials));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("credentials cannot be null!!");
                                        }
                                    } if (localReturnCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "returnCode"));
                                 
                                        if (localReturnCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReturnCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("returnCode cannot be null!!");
                                        }
                                    } if (localErrorDescriptionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "errorDescription"));
                                 
                                        if (localErrorDescription != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localErrorDescription));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("errorDescription cannot be null!!");
                                        }
                                    } if (localErrorDetailTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "errorDetail"));
                                 
                                        if (localErrorDetail != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localErrorDetail));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("errorDetail cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static HeaderType parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            HeaderType object =
                new HeaderType();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"headerType".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (HeaderType)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","usecaseID").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"usecaseID" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUsecaseID(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","serviceName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"serviceName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setServiceName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                                }
                            
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","versionNo").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"versionNo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setVersionNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                                }
                            
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","serviceAction").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"serviceAction" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setServiceAction(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","correlationID").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"correlationID" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCorrelationID(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","sysRefNumber").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"sysRefNumber" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSysRefNumber(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                                }
                            
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","senderID").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"senderID" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSenderID(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                                }
                            
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","consumer").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"consumer" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setConsumer(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","reqTimeStamp").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"reqTimeStamp" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReqTimeStamp(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                                }
                            
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","repTimeStamp").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"repTimeStamp" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRepTimeStamp(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","username").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"username" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUsername(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","credentials").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"credentials" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCredentials(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","returnCode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"returnCode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReturnCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","errorDescription").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"errorDescription" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setErrorDescription(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","errorDetail").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"errorDetail" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setErrorDetail(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class Header
        implements org.apache.axis2.databinding.ADBBean{
        
                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://www.adcb.com/esb/common/header.xsd",
                "header",
                "ns2");

            

                        /**
                        * field for Header
                        */

                        
                                    protected HeaderType localHeader ;
                                

                           /**
                           * Auto generated getter method
                           * @return HeaderType
                           */
                           public  HeaderType getHeader(){
                               return localHeader;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Header
                               */
                               public void setHeader(HeaderType param){
                            
                                            this.localHeader=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
               return factory.createOMElement(dataSource,MY_QNAME);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                
                //We can safely assume an element has only one type associated with it
                
                                 if (localHeader==null){
                                   throw new org.apache.axis2.databinding.ADBException("header cannot be null!");
                                 }
                                 localHeader.serialize(MY_QNAME,xmlWriter);
                            

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/common/header.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                
                //We can safely assume an element has only one type associated with it
                return localHeader.getPullParser(MY_QNAME);

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static Header parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            Header object =
                new Header();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                   
                while(!reader.isEndElement()) {
                    if (reader.isStartElement() ){
                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","header").equals(reader.getName())){
                                
                                                object.setHeader(HeaderType.Factory.parse(reader));
                                            
                              }  // End of if for expected property start element
                                
                             else{
                                        // A start element we are not expecting indicates an invalid parameter was passed
                                        throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                             }
                          
                             } else {
                                reader.next();
                             }  
                           }  // end of while loop
                        



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class Addresses_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = addresses_type0
                Namespace URI = http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd
                Namespace Prefix = ns3
                */
            

                        /**
                        * field for AddressType
                        */

                        
                                    protected java.lang.String localAddressType ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAddressTypeTracker = false ;

                           public boolean isAddressTypeSpecified(){
                               return localAddressTypeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAddressType(){
                               return localAddressType;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AddressType
                               */
                               public void setAddressType(java.lang.String param){
                            localAddressTypeTracker = param != null;
                                   
                                            this.localAddressType=param;
                                    

                               }
                            

                        /**
                        * field for AddressLine1
                        */

                        
                                    protected java.lang.String localAddressLine1 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAddressLine1Tracker = false ;

                           public boolean isAddressLine1Specified(){
                               return localAddressLine1Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAddressLine1(){
                               return localAddressLine1;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AddressLine1
                               */
                               public void setAddressLine1(java.lang.String param){
                            localAddressLine1Tracker = param != null;
                                   
                                            this.localAddressLine1=param;
                                    

                               }
                            

                        /**
                        * field for AddressLine2
                        */

                        
                                    protected java.lang.String localAddressLine2 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAddressLine2Tracker = false ;

                           public boolean isAddressLine2Specified(){
                               return localAddressLine2Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAddressLine2(){
                               return localAddressLine2;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AddressLine2
                               */
                               public void setAddressLine2(java.lang.String param){
                            localAddressLine2Tracker = param != null;
                                   
                                            this.localAddressLine2=param;
                                    

                               }
                            

                        /**
                        * field for AddressLine3
                        */

                        
                                    protected java.lang.String localAddressLine3 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAddressLine3Tracker = false ;

                           public boolean isAddressLine3Specified(){
                               return localAddressLine3Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAddressLine3(){
                               return localAddressLine3;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AddressLine3
                               */
                               public void setAddressLine3(java.lang.String param){
                            localAddressLine3Tracker = param != null;
                                   
                                            this.localAddressLine3=param;
                                    

                               }
                            

                        /**
                        * field for AddressCity
                        */

                        
                                    protected java.lang.String localAddressCity ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAddressCityTracker = false ;

                           public boolean isAddressCitySpecified(){
                               return localAddressCityTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAddressCity(){
                               return localAddressCity;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AddressCity
                               */
                               public void setAddressCity(java.lang.String param){
                            localAddressCityTracker = param != null;
                                   
                                            this.localAddressCity=param;
                                    

                               }
                            

                        /**
                        * field for AddressState
                        */

                        
                                    protected java.lang.String localAddressState ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAddressStateTracker = false ;

                           public boolean isAddressStateSpecified(){
                               return localAddressStateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAddressState(){
                               return localAddressState;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AddressState
                               */
                               public void setAddressState(java.lang.String param){
                            localAddressStateTracker = param != null;
                                   
                                            this.localAddressState=param;
                                    

                               }
                            

                        /**
                        * field for AddressCountry
                        */

                        
                                    protected java.lang.String localAddressCountry ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAddressCountryTracker = false ;

                           public boolean isAddressCountrySpecified(){
                               return localAddressCountryTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAddressCountry(){
                               return localAddressCountry;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AddressCountry
                               */
                               public void setAddressCountry(java.lang.String param){
                            localAddressCountryTracker = param != null;
                                   
                                            this.localAddressCountry=param;
                                    

                               }
                            

                        /**
                        * field for AddressZip
                        */

                        
                                    protected java.lang.String localAddressZip ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAddressZipTracker = false ;

                           public boolean isAddressZipSpecified(){
                               return localAddressZipTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAddressZip(){
                               return localAddressZip;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AddressZip
                               */
                               public void setAddressZip(java.lang.String param){
                            localAddressZipTracker = param != null;
                                   
                                            this.localAddressZip=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":addresses_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "addresses_type0",
                           xmlWriter);
                   }

               
                   }
                if (localAddressTypeTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "addressType", xmlWriter);
                             

                                          if (localAddressType==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("addressType cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAddressType);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAddressLine1Tracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "addressLine1", xmlWriter);
                             

                                          if (localAddressLine1==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("addressLine1 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAddressLine1);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAddressLine2Tracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "addressLine2", xmlWriter);
                             

                                          if (localAddressLine2==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("addressLine2 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAddressLine2);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAddressLine3Tracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "addressLine3", xmlWriter);
                             

                                          if (localAddressLine3==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("addressLine3 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAddressLine3);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAddressCityTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "addressCity", xmlWriter);
                             

                                          if (localAddressCity==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("addressCity cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAddressCity);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAddressStateTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "addressState", xmlWriter);
                             

                                          if (localAddressState==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("addressState cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAddressState);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAddressCountryTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "addressCountry", xmlWriter);
                             

                                          if (localAddressCountry==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("addressCountry cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAddressCountry);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAddressZipTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "addressZip", xmlWriter);
                             

                                          if (localAddressZip==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("addressZip cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAddressZip);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd")){
                return "ns3";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localAddressTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "addressType"));
                                 
                                        if (localAddressType != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAddressType));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("addressType cannot be null!!");
                                        }
                                    } if (localAddressLine1Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "addressLine1"));
                                 
                                        if (localAddressLine1 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAddressLine1));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("addressLine1 cannot be null!!");
                                        }
                                    } if (localAddressLine2Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "addressLine2"));
                                 
                                        if (localAddressLine2 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAddressLine2));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("addressLine2 cannot be null!!");
                                        }
                                    } if (localAddressLine3Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "addressLine3"));
                                 
                                        if (localAddressLine3 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAddressLine3));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("addressLine3 cannot be null!!");
                                        }
                                    } if (localAddressCityTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "addressCity"));
                                 
                                        if (localAddressCity != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAddressCity));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("addressCity cannot be null!!");
                                        }
                                    } if (localAddressStateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "addressState"));
                                 
                                        if (localAddressState != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAddressState));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("addressState cannot be null!!");
                                        }
                                    } if (localAddressCountryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "addressCountry"));
                                 
                                        if (localAddressCountry != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAddressCountry));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("addressCountry cannot be null!!");
                                        }
                                    } if (localAddressZipTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "addressZip"));
                                 
                                        if (localAddressZip != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAddressZip));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("addressZip cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static Addresses_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            Addresses_type0 object =
                new Addresses_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"addresses_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (Addresses_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","addressType").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"addressType" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAddressType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","addressLine1").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"addressLine1" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAddressLine1(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","addressLine2").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"addressLine2" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAddressLine2(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","addressLine3").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"addressLine3" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAddressLine3(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","addressCity").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"addressCity" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAddressCity(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","addressState").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"addressState" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAddressState(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","addressCountry").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"addressCountry" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAddressCountry(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","addressZip").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"addressZip" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAddressZip(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class CustAccountOpenPurpose_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = custAccountOpenPurpose_type0
                Namespace URI = http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd
                Namespace Prefix = ns3
                */
            

                        /**
                        * field for AccountOpeningPurpose
                        */

                        
                                    protected java.lang.String localAccountOpeningPurpose ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAccountOpeningPurposeTracker = false ;

                           public boolean isAccountOpeningPurposeSpecified(){
                               return localAccountOpeningPurposeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAccountOpeningPurpose(){
                               return localAccountOpeningPurpose;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AccountOpeningPurpose
                               */
                               public void setAccountOpeningPurpose(java.lang.String param){
                            localAccountOpeningPurposeTracker = param != null;
                                   
                                            this.localAccountOpeningPurpose=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":custAccountOpenPurpose_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "custAccountOpenPurpose_type0",
                           xmlWriter);
                   }

               
                   }
                if (localAccountOpeningPurposeTracker){
                                    namespace = "http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd";
                                    writeStartElement(null, namespace, "accountOpeningPurpose", xmlWriter);
                             

                                          if (localAccountOpeningPurpose==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("accountOpeningPurpose cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAccountOpeningPurpose);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd")){
                return "ns3";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localAccountOpeningPurposeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd",
                                                                      "accountOpeningPurpose"));
                                 
                                        if (localAccountOpeningPurpose != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAccountOpeningPurpose));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("accountOpeningPurpose cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static CustAccountOpenPurpose_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            CustAccountOpenPurpose_type0 object =
                new CustAccountOpenPurpose_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"custAccountOpenPurpose_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (CustAccountOpenPurpose_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/mnt/ENTMntSrv/ModCustomerInfo.xsd","accountOpeningPurpose").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"accountOpeningPurpose" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAccountOpeningPurpose(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
            private  org.apache.axiom.om.OMElement  toOM(com.newgen.dscop.stub.ModCustomerInfoStub.ModCustomerInfoReqMsg param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.newgen.dscop.stub.ModCustomerInfoStub.ModCustomerInfoReqMsg.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.newgen.dscop.stub.ModCustomerInfoStub.ModCustomerInfoResMsg param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.newgen.dscop.stub.ModCustomerInfoStub.ModCustomerInfoResMsg.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.newgen.dscop.stub.ModCustomerInfoStub.ModCustomerInfoReqMsg param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.newgen.dscop.stub.ModCustomerInfoStub.ModCustomerInfoReqMsg.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             


        /**
        *  get the default envelope
        */
        private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory){
        return factory.getDefaultEnvelope();
        }


        private  java.lang.Object fromOM(
        org.apache.axiom.om.OMElement param,
        java.lang.Class type,
        java.util.Map extraNamespaces) throws org.apache.axis2.AxisFault{

        try {
        
                if (com.newgen.dscop.stub.ModCustomerInfoStub.ModCustomerInfoReqMsg.class.equals(type)){
                
                           return com.newgen.dscop.stub.ModCustomerInfoStub.ModCustomerInfoReqMsg.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.newgen.dscop.stub.ModCustomerInfoStub.ModCustomerInfoResMsg.class.equals(type)){
                
                           return com.newgen.dscop.stub.ModCustomerInfoStub.ModCustomerInfoResMsg.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
        } catch (java.lang.Exception e) {
        throw org.apache.axis2.AxisFault.makeFault(e);
        }
           return null;
        }



    
   }
   
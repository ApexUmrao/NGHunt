/**
 * AddOnlineAppDataStub.java
 *
 * This file was auto-generated from WSDL
 * by the Apache Axis2 version: 1.6.2  Built on : Apr 17, 2012 (05:33:49 IST)
 */
        package com.newgen.dscop.stub;

        

        /*
        *  AddOnlineAppDataStub java implementation
        */

        
        public class AddOnlineAppDataStub extends org.apache.axis2.client.Stub
        {
        protected org.apache.axis2.description.AxisOperation[] _operations;

        //hashmaps to keep the fault mapping
        private java.util.HashMap faultExceptionNameMap = new java.util.HashMap();
        private java.util.HashMap faultExceptionClassNameMap = new java.util.HashMap();
        private java.util.HashMap faultMessageMap = new java.util.HashMap();
        public String outputXML="";
        private static int counter = 0;

        private static synchronized java.lang.String getUniqueSuffix(){
            // reset the counter if it is greater than 99999
            if (counter > 99999){
                counter = 0;
            }
            counter = counter + 1; 
            return java.lang.Long.toString(java.lang.System.currentTimeMillis()) + "_" + counter;
        }

    
        public  String getInputXml(com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineLendingApplicationDtlsReqMsg addOnlineLendingApplicationDtlsReqMsg2){
        	org.apache.axis2.context.MessageContext _messageContext = null;
        	try{
        		org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[1].getName());
        		_operationClient.getOptions().setAction("/Services/MobilityServices/MobilityMntService/Service/AddOnlineAppData.serviceagent//addOnlineLendingApplicationDtls_Oper");
        		_operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);



        		addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");


        		// create a message context
        		_messageContext = new org.apache.axis2.context.MessageContext();



        		// create SOAP envelope with that payload
        		org.apache.axiom.soap.SOAPEnvelope env = null;


        		env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
        				addOnlineLendingApplicationDtlsReqMsg2,
        				optimizeContent(new javax.xml.namespace.QName("http://xmlns.example.com/1458813209035",
        						"addOnlineLendingApplicationDtls_Oper")), new javax.xml.namespace.QName("http://xmlns.example.com/1458813209035",
        								"addOnlineLendingApplicationDtls_Oper"));

        		//adding SOAP soap_headers
        		_serviceClient.addHeadersToEnvelope(env);
        		// set the message context with that soap envelope
        		_messageContext.setEnvelope(env);
        		return env.toString();

        	}
        	catch(Exception e){
        		return "";
        	}
        }
        
    private void populateAxisService() throws org.apache.axis2.AxisFault {

     //creating the Service with a unique name
     _service = new org.apache.axis2.description.AxisService("AddOnlineAppData" + getUniqueSuffix());
     addAnonymousOperations();

        //creating the operations
        org.apache.axis2.description.AxisOperation __operation;

        _operations = new org.apache.axis2.description.AxisOperation[3];
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://xmlns.example.com/1458813209035", "addOnlineCardAppData_Oper"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[0]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://xmlns.example.com/1458813209035", "addOnlineLendingApplicationDtls_Oper"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[1]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://xmlns.example.com/1458813209035", "addOnlineAppData_Oper"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[2]=__operation;
            
        
        }

    //populates the faults
    private void populateFaults(){
         


    }

    /**
      *Constructor that takes in a configContext
      */

    public AddOnlineAppDataStub(org.apache.axis2.context.ConfigurationContext configurationContext,
       java.lang.String targetEndpoint)
       throws org.apache.axis2.AxisFault {
         this(configurationContext,targetEndpoint,false);
   }


   /**
     * Constructor that takes in a configContext  and useseperate listner
     */
   public AddOnlineAppDataStub(org.apache.axis2.context.ConfigurationContext configurationContext,
        java.lang.String targetEndpoint, boolean useSeparateListener)
        throws org.apache.axis2.AxisFault {
         //To populate AxisService
         populateAxisService();
         populateFaults();

        _serviceClient = new org.apache.axis2.client.ServiceClient(configurationContext,_service);
        
	
        _serviceClient.getOptions().setTo(new org.apache.axis2.addressing.EndpointReference(
                targetEndpoint));
        _serviceClient.getOptions().setUseSeparateListener(useSeparateListener);
        
    
    }

    /**
     * Default Constructor
     */
    public AddOnlineAppDataStub(org.apache.axis2.context.ConfigurationContext configurationContext) throws org.apache.axis2.AxisFault {
        
                    this(configurationContext,"http://10.101.107.21:5542/Services/MobilityServices/MobilityMntService/Service/AddOnlineAppData.serviceagent/AddOnlineAppDataPortTypeEndpoint1" );
                
    }

    /**
     * Default Constructor
     */
    public AddOnlineAppDataStub() throws org.apache.axis2.AxisFault {
        
                    this("http://10.101.107.21:5542/Services/MobilityServices/MobilityMntService/Service/AddOnlineAppData.serviceagent/AddOnlineAppDataPortTypeEndpoint1" );
                
    }

    /**
     * Constructor taking the target endpoint
     */
    public AddOnlineAppDataStub(java.lang.String targetEndpoint) throws org.apache.axis2.AxisFault {
        this(null,targetEndpoint);
    }



        
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.newgen.dscop.AddOnlineAppData#addOnlineCardAppData_Oper
                     * @param addOnlineCardAppDataReqMsg0
                    
                     */

                    

                            public  com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineCardAppDataResMsg addOnlineCardAppData_Oper(

                            com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineCardAppDataReqMsg addOnlineCardAppDataReqMsg0)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[0].getName());
              _operationClient.getOptions().setAction("/Services/MobilityServices/MobilityMntService/Service/AddOnlineAppData.serviceagent//AddOnlineCardAppData_Oper");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    addOnlineCardAppDataReqMsg0,
                                                    optimizeContent(new javax.xml.namespace.QName("http://xmlns.example.com/1458813209035",
                                                    "addOnlineCardAppData_Oper")), new javax.xml.namespace.QName("http://xmlns.example.com/1458813209035",
                                                    "addOnlineCardAppData_Oper"));
                                                
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineCardAppDataResMsg.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineCardAppDataResMsg)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddOnlineCardAppData_Oper"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddOnlineCardAppData_Oper"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddOnlineCardAppData_Oper"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.newgen.dscop.AddOnlineAppData#startaddOnlineCardAppData_Oper
                    * @param addOnlineCardAppDataReqMsg0
                
                */
                public  void startaddOnlineCardAppData_Oper(

                 com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineCardAppDataReqMsg addOnlineCardAppDataReqMsg0,

                  final com.newgen.dscop.stub.AddOnlineAppDataCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[0].getName());
             _operationClient.getOptions().setAction("/Services/MobilityServices/MobilityMntService/Service/AddOnlineAppData.serviceagent//AddOnlineCardAppData_Oper");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    addOnlineCardAppDataReqMsg0,
                                                    optimizeContent(new javax.xml.namespace.QName("http://xmlns.example.com/1458813209035",
                                                    "addOnlineCardAppData_Oper")), new javax.xml.namespace.QName("http://xmlns.example.com/1458813209035",
                                                    "addOnlineCardAppData_Oper"));
                                                
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineCardAppDataResMsg.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultaddOnlineCardAppData_Oper(
                                        (com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineCardAppDataResMsg)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErroraddOnlineCardAppData_Oper(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddOnlineCardAppData_Oper"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddOnlineCardAppData_Oper"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddOnlineCardAppData_Oper"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErroraddOnlineCardAppData_Oper(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddOnlineCardAppData_Oper(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddOnlineCardAppData_Oper(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddOnlineCardAppData_Oper(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddOnlineCardAppData_Oper(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddOnlineCardAppData_Oper(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddOnlineCardAppData_Oper(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddOnlineCardAppData_Oper(f);
                                            }
									    } else {
										    callback.receiveErroraddOnlineCardAppData_Oper(f);
									    }
									} else {
									    callback.receiveErroraddOnlineCardAppData_Oper(f);
									}
								} else {
								    callback.receiveErroraddOnlineCardAppData_Oper(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErroraddOnlineCardAppData_Oper(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[0].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[0].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.newgen.dscop.AddOnlineAppData#addOnlineLendingApplicationDtls_Oper
                     * @param addOnlineLendingApplicationDtlsReqMsg2
                    
                     */

                    

                            public  com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineLendingApplicationDtlsResMsg addOnlineLendingApplicationDtls_Oper(

                            com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineLendingApplicationDtlsReqMsg addOnlineLendingApplicationDtlsReqMsg2)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[1].getName());
              _operationClient.getOptions().setAction("/Services/MobilityServices/MobilityMntService/Service/AddOnlineAppData.serviceagent//addOnlineLendingApplicationDtls_Oper");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    addOnlineLendingApplicationDtlsReqMsg2,
                                                    optimizeContent(new javax.xml.namespace.QName("http://xmlns.example.com/1458813209035",
                                                    "addOnlineLendingApplicationDtls_Oper")), new javax.xml.namespace.QName("http://xmlns.example.com/1458813209035",
                                                    "addOnlineLendingApplicationDtls_Oper"));
                                                
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                outputXML=_returnEnv.toString();
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineLendingApplicationDtlsResMsg.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineLendingApplicationDtlsResMsg)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"addOnlineLendingApplicationDtls_Oper"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"addOnlineLendingApplicationDtls_Oper"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"addOnlineLendingApplicationDtls_Oper"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.newgen.dscop.AddOnlineAppData#startaddOnlineLendingApplicationDtls_Oper
                    * @param addOnlineLendingApplicationDtlsReqMsg2
                
                */
                public  void startaddOnlineLendingApplicationDtls_Oper(

                 com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineLendingApplicationDtlsReqMsg addOnlineLendingApplicationDtlsReqMsg2,

                  final com.newgen.dscop.stub.AddOnlineAppDataCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[1].getName());
             _operationClient.getOptions().setAction("/Services/MobilityServices/MobilityMntService/Service/AddOnlineAppData.serviceagent//addOnlineLendingApplicationDtls_Oper");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    addOnlineLendingApplicationDtlsReqMsg2,
                                                    optimizeContent(new javax.xml.namespace.QName("http://xmlns.example.com/1458813209035",
                                                    "addOnlineLendingApplicationDtls_Oper")), new javax.xml.namespace.QName("http://xmlns.example.com/1458813209035",
                                                    "addOnlineLendingApplicationDtls_Oper"));
                                                
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineLendingApplicationDtlsResMsg.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultaddOnlineLendingApplicationDtls_Oper(
                                        (com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineLendingApplicationDtlsResMsg)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErroraddOnlineLendingApplicationDtls_Oper(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"addOnlineLendingApplicationDtls_Oper"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"addOnlineLendingApplicationDtls_Oper"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"addOnlineLendingApplicationDtls_Oper"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErroraddOnlineLendingApplicationDtls_Oper(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddOnlineLendingApplicationDtls_Oper(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddOnlineLendingApplicationDtls_Oper(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddOnlineLendingApplicationDtls_Oper(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddOnlineLendingApplicationDtls_Oper(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddOnlineLendingApplicationDtls_Oper(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddOnlineLendingApplicationDtls_Oper(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddOnlineLendingApplicationDtls_Oper(f);
                                            }
									    } else {
										    callback.receiveErroraddOnlineLendingApplicationDtls_Oper(f);
									    }
									} else {
									    callback.receiveErroraddOnlineLendingApplicationDtls_Oper(f);
									}
								} else {
								    callback.receiveErroraddOnlineLendingApplicationDtls_Oper(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErroraddOnlineLendingApplicationDtls_Oper(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[1].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[1].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.newgen.dscop.AddOnlineAppData#addOnlineAppData_Oper
                     * @param addOnlineAppDataReqMsg4
                    
                     */

                    

                            public  com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineAppDataResMsg addOnlineAppData_Oper(

                            com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineAppDataReqMsg addOnlineAppDataReqMsg4)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[2].getName());
              _operationClient.getOptions().setAction("/Services/MobilityServices/MobilityMntService/Service/AddOnlineAppData.serviceagent/AddOnlineAppDataPortTypeEndpoint1/AddOnlineAppData_Oper");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    addOnlineAppDataReqMsg4,
                                                    optimizeContent(new javax.xml.namespace.QName("http://xmlns.example.com/1458813209035",
                                                    "addOnlineAppData_Oper")), new javax.xml.namespace.QName("http://xmlns.example.com/1458813209035",
                                                    "addOnlineAppData_Oper"));
                                                
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineAppDataResMsg.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineAppDataResMsg)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddOnlineAppData_Oper"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddOnlineAppData_Oper"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddOnlineAppData_Oper"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.newgen.dscop.AddOnlineAppData#startaddOnlineAppData_Oper
                    * @param addOnlineAppDataReqMsg4
                
                */
                public  void startaddOnlineAppData_Oper(

                 com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineAppDataReqMsg addOnlineAppDataReqMsg4,

                  final com.newgen.dscop.stub.AddOnlineAppDataCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[2].getName());
             _operationClient.getOptions().setAction("/Services/MobilityServices/MobilityMntService/Service/AddOnlineAppData.serviceagent/AddOnlineAppDataPortTypeEndpoint1/AddOnlineAppData_Oper");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    addOnlineAppDataReqMsg4,
                                                    optimizeContent(new javax.xml.namespace.QName("http://xmlns.example.com/1458813209035",
                                                    "addOnlineAppData_Oper")), new javax.xml.namespace.QName("http://xmlns.example.com/1458813209035",
                                                    "addOnlineAppData_Oper"));
                                                
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineAppDataResMsg.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultaddOnlineAppData_Oper(
                                        (com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineAppDataResMsg)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErroraddOnlineAppData_Oper(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddOnlineAppData_Oper"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddOnlineAppData_Oper"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddOnlineAppData_Oper"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErroraddOnlineAppData_Oper(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddOnlineAppData_Oper(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddOnlineAppData_Oper(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddOnlineAppData_Oper(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddOnlineAppData_Oper(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddOnlineAppData_Oper(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddOnlineAppData_Oper(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddOnlineAppData_Oper(f);
                                            }
									    } else {
										    callback.receiveErroraddOnlineAppData_Oper(f);
									    }
									} else {
									    callback.receiveErroraddOnlineAppData_Oper(f);
									}
								} else {
								    callback.receiveErroraddOnlineAppData_Oper(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErroraddOnlineAppData_Oper(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[2].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[2].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                


       /**
        *  A utility method that copies the namepaces from the SOAPEnvelope
        */
       private java.util.Map getEnvelopeNamespaces(org.apache.axiom.soap.SOAPEnvelope env){
        java.util.Map returnMap = new java.util.HashMap();
        java.util.Iterator namespaceIterator = env.getAllDeclaredNamespaces();
        while (namespaceIterator.hasNext()) {
            org.apache.axiom.om.OMNamespace ns = (org.apache.axiom.om.OMNamespace) namespaceIterator.next();
            returnMap.put(ns.getPrefix(),ns.getNamespaceURI());
        }
       return returnMap;
    }

    
    
    private javax.xml.namespace.QName[] opNameArray = null;
    private boolean optimizeContent(javax.xml.namespace.QName opName) {
        

        if (opNameArray == null) {
            return false;
        }
        for (int i = 0; i < opNameArray.length; i++) {
            if (opName.equals(opNameArray[i])) {
                return true;   
            }
        }
        return false;
    }
     //http://10.101.107.21:5542/Services/MobilityServices/MobilityMntService/Service/AddOnlineAppData.serviceagent/AddOnlineAppDataPortTypeEndpoint1
        public static class CutomerPersonalInformation_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = cutomerPersonalInformation_type0
                Namespace URI = http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for AccountRelationShip
                        */

                        
                                    protected java.lang.String localAccountRelationShip ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAccountRelationShipTracker = false ;

                           public boolean isAccountRelationShipSpecified(){
                               return localAccountRelationShipTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAccountRelationShip(){
                               return localAccountRelationShip;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AccountRelationShip
                               */
                               public void setAccountRelationShip(java.lang.String param){
                            localAccountRelationShipTracker = param != null;
                                   
                                            this.localAccountRelationShip=param;
                                    

                               }
                            

                        /**
                        * field for BankRelationship
                        */

                        
                                    protected java.lang.String localBankRelationship ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBankRelationshipTracker = false ;

                           public boolean isBankRelationshipSpecified(){
                               return localBankRelationshipTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBankRelationship(){
                               return localBankRelationship;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BankRelationship
                               */
                               public void setBankRelationship(java.lang.String param){
                            localBankRelationshipTracker = param != null;
                                   
                                            this.localBankRelationship=param;
                                    

                               }
                            

                        /**
                        * field for CorrespondenceAddress
                        */

                        
                                    protected CorrespondenceAddress_type0 localCorrespondenceAddress ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCorrespondenceAddressTracker = false ;

                           public boolean isCorrespondenceAddressSpecified(){
                               return localCorrespondenceAddressTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return CorrespondenceAddress_type0
                           */
                           public  CorrespondenceAddress_type0 getCorrespondenceAddress(){
                               return localCorrespondenceAddress;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CorrespondenceAddress
                               */
                               public void setCorrespondenceAddress(CorrespondenceAddress_type0 param){
                            localCorrespondenceAddressTracker = param != null;
                                   
                                            this.localCorrespondenceAddress=param;
                                    

                               }
                            

                        /**
                        * field for CustSegment
                        */

                        
                                    protected java.lang.String localCustSegment ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustSegmentTracker = false ;

                           public boolean isCustSegmentSpecified(){
                               return localCustSegmentTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustSegment(){
                               return localCustSegment;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustSegment
                               */
                               public void setCustSegment(java.lang.String param){
                            localCustSegmentTracker = param != null;
                                   
                                            this.localCustSegment=param;
                                    

                               }
                            

                        /**
                        * field for DateOfAttainingMaj
                        */

                        
                                    protected java.lang.String localDateOfAttainingMaj ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDateOfAttainingMajTracker = false ;

                           public boolean isDateOfAttainingMajSpecified(){
                               return localDateOfAttainingMajTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDateOfAttainingMaj(){
                               return localDateOfAttainingMaj;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DateOfAttainingMaj
                               */
                               public void setDateOfAttainingMaj(java.lang.String param){
                            localDateOfAttainingMajTracker = param != null;
                                   
                                            this.localDateOfAttainingMaj=param;
                                    

                               }
                            

                        /**
                        * field for EidaNumber
                        */

                        
                                    protected java.lang.String localEidaNumber ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEidaNumberTracker = false ;

                           public boolean isEidaNumberSpecified(){
                               return localEidaNumberTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEidaNumber(){
                               return localEidaNumber;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EidaNumber
                               */
                               public void setEidaNumber(java.lang.String param){
                            localEidaNumberTracker = param != null;
                                   
                                            this.localEidaNumber=param;
                                    

                               }
                            

                        /**
                        * field for Email
                        */

                        
                                    protected java.lang.String localEmail ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmailTracker = false ;

                           public boolean isEmailSpecified(){
                               return localEmailTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEmail(){
                               return localEmail;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Email
                               */
                               public void setEmail(java.lang.String param){
                            localEmailTracker = param != null;
                                   
                                            this.localEmail=param;
                                    

                               }
                            

                        /**
                        * field for EmployerName
                        */

                        
                                    protected java.lang.String localEmployerName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmployerNameTracker = false ;

                           public boolean isEmployerNameSpecified(){
                               return localEmployerNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEmployerName(){
                               return localEmployerName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EmployerName
                               */
                               public void setEmployerName(java.lang.String param){
                            localEmployerNameTracker = param != null;
                                   
                                            this.localEmployerName=param;
                                    

                               }
                            

                        /**
                        * field for FullName
                        */

                        
                                    protected java.lang.String localFullName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFullNameTracker = false ;

                           public boolean isFullNameSpecified(){
                               return localFullNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFullName(){
                               return localFullName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FullName
                               */
                               public void setFullName(java.lang.String param){
                            localFullNameTracker = param != null;
                                   
                                            this.localFullName=param;
                                    

                               }
                            

                        /**
                        * field for Gender
                        */

                        
                                    protected java.lang.String localGender ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localGenderTracker = false ;

                           public boolean isGenderSpecified(){
                               return localGenderTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getGender(){
                               return localGender;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Gender
                               */
                               public void setGender(java.lang.String param){
                            localGenderTracker = param != null;
                                   
                                            this.localGender=param;
                                    

                               }
                            

                        /**
                        * field for MaritalStatus
                        */

                        
                                    protected java.lang.String localMaritalStatus ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMaritalStatusTracker = false ;

                           public boolean isMaritalStatusSpecified(){
                               return localMaritalStatusTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMaritalStatus(){
                               return localMaritalStatus;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MaritalStatus
                               */
                               public void setMaritalStatus(java.lang.String param){
                            localMaritalStatusTracker = param != null;
                                   
                                            this.localMaritalStatus=param;
                                    

                               }
                            

                        /**
                        * field for MaritalStatusOthers
                        */

                        
                                    protected java.lang.String localMaritalStatusOthers ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMaritalStatusOthersTracker = false ;

                           public boolean isMaritalStatusOthersSpecified(){
                               return localMaritalStatusOthersTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMaritalStatusOthers(){
                               return localMaritalStatusOthers;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MaritalStatusOthers
                               */
                               public void setMaritalStatusOthers(java.lang.String param){
                            localMaritalStatusOthersTracker = param != null;
                                   
                                            this.localMaritalStatusOthers=param;
                                    

                               }
                            

                        /**
                        * field for Mobile
                        */

                        
                                    protected java.lang.String localMobile ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMobileTracker = false ;

                           public boolean isMobileSpecified(){
                               return localMobileTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMobile(){
                               return localMobile;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Mobile
                               */
                               public void setMobile(java.lang.String param){
                            localMobileTracker = param != null;
                                   
                                            this.localMobile=param;
                                    

                               }
                            

                        /**
                        * field for MothersName
                        */

                        
                                    protected java.lang.String localMothersName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMothersNameTracker = false ;

                           public boolean isMothersNameSpecified(){
                               return localMothersNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMothersName(){
                               return localMothersName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MothersName
                               */
                               public void setMothersName(java.lang.String param){
                            localMothersNameTracker = param != null;
                                   
                                            this.localMothersName=param;
                                    

                               }
                            

                        /**
                        * field for Nationality
                        */

                        
                                    protected java.lang.String localNationality ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNationalityTracker = false ;

                           public boolean isNationalitySpecified(){
                               return localNationalityTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNationality(){
                               return localNationality;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Nationality
                               */
                               public void setNationality(java.lang.String param){
                            localNationalityTracker = param != null;
                                   
                                            this.localNationality=param;
                                    

                               }
                            

                        /**
                        * field for Passport
                        */

                        
                                    protected java.lang.String localPassport ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPassportTracker = false ;

                           public boolean isPassportSpecified(){
                               return localPassportTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPassport(){
                               return localPassport;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Passport
                               */
                               public void setPassport(java.lang.String param){
                            localPassportTracker = param != null;
                                   
                                            this.localPassport=param;
                                    

                               }
                            

                        /**
                        * field for PassportExpiryDate
                        */

                        
                                    protected java.lang.String localPassportExpiryDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPassportExpiryDateTracker = false ;

                           public boolean isPassportExpiryDateSpecified(){
                               return localPassportExpiryDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPassportExpiryDate(){
                               return localPassportExpiryDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PassportExpiryDate
                               */
                               public void setPassportExpiryDate(java.lang.String param){
                            localPassportExpiryDateTracker = param != null;
                                   
                                            this.localPassportExpiryDate=param;
                                    

                               }
                            

                        /**
                        * field for PassportIssueDate
                        */

                        
                                    protected java.lang.String localPassportIssueDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPassportIssueDateTracker = false ;

                           public boolean isPassportIssueDateSpecified(){
                               return localPassportIssueDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPassportIssueDate(){
                               return localPassportIssueDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PassportIssueDate
                               */
                               public void setPassportIssueDate(java.lang.String param){
                            localPassportIssueDateTracker = param != null;
                                   
                                            this.localPassportIssueDate=param;
                                    

                               }
                            

                        /**
                        * field for PassportType
                        */

                        
                                    protected java.lang.String localPassportType ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPassportTypeTracker = false ;

                           public boolean isPassportTypeSpecified(){
                               return localPassportTypeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPassportType(){
                               return localPassportType;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PassportType
                               */
                               public void setPassportType(java.lang.String param){
                            localPassportTypeTracker = param != null;
                                   
                                            this.localPassportType=param;
                                    

                               }
                            

                        /**
                        * field for PermanentAddress
                        */

                        
                                    protected PermanentAddress_type0 localPermanentAddress ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPermanentAddressTracker = false ;

                           public boolean isPermanentAddressSpecified(){
                               return localPermanentAddressTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return PermanentAddress_type0
                           */
                           public  PermanentAddress_type0 getPermanentAddress(){
                               return localPermanentAddress;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PermanentAddress
                               */
                               public void setPermanentAddress(PermanentAddress_type0 param){
                            localPermanentAddressTracker = param != null;
                                   
                                            this.localPermanentAddress=param;
                                    

                               }
                            

                        /**
                        * field for Phone
                        */

                        
                                    protected java.lang.String localPhone ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPhoneTracker = false ;

                           public boolean isPhoneSpecified(){
                               return localPhoneTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPhone(){
                               return localPhone;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Phone
                               */
                               public void setPhone(java.lang.String param){
                            localPhoneTracker = param != null;
                                   
                                            this.localPhone=param;
                                    

                               }
                            

                        /**
                        * field for Prefix
                        */

                        
                                    protected java.lang.String localPrefix ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPrefixTracker = false ;

                           public boolean isPrefixSpecified(){
                               return localPrefixTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPrefix(){
                               return localPrefix;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Prefix
                               */
                               public void setPrefix(java.lang.String param){
                            localPrefixTracker = param != null;
                                   
                                            this.localPrefix=param;
                                    

                               }
                            

                        /**
                        * field for PrefixOthers
                        */

                        
                                    protected java.lang.String localPrefixOthers ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPrefixOthersTracker = false ;

                           public boolean isPrefixOthersSpecified(){
                               return localPrefixOthersTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPrefixOthers(){
                               return localPrefixOthers;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PrefixOthers
                               */
                               public void setPrefixOthers(java.lang.String param){
                            localPrefixOthersTracker = param != null;
                                   
                                            this.localPrefixOthers=param;
                                    

                               }
                            

                        /**
                        * field for Profession
                        */

                        
                                    protected java.lang.String localProfession ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localProfessionTracker = false ;

                           public boolean isProfessionSpecified(){
                               return localProfessionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getProfession(){
                               return localProfession;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Profession
                               */
                               public void setProfession(java.lang.String param){
                            localProfessionTracker = param != null;
                                   
                                            this.localProfession=param;
                                    

                               }
                            

                        /**
                        * field for ProfessionCode
                        */

                        
                                    protected java.lang.String localProfessionCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localProfessionCodeTracker = false ;

                           public boolean isProfessionCodeSpecified(){
                               return localProfessionCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getProfessionCode(){
                               return localProfessionCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ProfessionCode
                               */
                               public void setProfessionCode(java.lang.String param){
                            localProfessionCodeTracker = param != null;
                                   
                                            this.localProfessionCode=param;
                                    

                               }
                            

                        /**
                        * field for Religion
                        */

                        
                                    protected java.lang.String localReligion ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localReligionTracker = false ;

                           public boolean isReligionSpecified(){
                               return localReligionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getReligion(){
                               return localReligion;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Religion
                               */
                               public void setReligion(java.lang.String param){
                            localReligionTracker = param != null;
                                   
                                            this.localReligion=param;
                                    

                               }
                            

                        /**
                        * field for ResidentialAddress
                        */

                        
                                    protected ResidentialAddress_type0 localResidentialAddress ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localResidentialAddressTracker = false ;

                           public boolean isResidentialAddressSpecified(){
                               return localResidentialAddressTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return ResidentialAddress_type0
                           */
                           public  ResidentialAddress_type0 getResidentialAddress(){
                               return localResidentialAddress;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ResidentialAddress
                               */
                               public void setResidentialAddress(ResidentialAddress_type0 param){
                            localResidentialAddressTracker = param != null;
                                   
                                            this.localResidentialAddress=param;
                                    

                               }
                            

                        /**
                        * field for ResidentWithoutEIDA
                        */

                        
                                    protected java.lang.String localResidentWithoutEIDA ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localResidentWithoutEIDATracker = false ;

                           public boolean isResidentWithoutEIDASpecified(){
                               return localResidentWithoutEIDATracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getResidentWithoutEIDA(){
                               return localResidentWithoutEIDA;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ResidentWithoutEIDA
                               */
                               public void setResidentWithoutEIDA(java.lang.String param){
                            localResidentWithoutEIDATracker = param != null;
                                   
                                            this.localResidentWithoutEIDA=param;
                                    

                               }
                            

                        /**
                        * field for ShortName
                        */

                        
                                    protected java.lang.String localShortName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localShortNameTracker = false ;

                           public boolean isShortNameSpecified(){
                               return localShortNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getShortName(){
                               return localShortName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ShortName
                               */
                               public void setShortName(java.lang.String param){
                            localShortNameTracker = param != null;
                                   
                                            this.localShortName=param;
                                    

                               }
                            

                        /**
                        * field for TelOffice
                        */

                        
                                    protected java.lang.String localTelOffice ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTelOfficeTracker = false ;

                           public boolean isTelOfficeSpecified(){
                               return localTelOfficeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTelOffice(){
                               return localTelOffice;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TelOffice
                               */
                               public void setTelOffice(java.lang.String param){
                            localTelOfficeTracker = param != null;
                                   
                                            this.localTelOffice=param;
                                    

                               }
                            

                        /**
                        * field for VisaExpiryDate
                        */

                        
                                    protected java.lang.String localVisaExpiryDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localVisaExpiryDateTracker = false ;

                           public boolean isVisaExpiryDateSpecified(){
                               return localVisaExpiryDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getVisaExpiryDate(){
                               return localVisaExpiryDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param VisaExpiryDate
                               */
                               public void setVisaExpiryDate(java.lang.String param){
                            localVisaExpiryDateTracker = param != null;
                                   
                                            this.localVisaExpiryDate=param;
                                    

                               }
                            

                        /**
                        * field for VisaIssueDate
                        */

                        
                                    protected java.lang.String localVisaIssueDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localVisaIssueDateTracker = false ;

                           public boolean isVisaIssueDateSpecified(){
                               return localVisaIssueDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getVisaIssueDate(){
                               return localVisaIssueDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param VisaIssueDate
                               */
                               public void setVisaIssueDate(java.lang.String param){
                            localVisaIssueDateTracker = param != null;
                                   
                                            this.localVisaIssueDate=param;
                                    

                               }
                            

                        /**
                        * field for VisaNo
                        */

                        
                                    protected java.lang.String localVisaNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localVisaNoTracker = false ;

                           public boolean isVisaNoSpecified(){
                               return localVisaNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getVisaNo(){
                               return localVisaNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param VisaNo
                               */
                               public void setVisaNo(java.lang.String param){
                            localVisaNoTracker = param != null;
                                   
                                            this.localVisaNo=param;
                                    

                               }
                            

                        /**
                        * field for VisaStatus
                        */

                        
                                    protected java.lang.String localVisaStatus ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localVisaStatusTracker = false ;

                           public boolean isVisaStatusSpecified(){
                               return localVisaStatusTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getVisaStatus(){
                               return localVisaStatus;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param VisaStatus
                               */
                               public void setVisaStatus(java.lang.String param){
                            localVisaStatusTracker = param != null;
                                   
                                            this.localVisaStatus=param;
                                    

                               }
                            

                        /**
                        * field for CID
                        */

                        
                                    protected java.lang.String localCID ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCIDTracker = false ;

                           public boolean isCIDSpecified(){
                               return localCIDTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCID(){
                               return localCID;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CID
                               */
                               public void setCID(java.lang.String param){
                            localCIDTracker = param != null;
                                   
                                            this.localCID=param;
                                    

                               }
                            

                        /**
                        * field for DOB
                        */

                        
                                    protected java.lang.String localDOB ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDOBTracker = false ;

                           public boolean isDOBSpecified(){
                               return localDOBTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDOB(){
                               return localDOB;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DOB
                               */
                               public void setDOB(java.lang.String param){
                            localDOBTracker = param != null;
                                   
                                            this.localDOB=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":cutomerPersonalInformation_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "cutomerPersonalInformation_type0",
                           xmlWriter);
                   }

               
                   }
                if (localAccountRelationShipTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "accountRelationShip", xmlWriter);
                             

                                          if (localAccountRelationShip==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("accountRelationShip cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAccountRelationShip);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBankRelationshipTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "bankRelationship", xmlWriter);
                             

                                          if (localBankRelationship==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("bankRelationship cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBankRelationship);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCorrespondenceAddressTracker){
                                            if (localCorrespondenceAddress==null){
                                                 throw new org.apache.axis2.databinding.ADBException("correspondenceAddress cannot be null!!");
                                            }
                                           localCorrespondenceAddress.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","correspondenceAddress"),
                                               xmlWriter);
                                        } if (localCustSegmentTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custSegment", xmlWriter);
                             

                                          if (localCustSegment==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custSegment cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustSegment);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDateOfAttainingMajTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "dateOfAttainingMaj", xmlWriter);
                             

                                          if (localDateOfAttainingMaj==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("dateOfAttainingMaj cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDateOfAttainingMaj);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEidaNumberTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "eidaNumber", xmlWriter);
                             

                                          if (localEidaNumber==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("eidaNumber cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEidaNumber);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEmailTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "email", xmlWriter);
                             

                                          if (localEmail==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("email cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEmail);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEmployerNameTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "employerName", xmlWriter);
                             

                                          if (localEmployerName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("employerName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEmployerName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFullNameTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "fullName", xmlWriter);
                             

                                          if (localFullName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("fullName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFullName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localGenderTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "gender", xmlWriter);
                             

                                          if (localGender==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("gender cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localGender);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMaritalStatusTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "maritalStatus", xmlWriter);
                             

                                          if (localMaritalStatus==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("maritalStatus cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMaritalStatus);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMaritalStatusOthersTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "maritalStatusOthers", xmlWriter);
                             

                                          if (localMaritalStatusOthers==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("maritalStatusOthers cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMaritalStatusOthers);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMobileTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "mobile", xmlWriter);
                             

                                          if (localMobile==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("mobile cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMobile);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMothersNameTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "mothersName", xmlWriter);
                             

                                          if (localMothersName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("mothersName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMothersName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNationalityTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "nationality", xmlWriter);
                             

                                          if (localNationality==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("nationality cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNationality);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPassportTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "passport", xmlWriter);
                             

                                          if (localPassport==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("passport cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPassport);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPassportExpiryDateTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "passportExpiryDate", xmlWriter);
                             

                                          if (localPassportExpiryDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("passportExpiryDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPassportExpiryDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPassportIssueDateTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "passportIssueDate", xmlWriter);
                             

                                          if (localPassportIssueDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("passportIssueDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPassportIssueDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPassportTypeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "passportType", xmlWriter);
                             

                                          if (localPassportType==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("passportType cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPassportType);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPermanentAddressTracker){
                                            if (localPermanentAddress==null){
                                                 throw new org.apache.axis2.databinding.ADBException("permanentAddress cannot be null!!");
                                            }
                                           localPermanentAddress.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","permanentAddress"),
                                               xmlWriter);
                                        } if (localPhoneTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "phone", xmlWriter);
                             

                                          if (localPhone==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("phone cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPhone);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPrefixTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "prefix", xmlWriter);
                             

                                          if (localPrefix==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("prefix cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPrefix);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPrefixOthersTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "prefixOthers", xmlWriter);
                             

                                          if (localPrefixOthers==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("prefixOthers cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPrefixOthers);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localProfessionTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "profession", xmlWriter);
                             

                                          if (localProfession==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("profession cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localProfession);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localProfessionCodeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "professionCode", xmlWriter);
                             

                                          if (localProfessionCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("professionCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localProfessionCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localReligionTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "religion", xmlWriter);
                             

                                          if (localReligion==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("religion cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localReligion);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localResidentialAddressTracker){
                                            if (localResidentialAddress==null){
                                                 throw new org.apache.axis2.databinding.ADBException("residentialAddress cannot be null!!");
                                            }
                                           localResidentialAddress.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","residentialAddress"),
                                               xmlWriter);
                                        } if (localResidentWithoutEIDATracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "residentWithoutEIDA", xmlWriter);
                             

                                          if (localResidentWithoutEIDA==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("residentWithoutEIDA cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localResidentWithoutEIDA);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localShortNameTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "shortName", xmlWriter);
                             

                                          if (localShortName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("shortName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localShortName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTelOfficeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "telOffice", xmlWriter);
                             

                                          if (localTelOffice==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("telOffice cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTelOffice);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localVisaExpiryDateTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "visaExpiryDate", xmlWriter);
                             

                                          if (localVisaExpiryDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("visaExpiryDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localVisaExpiryDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localVisaIssueDateTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "visaIssueDate", xmlWriter);
                             

                                          if (localVisaIssueDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("visaIssueDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localVisaIssueDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localVisaNoTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "visaNo", xmlWriter);
                             

                                          if (localVisaNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("visaNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localVisaNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localVisaStatusTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "visaStatus", xmlWriter);
                             

                                          if (localVisaStatus==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("visaStatus cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localVisaStatus);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCIDTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "cID", xmlWriter);
                             

                                          if (localCID==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("cID cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCID);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDOBTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "dOB", xmlWriter);
                             

                                          if (localDOB==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("dOB cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDOB);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localAccountRelationShipTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "accountRelationShip"));
                                 
                                        if (localAccountRelationShip != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAccountRelationShip));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("accountRelationShip cannot be null!!");
                                        }
                                    } if (localBankRelationshipTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "bankRelationship"));
                                 
                                        if (localBankRelationship != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBankRelationship));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("bankRelationship cannot be null!!");
                                        }
                                    } if (localCorrespondenceAddressTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "correspondenceAddress"));
                            
                            
                                    if (localCorrespondenceAddress==null){
                                         throw new org.apache.axis2.databinding.ADBException("correspondenceAddress cannot be null!!");
                                    }
                                    elementList.add(localCorrespondenceAddress);
                                } if (localCustSegmentTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custSegment"));
                                 
                                        if (localCustSegment != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustSegment));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custSegment cannot be null!!");
                                        }
                                    } if (localDateOfAttainingMajTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "dateOfAttainingMaj"));
                                 
                                        if (localDateOfAttainingMaj != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDateOfAttainingMaj));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("dateOfAttainingMaj cannot be null!!");
                                        }
                                    } if (localEidaNumberTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "eidaNumber"));
                                 
                                        if (localEidaNumber != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEidaNumber));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("eidaNumber cannot be null!!");
                                        }
                                    } if (localEmailTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "email"));
                                 
                                        if (localEmail != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmail));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("email cannot be null!!");
                                        }
                                    } if (localEmployerNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "employerName"));
                                 
                                        if (localEmployerName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmployerName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("employerName cannot be null!!");
                                        }
                                    } if (localFullNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "fullName"));
                                 
                                        if (localFullName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFullName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("fullName cannot be null!!");
                                        }
                                    } if (localGenderTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "gender"));
                                 
                                        if (localGender != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localGender));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("gender cannot be null!!");
                                        }
                                    } if (localMaritalStatusTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "maritalStatus"));
                                 
                                        if (localMaritalStatus != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMaritalStatus));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("maritalStatus cannot be null!!");
                                        }
                                    } if (localMaritalStatusOthersTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "maritalStatusOthers"));
                                 
                                        if (localMaritalStatusOthers != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMaritalStatusOthers));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("maritalStatusOthers cannot be null!!");
                                        }
                                    } if (localMobileTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "mobile"));
                                 
                                        if (localMobile != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMobile));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("mobile cannot be null!!");
                                        }
                                    } if (localMothersNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "mothersName"));
                                 
                                        if (localMothersName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMothersName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("mothersName cannot be null!!");
                                        }
                                    } if (localNationalityTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "nationality"));
                                 
                                        if (localNationality != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNationality));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("nationality cannot be null!!");
                                        }
                                    } if (localPassportTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "passport"));
                                 
                                        if (localPassport != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPassport));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("passport cannot be null!!");
                                        }
                                    } if (localPassportExpiryDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "passportExpiryDate"));
                                 
                                        if (localPassportExpiryDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPassportExpiryDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("passportExpiryDate cannot be null!!");
                                        }
                                    } if (localPassportIssueDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "passportIssueDate"));
                                 
                                        if (localPassportIssueDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPassportIssueDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("passportIssueDate cannot be null!!");
                                        }
                                    } if (localPassportTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "passportType"));
                                 
                                        if (localPassportType != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPassportType));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("passportType cannot be null!!");
                                        }
                                    } if (localPermanentAddressTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "permanentAddress"));
                            
                            
                                    if (localPermanentAddress==null){
                                         throw new org.apache.axis2.databinding.ADBException("permanentAddress cannot be null!!");
                                    }
                                    elementList.add(localPermanentAddress);
                                } if (localPhoneTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "phone"));
                                 
                                        if (localPhone != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPhone));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("phone cannot be null!!");
                                        }
                                    } if (localPrefixTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "prefix"));
                                 
                                        if (localPrefix != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPrefix));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("prefix cannot be null!!");
                                        }
                                    } if (localPrefixOthersTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "prefixOthers"));
                                 
                                        if (localPrefixOthers != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPrefixOthers));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("prefixOthers cannot be null!!");
                                        }
                                    } if (localProfessionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "profession"));
                                 
                                        if (localProfession != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localProfession));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("profession cannot be null!!");
                                        }
                                    } if (localProfessionCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "professionCode"));
                                 
                                        if (localProfessionCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localProfessionCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("professionCode cannot be null!!");
                                        }
                                    } if (localReligionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "religion"));
                                 
                                        if (localReligion != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReligion));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("religion cannot be null!!");
                                        }
                                    } if (localResidentialAddressTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "residentialAddress"));
                            
                            
                                    if (localResidentialAddress==null){
                                         throw new org.apache.axis2.databinding.ADBException("residentialAddress cannot be null!!");
                                    }
                                    elementList.add(localResidentialAddress);
                                } if (localResidentWithoutEIDATracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "residentWithoutEIDA"));
                                 
                                        if (localResidentWithoutEIDA != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localResidentWithoutEIDA));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("residentWithoutEIDA cannot be null!!");
                                        }
                                    } if (localShortNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "shortName"));
                                 
                                        if (localShortName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localShortName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("shortName cannot be null!!");
                                        }
                                    } if (localTelOfficeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "telOffice"));
                                 
                                        if (localTelOffice != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTelOffice));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("telOffice cannot be null!!");
                                        }
                                    } if (localVisaExpiryDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "visaExpiryDate"));
                                 
                                        if (localVisaExpiryDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localVisaExpiryDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("visaExpiryDate cannot be null!!");
                                        }
                                    } if (localVisaIssueDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "visaIssueDate"));
                                 
                                        if (localVisaIssueDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localVisaIssueDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("visaIssueDate cannot be null!!");
                                        }
                                    } if (localVisaNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "visaNo"));
                                 
                                        if (localVisaNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localVisaNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("visaNo cannot be null!!");
                                        }
                                    } if (localVisaStatusTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "visaStatus"));
                                 
                                        if (localVisaStatus != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localVisaStatus));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("visaStatus cannot be null!!");
                                        }
                                    } if (localCIDTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "cID"));
                                 
                                        if (localCID != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCID));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("cID cannot be null!!");
                                        }
                                    } if (localDOBTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "dOB"));
                                 
                                        if (localDOB != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDOB));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("dOB cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static CutomerPersonalInformation_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            CutomerPersonalInformation_type0 object =
                new CutomerPersonalInformation_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"cutomerPersonalInformation_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (CutomerPersonalInformation_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","accountRelationShip").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"accountRelationShip" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAccountRelationShip(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","bankRelationship").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"bankRelationship" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBankRelationship(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","correspondenceAddress").equals(reader.getName())){
                                
                                                object.setCorrespondenceAddress(CorrespondenceAddress_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custSegment").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custSegment" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustSegment(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","dateOfAttainingMaj").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"dateOfAttainingMaj" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDateOfAttainingMaj(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","eidaNumber").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"eidaNumber" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEidaNumber(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","email").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"email" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEmail(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","employerName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"employerName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEmployerName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","fullName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"fullName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFullName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","gender").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"gender" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setGender(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","maritalStatus").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"maritalStatus" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMaritalStatus(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","maritalStatusOthers").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"maritalStatusOthers" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMaritalStatusOthers(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","mobile").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"mobile" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMobile(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","mothersName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"mothersName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMothersName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","nationality").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"nationality" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNationality(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","passport").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"passport" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPassport(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","passportExpiryDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"passportExpiryDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPassportExpiryDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","passportIssueDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"passportIssueDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPassportIssueDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","passportType").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"passportType" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPassportType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","permanentAddress").equals(reader.getName())){
                                
                                                object.setPermanentAddress(PermanentAddress_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","phone").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"phone" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPhone(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","prefix").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"prefix" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPrefix(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","prefixOthers").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"prefixOthers" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPrefixOthers(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","profession").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"profession" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setProfession(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","professionCode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"professionCode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setProfessionCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","religion").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"religion" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReligion(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","residentialAddress").equals(reader.getName())){
                                
                                                object.setResidentialAddress(ResidentialAddress_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","residentWithoutEIDA").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"residentWithoutEIDA" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setResidentWithoutEIDA(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","shortName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"shortName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setShortName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","telOffice").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"telOffice" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTelOffice(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","visaExpiryDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"visaExpiryDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setVisaExpiryDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","visaIssueDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"visaIssueDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setVisaIssueDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","visaNo").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"visaNo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setVisaNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","visaStatus").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"visaStatus" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setVisaStatus(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","cID").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"cID" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCID(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","dOB").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"dOB" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDOB(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class InternalDetails_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = internalDetails_type0
                Namespace URI = http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for Benefits
                        */

                        
                                    protected java.lang.String localBenefits ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBenefitsTracker = false ;

                           public boolean isBenefitsSpecified(){
                               return localBenefitsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBenefits(){
                               return localBenefits;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Benefits
                               */
                               public void setBenefits(java.lang.String param){
                            localBenefitsTracker = param != null;
                                   
                                            this.localBenefits=param;
                                    

                               }
                            

                        /**
                        * field for Centres
                        */

                        
                                    protected java.lang.String localCentres ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCentresTracker = false ;

                           public boolean isCentresSpecified(){
                               return localCentresTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCentres(){
                               return localCentres;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Centres
                               */
                               public void setCentres(java.lang.String param){
                            localCentresTracker = param != null;
                                   
                                            this.localCentres=param;
                                    

                               }
                            

                        /**
                        * field for MemberShipWith
                        */

                        
                                    protected java.lang.String localMemberShipWith ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMemberShipWithTracker = false ;

                           public boolean isMemberShipWithSpecified(){
                               return localMemberShipWithTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMemberShipWith(){
                               return localMemberShipWith;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MemberShipWith
                               */
                               public void setMemberShipWith(java.lang.String param){
                            localMemberShipWithTracker = param != null;
                                   
                                            this.localMemberShipWith=param;
                                    

                               }
                            

                        /**
                        * field for Others
                        */

                        
                                    protected java.lang.String localOthers ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOthersTracker = false ;

                           public boolean isOthersSpecified(){
                               return localOthersTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOthers(){
                               return localOthers;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Others
                               */
                               public void setOthers(java.lang.String param){
                            localOthersTracker = param != null;
                                   
                                            this.localOthers=param;
                                    

                               }
                            

                        /**
                        * field for ProfitCentreCode
                        */

                        
                                    protected java.lang.String localProfitCentreCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localProfitCentreCodeTracker = false ;

                           public boolean isProfitCentreCodeSpecified(){
                               return localProfitCentreCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getProfitCentreCode(){
                               return localProfitCentreCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ProfitCentreCode
                               */
                               public void setProfitCentreCode(java.lang.String param){
                            localProfitCentreCodeTracker = param != null;
                                   
                                            this.localProfitCentreCode=param;
                                    

                               }
                            

                        /**
                        * field for PromoCode
                        */

                        
                                    protected java.lang.String localPromoCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPromoCodeTracker = false ;

                           public boolean isPromoCodeSpecified(){
                               return localPromoCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPromoCode(){
                               return localPromoCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PromoCode
                               */
                               public void setPromoCode(java.lang.String param){
                            localPromoCodeTracker = param != null;
                                   
                                            this.localPromoCode=param;
                                    

                               }
                            

                        /**
                        * field for ReferredByCust
                        */

                        
                                    protected java.lang.String localReferredByCust ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localReferredByCustTracker = false ;

                           public boolean isReferredByCustSpecified(){
                               return localReferredByCustTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getReferredByCust(){
                               return localReferredByCust;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ReferredByCust
                               */
                               public void setReferredByCust(java.lang.String param){
                            localReferredByCustTracker = param != null;
                                   
                                            this.localReferredByCust=param;
                                    

                               }
                            

                        /**
                        * field for RefferedByStaff
                        */

                        
                                    protected java.lang.String localRefferedByStaff ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRefferedByStaffTracker = false ;

                           public boolean isRefferedByStaffSpecified(){
                               return localRefferedByStaffTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRefferedByStaff(){
                               return localRefferedByStaff;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RefferedByStaff
                               */
                               public void setRefferedByStaff(java.lang.String param){
                            localRefferedByStaffTracker = param != null;
                                   
                                            this.localRefferedByStaff=param;
                                    

                               }
                            

                        /**
                        * field for RmCode
                        */

                        
                                    protected java.lang.String localRmCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRmCodeTracker = false ;

                           public boolean isRmCodeSpecified(){
                               return localRmCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRmCode(){
                               return localRmCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RmCode
                               */
                               public void setRmCode(java.lang.String param){
                            localRmCodeTracker = param != null;
                                   
                                            this.localRmCode=param;
                                    

                               }
                            

                        /**
                        * field for RmName
                        */

                        
                                    protected java.lang.String localRmName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRmNameTracker = false ;

                           public boolean isRmNameSpecified(){
                               return localRmNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRmName(){
                               return localRmName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RmName
                               */
                               public void setRmName(java.lang.String param){
                            localRmNameTracker = param != null;
                                   
                                            this.localRmName=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":internalDetails_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "internalDetails_type0",
                           xmlWriter);
                   }

               
                   }
                if (localBenefitsTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "benefits", xmlWriter);
                             

                                          if (localBenefits==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("benefits cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBenefits);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCentresTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "centres", xmlWriter);
                             

                                          if (localCentres==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("centres cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCentres);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMemberShipWithTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "memberShipWith", xmlWriter);
                             

                                          if (localMemberShipWith==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("memberShipWith cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMemberShipWith);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOthersTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "others", xmlWriter);
                             

                                          if (localOthers==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("others cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOthers);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localProfitCentreCodeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "profitCentreCode", xmlWriter);
                             

                                          if (localProfitCentreCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("profitCentreCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localProfitCentreCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPromoCodeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "promoCode", xmlWriter);
                             

                                          if (localPromoCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("promoCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPromoCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localReferredByCustTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "referredByCust", xmlWriter);
                             

                                          if (localReferredByCust==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("referredByCust cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localReferredByCust);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRefferedByStaffTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "refferedByStaff", xmlWriter);
                             

                                          if (localRefferedByStaff==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("refferedByStaff cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRefferedByStaff);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRmCodeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "rmCode", xmlWriter);
                             

                                          if (localRmCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("rmCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRmCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRmNameTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "rmName", xmlWriter);
                             

                                          if (localRmName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("rmName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRmName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localBenefitsTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "benefits"));
                                 
                                        if (localBenefits != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBenefits));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("benefits cannot be null!!");
                                        }
                                    } if (localCentresTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "centres"));
                                 
                                        if (localCentres != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCentres));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("centres cannot be null!!");
                                        }
                                    } if (localMemberShipWithTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "memberShipWith"));
                                 
                                        if (localMemberShipWith != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMemberShipWith));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("memberShipWith cannot be null!!");
                                        }
                                    } if (localOthersTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "others"));
                                 
                                        if (localOthers != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOthers));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("others cannot be null!!");
                                        }
                                    } if (localProfitCentreCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "profitCentreCode"));
                                 
                                        if (localProfitCentreCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localProfitCentreCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("profitCentreCode cannot be null!!");
                                        }
                                    } if (localPromoCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "promoCode"));
                                 
                                        if (localPromoCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPromoCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("promoCode cannot be null!!");
                                        }
                                    } if (localReferredByCustTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "referredByCust"));
                                 
                                        if (localReferredByCust != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReferredByCust));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("referredByCust cannot be null!!");
                                        }
                                    } if (localRefferedByStaffTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "refferedByStaff"));
                                 
                                        if (localRefferedByStaff != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRefferedByStaff));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("refferedByStaff cannot be null!!");
                                        }
                                    } if (localRmCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "rmCode"));
                                 
                                        if (localRmCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRmCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("rmCode cannot be null!!");
                                        }
                                    } if (localRmNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "rmName"));
                                 
                                        if (localRmName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRmName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("rmName cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static InternalDetails_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            InternalDetails_type0 object =
                new InternalDetails_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"internalDetails_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (InternalDetails_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","benefits").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"benefits" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBenefits(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","centres").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"centres" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCentres(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","memberShipWith").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"memberShipWith" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMemberShipWith(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","others").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"others" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOthers(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","profitCentreCode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"profitCentreCode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setProfitCentreCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","promoCode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"promoCode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPromoCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","referredByCust").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"referredByCust" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReferredByCust(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","refferedByStaff").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"refferedByStaff" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRefferedByStaff(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","rmCode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"rmCode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRmCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","rmName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"rmName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRmName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class ProductData_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = productData_type0
                Namespace URI = http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for Products
                        * This was an Array!
                        */

                        
                                    protected Products_type0[] localProducts ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localProductsTracker = false ;

                           public boolean isProductsSpecified(){
                               return localProductsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Products_type0[]
                           */
                           public  Products_type0[] getProducts(){
                               return localProducts;
                           }

                           
                        


                               
                              /**
                               * validate the array for Products
                               */
                              protected void validateProducts(Products_type0[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param Products
                              */
                              public void setProducts(Products_type0[] param){
                              
                                   validateProducts(param);

                               localProductsTracker = param != null;
                                      
                                      this.localProducts=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param Products_type0
                             */
                             public void addProducts(Products_type0 param){
                                   if (localProducts == null){
                                   localProducts = new Products_type0[]{};
                                   }

                            
                                 //update the setting tracker
                                localProductsTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localProducts);
                               list.add(param);
                               this.localProducts =
                             (Products_type0[])list.toArray(
                            new Products_type0[list.size()]);

                             }
                             

                        /**
                        * field for AccountDetails
                        */

                        
                                    protected AccountDetails_type1 localAccountDetails ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAccountDetailsTracker = false ;

                           public boolean isAccountDetailsSpecified(){
                               return localAccountDetailsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return AccountDetails_type1
                           */
                           public  AccountDetails_type1 getAccountDetails(){
                               return localAccountDetails;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AccountDetails
                               */
                               public void setAccountDetails(AccountDetails_type1 param){
                            localAccountDetailsTracker = param != null;
                                   
                                            this.localAccountDetails=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":productData_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "productData_type0",
                           xmlWriter);
                   }

               
                   }
                if (localProductsTracker){
                                       if (localProducts!=null){
                                            for (int i = 0;i < localProducts.length;i++){
                                                if (localProducts[i] != null){
                                                 localProducts[i].serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","products"),
                                                           xmlWriter);
                                                } else {
                                                   
                                                        // we don't have to do any thing since minOccures is zero
                                                    
                                                }

                                            }
                                     } else {
                                        
                                               throw new org.apache.axis2.databinding.ADBException("products cannot be null!!");
                                        
                                    }
                                 } if (localAccountDetailsTracker){
                                            if (localAccountDetails==null){
                                                 throw new org.apache.axis2.databinding.ADBException("accountDetails cannot be null!!");
                                            }
                                           localAccountDetails.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","accountDetails"),
                                               xmlWriter);
                                        }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localProductsTracker){
                             if (localProducts!=null) {
                                 for (int i = 0;i < localProducts.length;i++){

                                    if (localProducts[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                          "products"));
                                         elementList.add(localProducts[i]);
                                    } else {
                                        
                                                // nothing to do
                                            
                                    }

                                 }
                             } else {
                                 
                                        throw new org.apache.axis2.databinding.ADBException("products cannot be null!!");
                                    
                             }

                        } if (localAccountDetailsTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "accountDetails"));
                            
                            
                                    if (localAccountDetails==null){
                                         throw new org.apache.axis2.databinding.ADBException("accountDetails cannot be null!!");
                                    }
                                    elementList.add(localAccountDetails);
                                }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static ProductData_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            ProductData_type0 object =
                new ProductData_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"productData_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (ProductData_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                        java.util.ArrayList list1 = new java.util.ArrayList();
                    
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","products").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    list1.add(Products_type0.Factory.parse(reader));
                                                                
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone1 = false;
                                                        while(!loopDone1){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone1 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","products").equals(reader.getName())){
                                                                    list1.add(Products_type0.Factory.parse(reader));
                                                                        
                                                                }else{
                                                                    loopDone1 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array
                                                        
                                                        object.setProducts((Products_type0[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                Products_type0.class,
                                                                list1));
                                                            
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","accountDetails").equals(reader.getName())){
                                
                                                object.setAccountDetails(AccountDetails_type1.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class AddOnlineAppDataRes_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = AddOnlineAppDataRes_type0
                Namespace URI = http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for Description
                        */

                        
                                    protected java.lang.String localDescription ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDescriptionTracker = false ;

                           public boolean isDescriptionSpecified(){
                               return localDescriptionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDescription(){
                               return localDescription;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Description
                               */
                               public void setDescription(java.lang.String param){
                            localDescriptionTracker = param != null;
                                   
                                            this.localDescription=param;
                                    

                               }
                            

                        /**
                        * field for ErrorCode
                        */

                        
                                    protected java.lang.String localErrorCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localErrorCodeTracker = false ;

                           public boolean isErrorCodeSpecified(){
                               return localErrorCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getErrorCode(){
                               return localErrorCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ErrorCode
                               */
                               public void setErrorCode(java.lang.String param){
                            localErrorCodeTracker = param != null;
                                   
                                            this.localErrorCode=param;
                                    

                               }
                            

                        /**
                        * field for Message
                        */

                        
                                    protected java.lang.String localMessage ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMessageTracker = false ;

                           public boolean isMessageSpecified(){
                               return localMessageTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMessage(){
                               return localMessage;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Message
                               */
                               public void setMessage(java.lang.String param){
                            localMessageTracker = param != null;
                                   
                                            this.localMessage=param;
                                    

                               }
                            

                        /**
                        * field for RespHeader
                        */

                        
                                    protected java.lang.String localRespHeader ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRespHeaderTracker = false ;

                           public boolean isRespHeaderSpecified(){
                               return localRespHeaderTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRespHeader(){
                               return localRespHeader;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RespHeader
                               */
                               public void setRespHeader(java.lang.String param){
                            localRespHeaderTracker = param != null;
                                   
                                            this.localRespHeader=param;
                                    

                               }
                            

                        /**
                        * field for Status
                        */

                        
                                    protected java.lang.String localStatus ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localStatusTracker = false ;

                           public boolean isStatusSpecified(){
                               return localStatusTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getStatus(){
                               return localStatus;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Status
                               */
                               public void setStatus(java.lang.String param){
                            localStatusTracker = param != null;
                                   
                                            this.localStatus=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":AddOnlineAppDataRes_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "AddOnlineAppDataRes_type0",
                           xmlWriter);
                   }

               
                   }
                if (localDescriptionTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "description", xmlWriter);
                             

                                          if (localDescription==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("description cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDescription);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localErrorCodeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "errorCode", xmlWriter);
                             

                                          if (localErrorCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("errorCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localErrorCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMessageTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "message", xmlWriter);
                             

                                          if (localMessage==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("message cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMessage);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRespHeaderTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "respHeader", xmlWriter);
                             

                                          if (localRespHeader==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("respHeader cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRespHeader);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localStatusTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "status", xmlWriter);
                             

                                          if (localStatus==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("status cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localStatus);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localDescriptionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "description"));
                                 
                                        if (localDescription != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDescription));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("description cannot be null!!");
                                        }
                                    } if (localErrorCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "errorCode"));
                                 
                                        if (localErrorCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localErrorCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("errorCode cannot be null!!");
                                        }
                                    } if (localMessageTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "message"));
                                 
                                        if (localMessage != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMessage));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("message cannot be null!!");
                                        }
                                    } if (localRespHeaderTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "respHeader"));
                                 
                                        if (localRespHeader != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRespHeader));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("respHeader cannot be null!!");
                                        }
                                    } if (localStatusTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "status"));
                                 
                                        if (localStatus != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localStatus));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("status cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static AddOnlineAppDataRes_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            AddOnlineAppDataRes_type0 object =
                new AddOnlineAppDataRes_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"AddOnlineAppDataRes_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (AddOnlineAppDataRes_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","description").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"description" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDescription(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","errorCode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"errorCode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setErrorCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","message").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"message" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMessage(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","respHeader").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"respHeader" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRespHeader(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","status").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"status" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setStatus(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class LAPSAppDetails_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = LAPSAppDetails_type0
                Namespace URI = http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for ApplicationNo
                        */

                        
                                    protected java.lang.String localApplicationNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localApplicationNoTracker = false ;

                           public boolean isApplicationNoSpecified(){
                               return localApplicationNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getApplicationNo(){
                               return localApplicationNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ApplicationNo
                               */
                               public void setApplicationNo(java.lang.String param){
                            localApplicationNoTracker = param != null;
                                   
                                            this.localApplicationNo=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":LAPSAppDetails_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "LAPSAppDetails_type0",
                           xmlWriter);
                   }

               
                   }
                if (localApplicationNoTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "applicationNo", xmlWriter);
                             

                                          if (localApplicationNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("applicationNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localApplicationNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localApplicationNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "applicationNo"));
                                 
                                        if (localApplicationNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localApplicationNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("applicationNo cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static LAPSAppDetails_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            LAPSAppDetails_type0 object =
                new LAPSAppDetails_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"LAPSAppDetails_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (LAPSAppDetails_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","applicationNo").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"applicationNo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setApplicationNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class LAPSAppDetails_type1
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = LAPSAppDetails_type1
                Namespace URI = http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for ChannelId
                        */

                        
                                    protected java.lang.String localChannelId ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localChannelIdTracker = false ;

                           public boolean isChannelIdSpecified(){
                               return localChannelIdTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getChannelId(){
                               return localChannelId;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ChannelId
                               */
                               public void setChannelId(java.lang.String param){
                            localChannelIdTracker = param != null;
                                   
                                            this.localChannelId=param;
                                    

                               }
                            

                        /**
                        * field for CollectOrDeliver
                        */

                        
                                    protected java.lang.String localCollectOrDeliver ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCollectOrDeliverTracker = false ;

                           public boolean isCollectOrDeliverSpecified(){
                               return localCollectOrDeliverTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCollectOrDeliver(){
                               return localCollectOrDeliver;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CollectOrDeliver
                               */
                               public void setCollectOrDeliver(java.lang.String param){
                            localCollectOrDeliverTracker = param != null;
                                   
                                            this.localCollectOrDeliver=param;
                                    

                               }
                            

                        /**
                        * field for CustVisa
                        */

                        
                                    protected java.lang.String localCustVisa ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustVisaTracker = false ;

                           public boolean isCustVisaSpecified(){
                               return localCustVisaTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustVisa(){
                               return localCustVisa;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustVisa
                               */
                               public void setCustVisa(java.lang.String param){
                            localCustVisaTracker = param != null;
                                   
                                            this.localCustVisa=param;
                                    

                               }
                            

                        /**
                        * field for CustPassportExpiry
                        */

                        
                                    protected java.lang.String localCustPassportExpiry ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustPassportExpiryTracker = false ;

                           public boolean isCustPassportExpirySpecified(){
                               return localCustPassportExpiryTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustPassportExpiry(){
                               return localCustPassportExpiry;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustPassportExpiry
                               */
                               public void setCustPassportExpiry(java.lang.String param){
                            localCustPassportExpiryTracker = param != null;
                                   
                                            this.localCustPassportExpiry=param;
                                    

                               }
                            

                        /**
                        * field for CustDependent
                        */

                        
                                    protected java.lang.String localCustDependent ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustDependentTracker = false ;

                           public boolean isCustDependentSpecified(){
                               return localCustDependentTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustDependent(){
                               return localCustDependent;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustDependent
                               */
                               public void setCustDependent(java.lang.String param){
                            localCustDependentTracker = param != null;
                                   
                                            this.localCustDependent=param;
                                    

                               }
                            

                        /**
                        * field for EmpSeqcode
                        */

                        
                                    protected java.lang.String localEmpSeqcode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmpSeqcodeTracker = false ;

                           public boolean isEmpSeqcodeSpecified(){
                               return localEmpSeqcodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEmpSeqcode(){
                               return localEmpSeqcode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EmpSeqcode
                               */
                               public void setEmpSeqcode(java.lang.String param){
                            localEmpSeqcodeTracker = param != null;
                                   
                                            this.localEmpSeqcode=param;
                                    

                               }
                            

                        /**
                        * field for CustMailaddrFlag
                        */

                        
                                    protected java.lang.String localCustMailaddrFlag ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustMailaddrFlagTracker = false ;

                           public boolean isCustMailaddrFlagSpecified(){
                               return localCustMailaddrFlagTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustMailaddrFlag(){
                               return localCustMailaddrFlag;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustMailaddrFlag
                               */
                               public void setCustMailaddrFlag(java.lang.String param){
                            localCustMailaddrFlagTracker = param != null;
                                   
                                            this.localCustMailaddrFlag=param;
                                    

                               }
                            

                        /**
                        * field for LodgementRefno
                        */

                        
                                    protected java.lang.String localLodgementRefno ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLodgementRefnoTracker = false ;

                           public boolean isLodgementRefnoSpecified(){
                               return localLodgementRefnoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLodgementRefno(){
                               return localLodgementRefno;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LodgementRefno
                               */
                               public void setLodgementRefno(java.lang.String param){
                            localLodgementRefnoTracker = param != null;
                                   
                                            this.localLodgementRefno=param;
                                    

                               }
                            

                        /**
                        * field for CcPreApprovedFlag
                        */

                        
                                    protected java.lang.String localCcPreApprovedFlag ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCcPreApprovedFlagTracker = false ;

                           public boolean isCcPreApprovedFlagSpecified(){
                               return localCcPreApprovedFlagTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCcPreApprovedFlag(){
                               return localCcPreApprovedFlag;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CcPreApprovedFlag
                               */
                               public void setCcPreApprovedFlag(java.lang.String param){
                            localCcPreApprovedFlagTracker = param != null;
                                   
                                            this.localCcPreApprovedFlag=param;
                                    

                               }
                            

                        /**
                        * field for CustExistingFlag
                        */

                        
                                    protected java.lang.String localCustExistingFlag ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustExistingFlagTracker = false ;

                           public boolean isCustExistingFlagSpecified(){
                               return localCustExistingFlagTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustExistingFlag(){
                               return localCustExistingFlag;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustExistingFlag
                               */
                               public void setCustExistingFlag(java.lang.String param){
                            localCustExistingFlagTracker = param != null;
                                   
                                            this.localCustExistingFlag=param;
                                    

                               }
                            

                        /**
                        * field for ProductType
                        */

                        
                                    protected java.lang.String localProductType ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localProductTypeTracker = false ;

                           public boolean isProductTypeSpecified(){
                               return localProductTypeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getProductType(){
                               return localProductType;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ProductType
                               */
                               public void setProductType(java.lang.String param){
                            localProductTypeTracker = param != null;
                                   
                                            this.localProductType=param;
                                    

                               }
                            

                        /**
                        * field for ProductCode
                        */

                        
                                    protected java.lang.String localProductCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localProductCodeTracker = false ;

                           public boolean isProductCodeSpecified(){
                               return localProductCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getProductCode(){
                               return localProductCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ProductCode
                               */
                               public void setProductCode(java.lang.String param){
                            localProductCodeTracker = param != null;
                                   
                                            this.localProductCode=param;
                                    

                               }
                            

                        /**
                        * field for CustId
                        */

                        
                                    protected java.lang.String localCustId ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustIdTracker = false ;

                           public boolean isCustIdSpecified(){
                               return localCustIdTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustId(){
                               return localCustId;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustId
                               */
                               public void setCustId(java.lang.String param){
                            localCustIdTracker = param != null;
                                   
                                            this.localCustId=param;
                                    

                               }
                            

                        /**
                        * field for CustTitle
                        */

                        
                                    protected java.lang.String localCustTitle ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustTitleTracker = false ;

                           public boolean isCustTitleSpecified(){
                               return localCustTitleTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustTitle(){
                               return localCustTitle;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustTitle
                               */
                               public void setCustTitle(java.lang.String param){
                            localCustTitleTracker = param != null;
                                   
                                            this.localCustTitle=param;
                                    

                               }
                            

                        /**
                        * field for CustName
                        */

                        
                                    protected java.lang.String localCustName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustNameTracker = false ;

                           public boolean isCustNameSpecified(){
                               return localCustNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustName(){
                               return localCustName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustName
                               */
                               public void setCustName(java.lang.String param){
                            localCustNameTracker = param != null;
                                   
                                            this.localCustName=param;
                                    

                               }
                            

                        /**
                        * field for CustCategory
                        */

                        
                                    protected java.lang.String localCustCategory ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustCategoryTracker = false ;

                           public boolean isCustCategorySpecified(){
                               return localCustCategoryTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustCategory(){
                               return localCustCategory;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustCategory
                               */
                               public void setCustCategory(java.lang.String param){
                            localCustCategoryTracker = param != null;
                                   
                                            this.localCustCategory=param;
                                    

                               }
                            

                        /**
                        * field for CustShortName
                        */

                        
                                    protected java.lang.String localCustShortName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustShortNameTracker = false ;

                           public boolean isCustShortNameSpecified(){
                               return localCustShortNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustShortName(){
                               return localCustShortName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustShortName
                               */
                               public void setCustShortName(java.lang.String param){
                            localCustShortNameTracker = param != null;
                                   
                                            this.localCustShortName=param;
                                    

                               }
                            

                        /**
                        * field for CustDob
                        */

                        
                                    protected java.lang.String localCustDob ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustDobTracker = false ;

                           public boolean isCustDobSpecified(){
                               return localCustDobTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustDob(){
                               return localCustDob;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustDob
                               */
                               public void setCustDob(java.lang.String param){
                            localCustDobTracker = param != null;
                                   
                                            this.localCustDob=param;
                                    

                               }
                            

                        /**
                        * field for CustMotherName
                        */

                        
                                    protected java.lang.String localCustMotherName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustMotherNameTracker = false ;

                           public boolean isCustMotherNameSpecified(){
                               return localCustMotherNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustMotherName(){
                               return localCustMotherName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustMotherName
                               */
                               public void setCustMotherName(java.lang.String param){
                            localCustMotherNameTracker = param != null;
                                   
                                            this.localCustMotherName=param;
                                    

                               }
                            

                        /**
                        * field for CustBankStaff
                        */

                        
                                    protected java.lang.String localCustBankStaff ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustBankStaffTracker = false ;

                           public boolean isCustBankStaffSpecified(){
                               return localCustBankStaffTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustBankStaff(){
                               return localCustBankStaff;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustBankStaff
                               */
                               public void setCustBankStaff(java.lang.String param){
                            localCustBankStaffTracker = param != null;
                                   
                                            this.localCustBankStaff=param;
                                    

                               }
                            

                        /**
                        * field for CustMaritalStatus
                        */

                        
                                    protected java.lang.String localCustMaritalStatus ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustMaritalStatusTracker = false ;

                           public boolean isCustMaritalStatusSpecified(){
                               return localCustMaritalStatusTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustMaritalStatus(){
                               return localCustMaritalStatus;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustMaritalStatus
                               */
                               public void setCustMaritalStatus(java.lang.String param){
                            localCustMaritalStatusTracker = param != null;
                                   
                                            this.localCustMaritalStatus=param;
                                    

                               }
                            

                        /**
                        * field for CustBankingWithus
                        */

                        
                                    protected java.lang.String localCustBankingWithus ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustBankingWithusTracker = false ;

                           public boolean isCustBankingWithusSpecified(){
                               return localCustBankingWithusTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustBankingWithus(){
                               return localCustBankingWithus;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustBankingWithus
                               */
                               public void setCustBankingWithus(java.lang.String param){
                            localCustBankingWithusTracker = param != null;
                                   
                                            this.localCustBankingWithus=param;
                                    

                               }
                            

                        /**
                        * field for CustLocation
                        */

                        
                                    protected java.lang.String localCustLocation ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustLocationTracker = false ;

                           public boolean isCustLocationSpecified(){
                               return localCustLocationTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustLocation(){
                               return localCustLocation;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustLocation
                               */
                               public void setCustLocation(java.lang.String param){
                            localCustLocationTracker = param != null;
                                   
                                            this.localCustLocation=param;
                                    

                               }
                            

                        /**
                        * field for CustEduQualification
                        */

                        
                                    protected java.lang.String localCustEduQualification ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustEduQualificationTracker = false ;

                           public boolean isCustEduQualificationSpecified(){
                               return localCustEduQualificationTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustEduQualification(){
                               return localCustEduQualification;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustEduQualification
                               */
                               public void setCustEduQualification(java.lang.String param){
                            localCustEduQualificationTracker = param != null;
                                   
                                            this.localCustEduQualification=param;
                                    

                               }
                            

                        /**
                        * field for CustEmirate
                        */

                        
                                    protected java.lang.String localCustEmirate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustEmirateTracker = false ;

                           public boolean isCustEmirateSpecified(){
                               return localCustEmirateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustEmirate(){
                               return localCustEmirate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustEmirate
                               */
                               public void setCustEmirate(java.lang.String param){
                            localCustEmirateTracker = param != null;
                                   
                                            this.localCustEmirate=param;
                                    

                               }
                            

                        /**
                        * field for CustProfession
                        */

                        
                                    protected java.lang.String localCustProfession ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustProfessionTracker = false ;

                           public boolean isCustProfessionSpecified(){
                               return localCustProfessionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustProfession(){
                               return localCustProfession;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustProfession
                               */
                               public void setCustProfession(java.lang.String param){
                            localCustProfessionTracker = param != null;
                                   
                                            this.localCustProfession=param;
                                    

                               }
                            

                        /**
                        * field for CustNationality
                        */

                        
                                    protected java.lang.String localCustNationality ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustNationalityTracker = false ;

                           public boolean isCustNationalitySpecified(){
                               return localCustNationalityTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustNationality(){
                               return localCustNationality;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustNationality
                               */
                               public void setCustNationality(java.lang.String param){
                            localCustNationalityTracker = param != null;
                                   
                                            this.localCustNationality=param;
                                    

                               }
                            

                        /**
                        * field for CustMobile
                        */

                        
                                    protected java.lang.String localCustMobile ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustMobileTracker = false ;

                           public boolean isCustMobileSpecified(){
                               return localCustMobileTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustMobile(){
                               return localCustMobile;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustMobile
                               */
                               public void setCustMobile(java.lang.String param){
                            localCustMobileTracker = param != null;
                                   
                                            this.localCustMobile=param;
                                    

                               }
                            

                        /**
                        * field for CustSubSegType
                        */

                        
                                    protected java.lang.String localCustSubSegType ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustSubSegTypeTracker = false ;

                           public boolean isCustSubSegTypeSpecified(){
                               return localCustSubSegTypeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustSubSegType(){
                               return localCustSubSegType;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustSubSegType
                               */
                               public void setCustSubSegType(java.lang.String param){
                            localCustSubSegTypeTracker = param != null;
                                   
                                            this.localCustSubSegType=param;
                                    

                               }
                            

                        /**
                        * field for CustHomePhone
                        */

                        
                                    protected java.lang.String localCustHomePhone ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustHomePhoneTracker = false ;

                           public boolean isCustHomePhoneSpecified(){
                               return localCustHomePhoneTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustHomePhone(){
                               return localCustHomePhone;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustHomePhone
                               */
                               public void setCustHomePhone(java.lang.String param){
                            localCustHomePhoneTracker = param != null;
                                   
                                            this.localCustHomePhone=param;
                                    

                               }
                            

                        /**
                        * field for CustUnsecuredExposure
                        */

                        
                                    protected java.lang.String localCustUnsecuredExposure ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustUnsecuredExposureTracker = false ;

                           public boolean isCustUnsecuredExposureSpecified(){
                               return localCustUnsecuredExposureTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustUnsecuredExposure(){
                               return localCustUnsecuredExposure;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustUnsecuredExposure
                               */
                               public void setCustUnsecuredExposure(java.lang.String param){
                            localCustUnsecuredExposureTracker = param != null;
                                   
                                            this.localCustUnsecuredExposure=param;
                                    

                               }
                            

                        /**
                        * field for CustPoBoxNo
                        */

                        
                                    protected java.lang.String localCustPoBoxNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustPoBoxNoTracker = false ;

                           public boolean isCustPoBoxNoSpecified(){
                               return localCustPoBoxNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustPoBoxNo(){
                               return localCustPoBoxNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustPoBoxNo
                               */
                               public void setCustPoBoxNo(java.lang.String param){
                            localCustPoBoxNoTracker = param != null;
                                   
                                            this.localCustPoBoxNo=param;
                                    

                               }
                            

                        /**
                        * field for CustPresentCountry
                        */

                        
                                    protected java.lang.String localCustPresentCountry ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustPresentCountryTracker = false ;

                           public boolean isCustPresentCountrySpecified(){
                               return localCustPresentCountryTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustPresentCountry(){
                               return localCustPresentCountry;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustPresentCountry
                               */
                               public void setCustPresentCountry(java.lang.String param){
                            localCustPresentCountryTracker = param != null;
                                   
                                            this.localCustPresentCountry=param;
                                    

                               }
                            

                        /**
                        * field for CustRelationshipValue
                        */

                        
                                    protected java.lang.String localCustRelationshipValue ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustRelationshipValueTracker = false ;

                           public boolean isCustRelationshipValueSpecified(){
                               return localCustRelationshipValueTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustRelationshipValue(){
                               return localCustRelationshipValue;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustRelationshipValue
                               */
                               public void setCustRelationshipValue(java.lang.String param){
                            localCustRelationshipValueTracker = param != null;
                                   
                                            this.localCustRelationshipValue=param;
                                    

                               }
                            

                        /**
                        * field for CustVisaExpiryDate
                        */

                        
                                    protected java.lang.String localCustVisaExpiryDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustVisaExpiryDateTracker = false ;

                           public boolean isCustVisaExpiryDateSpecified(){
                               return localCustVisaExpiryDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustVisaExpiryDate(){
                               return localCustVisaExpiryDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustVisaExpiryDate
                               */
                               public void setCustVisaExpiryDate(java.lang.String param){
                            localCustVisaExpiryDateTracker = param != null;
                                   
                                            this.localCustVisaExpiryDate=param;
                                    

                               }
                            

                        /**
                        * field for CustCreditShield
                        */

                        
                                    protected java.lang.String localCustCreditShield ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustCreditShieldTracker = false ;

                           public boolean isCustCreditShieldSpecified(){
                               return localCustCreditShieldTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustCreditShield(){
                               return localCustCreditShield;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustCreditShield
                               */
                               public void setCustCreditShield(java.lang.String param){
                            localCustCreditShieldTracker = param != null;
                                   
                                            this.localCustCreditShield=param;
                                    

                               }
                            

                        /**
                        * field for EmplType
                        */

                        
                                    protected java.lang.String localEmplType ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmplTypeTracker = false ;

                           public boolean isEmplTypeSpecified(){
                               return localEmplTypeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEmplType(){
                               return localEmplType;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EmplType
                               */
                               public void setEmplType(java.lang.String param){
                            localEmplTypeTracker = param != null;
                                   
                                            this.localEmplType=param;
                                    

                               }
                            

                        /**
                        * field for EmplDesignation
                        */

                        
                                    protected java.lang.String localEmplDesignation ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmplDesignationTracker = false ;

                           public boolean isEmplDesignationSpecified(){
                               return localEmplDesignationTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEmplDesignation(){
                               return localEmplDesignation;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EmplDesignation
                               */
                               public void setEmplDesignation(java.lang.String param){
                            localEmplDesignationTracker = param != null;
                                   
                                            this.localEmplDesignation=param;
                                    

                               }
                            

                        /**
                        * field for EmplName
                        */

                        
                                    protected java.lang.String localEmplName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmplNameTracker = false ;

                           public boolean isEmplNameSpecified(){
                               return localEmplNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEmplName(){
                               return localEmplName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EmplName
                               */
                               public void setEmplName(java.lang.String param){
                            localEmplNameTracker = param != null;
                                   
                                            this.localEmplName=param;
                                    

                               }
                            

                        /**
                        * field for EmplEmploymentType
                        */

                        
                                    protected java.lang.String localEmplEmploymentType ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmplEmploymentTypeTracker = false ;

                           public boolean isEmplEmploymentTypeSpecified(){
                               return localEmplEmploymentTypeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEmplEmploymentType(){
                               return localEmplEmploymentType;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EmplEmploymentType
                               */
                               public void setEmplEmploymentType(java.lang.String param){
                            localEmplEmploymentTypeTracker = param != null;
                                   
                                            this.localEmplEmploymentType=param;
                                    

                               }
                            

                        /**
                        * field for EmplEmirates
                        */

                        
                                    protected java.lang.String localEmplEmirates ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmplEmiratesTracker = false ;

                           public boolean isEmplEmiratesSpecified(){
                               return localEmplEmiratesTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEmplEmirates(){
                               return localEmplEmirates;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EmplEmirates
                               */
                               public void setEmplEmirates(java.lang.String param){
                            localEmplEmiratesTracker = param != null;
                                   
                                            this.localEmplEmirates=param;
                                    

                               }
                            

                        /**
                        * field for EmplCategory
                        */

                        
                                    protected java.lang.String localEmplCategory ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmplCategoryTracker = false ;

                           public boolean isEmplCategorySpecified(){
                               return localEmplCategoryTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEmplCategory(){
                               return localEmplCategory;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EmplCategory
                               */
                               public void setEmplCategory(java.lang.String param){
                            localEmplCategoryTracker = param != null;
                                   
                                            this.localEmplCategory=param;
                                    

                               }
                            

                        /**
                        * field for EmplCpvWaived
                        */

                        
                                    protected java.lang.String localEmplCpvWaived ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmplCpvWaivedTracker = false ;

                           public boolean isEmplCpvWaivedSpecified(){
                               return localEmplCpvWaivedTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEmplCpvWaived(){
                               return localEmplCpvWaived;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EmplCpvWaived
                               */
                               public void setEmplCpvWaived(java.lang.String param){
                            localEmplCpvWaivedTracker = param != null;
                                   
                                            this.localEmplCpvWaived=param;
                                    

                               }
                            

                        /**
                        * field for EmplGrossIncome
                        */

                        
                                    protected java.lang.String localEmplGrossIncome ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmplGrossIncomeTracker = false ;

                           public boolean isEmplGrossIncomeSpecified(){
                               return localEmplGrossIncomeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEmplGrossIncome(){
                               return localEmplGrossIncome;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EmplGrossIncome
                               */
                               public void setEmplGrossIncome(java.lang.String param){
                            localEmplGrossIncomeTracker = param != null;
                                   
                                            this.localEmplGrossIncome=param;
                                    

                               }
                            

                        /**
                        * field for EmplStaffId
                        */

                        
                                    protected java.lang.String localEmplStaffId ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmplStaffIdTracker = false ;

                           public boolean isEmplStaffIdSpecified(){
                               return localEmplStaffIdTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEmplStaffId(){
                               return localEmplStaffId;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EmplStaffId
                               */
                               public void setEmplStaffId(java.lang.String param){
                            localEmplStaffIdTracker = param != null;
                                   
                                            this.localEmplStaffId=param;
                                    

                               }
                            

                        /**
                        * field for EmplDateOfJoining
                        */

                        
                                    protected java.lang.String localEmplDateOfJoining ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmplDateOfJoiningTracker = false ;

                           public boolean isEmplDateOfJoiningSpecified(){
                               return localEmplDateOfJoiningTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEmplDateOfJoining(){
                               return localEmplDateOfJoining;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EmplDateOfJoining
                               */
                               public void setEmplDateOfJoining(java.lang.String param){
                            localEmplDateOfJoiningTracker = param != null;
                                   
                                            this.localEmplDateOfJoining=param;
                                    

                               }
                            

                        /**
                        * field for EmplTmlFlag
                        */

                        
                                    protected java.lang.String localEmplTmlFlag ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmplTmlFlagTracker = false ;

                           public boolean isEmplTmlFlagSpecified(){
                               return localEmplTmlFlagTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEmplTmlFlag(){
                               return localEmplTmlFlag;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EmplTmlFlag
                               */
                               public void setEmplTmlFlag(java.lang.String param){
                            localEmplTmlFlagTracker = param != null;
                                   
                                            this.localEmplTmlFlag=param;
                                    

                               }
                            

                        /**
                        * field for EmplIndustryClass
                        */

                        
                                    protected java.lang.String localEmplIndustryClass ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmplIndustryClassTracker = false ;

                           public boolean isEmplIndustryClassSpecified(){
                               return localEmplIndustryClassTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEmplIndustryClass(){
                               return localEmplIndustryClass;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EmplIndustryClass
                               */
                               public void setEmplIndustryClass(java.lang.String param){
                            localEmplIndustryClassTracker = param != null;
                                   
                                            this.localEmplIndustryClass=param;
                                    

                               }
                            

                        /**
                        * field for EmplFixedIncome
                        */

                        
                                    protected java.lang.String localEmplFixedIncome ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmplFixedIncomeTracker = false ;

                           public boolean isEmplFixedIncomeSpecified(){
                               return localEmplFixedIncomeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEmplFixedIncome(){
                               return localEmplFixedIncome;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EmplFixedIncome
                               */
                               public void setEmplFixedIncome(java.lang.String param){
                            localEmplFixedIncomeTracker = param != null;
                                   
                                            this.localEmplFixedIncome=param;
                                    

                               }
                            

                        /**
                        * field for EmplSalaryCredits
                        */

                        
                                    protected java.lang.String localEmplSalaryCredits ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmplSalaryCreditsTracker = false ;

                           public boolean isEmplSalaryCreditsSpecified(){
                               return localEmplSalaryCreditsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEmplSalaryCredits(){
                               return localEmplSalaryCredits;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EmplSalaryCredits
                               */
                               public void setEmplSalaryCredits(java.lang.String param){
                            localEmplSalaryCreditsTracker = param != null;
                                   
                                            this.localEmplSalaryCredits=param;
                                    

                               }
                            

                        /**
                        * field for EmplJobConfirmation
                        */

                        
                                    protected java.lang.String localEmplJobConfirmation ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmplJobConfirmationTracker = false ;

                           public boolean isEmplJobConfirmationSpecified(){
                               return localEmplJobConfirmationTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEmplJobConfirmation(){
                               return localEmplJobConfirmation;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EmplJobConfirmation
                               */
                               public void setEmplJobConfirmation(java.lang.String param){
                            localEmplJobConfirmationTracker = param != null;
                                   
                                            this.localEmplJobConfirmation=param;
                                    

                               }
                            

                        /**
                        * field for EmplCompletedServices
                        */

                        
                                    protected java.lang.String localEmplCompletedServices ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmplCompletedServicesTracker = false ;

                           public boolean isEmplCompletedServicesSpecified(){
                               return localEmplCompletedServicesTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEmplCompletedServices(){
                               return localEmplCompletedServices;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EmplCompletedServices
                               */
                               public void setEmplCompletedServices(java.lang.String param){
                            localEmplCompletedServicesTracker = param != null;
                                   
                                            this.localEmplCompletedServices=param;
                                    

                               }
                            

                        /**
                        * field for EmplAvgMobileBill
                        */

                        
                                    protected java.lang.String localEmplAvgMobileBill ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmplAvgMobileBillTracker = false ;

                           public boolean isEmplAvgMobileBillSpecified(){
                               return localEmplAvgMobileBillTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEmplAvgMobileBill(){
                               return localEmplAvgMobileBill;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EmplAvgMobileBill
                               */
                               public void setEmplAvgMobileBill(java.lang.String param){
                            localEmplAvgMobileBillTracker = param != null;
                                   
                                            this.localEmplAvgMobileBill=param;
                                    

                               }
                            

                        /**
                        * field for EmplAverageIncome
                        */

                        
                                    protected java.lang.String localEmplAverageIncome ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmplAverageIncomeTracker = false ;

                           public boolean isEmplAverageIncomeSpecified(){
                               return localEmplAverageIncomeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEmplAverageIncome(){
                               return localEmplAverageIncome;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EmplAverageIncome
                               */
                               public void setEmplAverageIncome(java.lang.String param){
                            localEmplAverageIncomeTracker = param != null;
                                   
                                            this.localEmplAverageIncome=param;
                                    

                               }
                            

                        /**
                        * field for EmplChequeReturns
                        */

                        
                                    protected java.lang.String localEmplChequeReturns ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmplChequeReturnsTracker = false ;

                           public boolean isEmplChequeReturnsSpecified(){
                               return localEmplChequeReturnsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEmplChequeReturns(){
                               return localEmplChequeReturns;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EmplChequeReturns
                               */
                               public void setEmplChequeReturns(java.lang.String param){
                            localEmplChequeReturnsTracker = param != null;
                                   
                                            this.localEmplChequeReturns=param;
                                    

                               }
                            

                        /**
                        * field for EmplSelfEmpCategory
                        */

                        
                                    protected java.lang.String localEmplSelfEmpCategory ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmplSelfEmpCategoryTracker = false ;

                           public boolean isEmplSelfEmpCategorySpecified(){
                               return localEmplSelfEmpCategoryTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEmplSelfEmpCategory(){
                               return localEmplSelfEmpCategory;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EmplSelfEmpCategory
                               */
                               public void setEmplSelfEmpCategory(java.lang.String param){
                            localEmplSelfEmpCategoryTracker = param != null;
                                   
                                            this.localEmplSelfEmpCategory=param;
                                    

                               }
                            

                        /**
                        * field for EmplLengthOfBusiness
                        */

                        
                                    protected java.lang.String localEmplLengthOfBusiness ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmplLengthOfBusinessTracker = false ;

                           public boolean isEmplLengthOfBusinessSpecified(){
                               return localEmplLengthOfBusinessTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEmplLengthOfBusiness(){
                               return localEmplLengthOfBusiness;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EmplLengthOfBusiness
                               */
                               public void setEmplLengthOfBusiness(java.lang.String param){
                            localEmplLengthOfBusinessTracker = param != null;
                                   
                                            this.localEmplLengthOfBusiness=param;
                                    

                               }
                            

                        /**
                        * field for EmplNatureBusiness
                        */

                        
                                    protected java.lang.String localEmplNatureBusiness ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmplNatureBusinessTracker = false ;

                           public boolean isEmplNatureBusinessSpecified(){
                               return localEmplNatureBusinessTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEmplNatureBusiness(){
                               return localEmplNatureBusiness;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EmplNatureBusiness
                               */
                               public void setEmplNatureBusiness(java.lang.String param){
                            localEmplNatureBusinessTracker = param != null;
                                   
                                            this.localEmplNatureBusiness=param;
                                    

                               }
                            

                        /**
                        * field for CcEtihadGuest
                        */

                        
                                    protected java.lang.String localCcEtihadGuest ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCcEtihadGuestTracker = false ;

                           public boolean isCcEtihadGuestSpecified(){
                               return localCcEtihadGuestTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCcEtihadGuest(){
                               return localCcEtihadGuest;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CcEtihadGuest
                               */
                               public void setCcEtihadGuest(java.lang.String param){
                            localCcEtihadGuestTracker = param != null;
                                   
                                            this.localCcEtihadGuest=param;
                                    

                               }
                            

                        /**
                        * field for CcEtihadGuestNo
                        */

                        
                                    protected java.lang.String localCcEtihadGuestNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCcEtihadGuestNoTracker = false ;

                           public boolean isCcEtihadGuestNoSpecified(){
                               return localCcEtihadGuestNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCcEtihadGuestNo(){
                               return localCcEtihadGuestNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CcEtihadGuestNo
                               */
                               public void setCcEtihadGuestNo(java.lang.String param){
                            localCcEtihadGuestNoTracker = param != null;
                                   
                                            this.localCcEtihadGuestNo=param;
                                    

                               }
                            

                        /**
                        * field for CcCreditLimit
                        */

                        
                                    protected java.lang.String localCcCreditLimit ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCcCreditLimitTracker = false ;

                           public boolean isCcCreditLimitSpecified(){
                               return localCcCreditLimitTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCcCreditLimit(){
                               return localCcCreditLimit;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CcCreditLimit
                               */
                               public void setCcCreditLimit(java.lang.String param){
                            localCcCreditLimitTracker = param != null;
                                   
                                            this.localCcCreditLimit=param;
                                    

                               }
                            

                        /**
                        * field for CcPromoValue
                        */

                        
                                    protected java.lang.String localCcPromoValue ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCcPromoValueTracker = false ;

                           public boolean isCcPromoValueSpecified(){
                               return localCcPromoValueTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCcPromoValue(){
                               return localCcPromoValue;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CcPromoValue
                               */
                               public void setCcPromoValue(java.lang.String param){
                            localCcPromoValueTracker = param != null;
                                   
                                            this.localCcPromoValue=param;
                                    

                               }
                            

                        /**
                        * field for CcDsaCode
                        */

                        
                                    protected java.lang.String localCcDsaCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCcDsaCodeTracker = false ;

                           public boolean isCcDsaCodeSpecified(){
                               return localCcDsaCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCcDsaCode(){
                               return localCcDsaCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CcDsaCode
                               */
                               public void setCcDsaCode(java.lang.String param){
                            localCcDsaCodeTracker = param != null;
                                   
                                            this.localCcDsaCode=param;
                                    

                               }
                            

                        /**
                        * field for CcApplnRefNo
                        */

                        
                                    protected java.lang.String localCcApplnRefNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCcApplnRefNoTracker = false ;

                           public boolean isCcApplnRefNoSpecified(){
                               return localCcApplnRefNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCcApplnRefNo(){
                               return localCcApplnRefNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CcApplnRefNo
                               */
                               public void setCcApplnRefNo(java.lang.String param){
                            localCcApplnRefNoTracker = param != null;
                                   
                                            this.localCcApplnRefNo=param;
                                    

                               }
                            

                        /**
                        * field for CcPrimEmbossName
                        */

                        
                                    protected java.lang.String localCcPrimEmbossName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCcPrimEmbossNameTracker = false ;

                           public boolean isCcPrimEmbossNameSpecified(){
                               return localCcPrimEmbossNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCcPrimEmbossName(){
                               return localCcPrimEmbossName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CcPrimEmbossName
                               */
                               public void setCcPrimEmbossName(java.lang.String param){
                            localCcPrimEmbossNameTracker = param != null;
                                   
                                            this.localCcPrimEmbossName=param;
                                    

                               }
                            

                        /**
                        * field for CcStandingInstruction
                        */

                        
                                    protected java.lang.String localCcStandingInstruction ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCcStandingInstructionTracker = false ;

                           public boolean isCcStandingInstructionSpecified(){
                               return localCcStandingInstructionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCcStandingInstruction(){
                               return localCcStandingInstruction;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CcStandingInstruction
                               */
                               public void setCcStandingInstruction(java.lang.String param){
                            localCcStandingInstructionTracker = param != null;
                                   
                                            this.localCcStandingInstruction=param;
                                    

                               }
                            

                        /**
                        * field for CcAdcbAccntNo
                        */

                        
                                    protected java.lang.String localCcAdcbAccntNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCcAdcbAccntNoTracker = false ;

                           public boolean isCcAdcbAccntNoSpecified(){
                               return localCcAdcbAccntNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCcAdcbAccntNo(){
                               return localCcAdcbAccntNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CcAdcbAccntNo
                               */
                               public void setCcAdcbAccntNo(java.lang.String param){
                            localCcAdcbAccntNoTracker = param != null;
                                   
                                            this.localCcAdcbAccntNo=param;
                                    

                               }
                            

                        /**
                        * field for CcAutoDebitPercent
                        */

                        
                                    protected java.lang.String localCcAutoDebitPercent ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCcAutoDebitPercentTracker = false ;

                           public boolean isCcAutoDebitPercentSpecified(){
                               return localCcAutoDebitPercentTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCcAutoDebitPercent(){
                               return localCcAutoDebitPercent;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CcAutoDebitPercent
                               */
                               public void setCcAutoDebitPercent(java.lang.String param){
                            localCcAutoDebitPercentTracker = param != null;
                                   
                                            this.localCcAutoDebitPercent=param;
                                    

                               }
                            

                        /**
                        * field for CcFirstLevelPromoCode
                        */

                        
                                    protected java.lang.String localCcFirstLevelPromoCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCcFirstLevelPromoCodeTracker = false ;

                           public boolean isCcFirstLevelPromoCodeSpecified(){
                               return localCcFirstLevelPromoCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCcFirstLevelPromoCode(){
                               return localCcFirstLevelPromoCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CcFirstLevelPromoCode
                               */
                               public void setCcFirstLevelPromoCode(java.lang.String param){
                            localCcFirstLevelPromoCodeTracker = param != null;
                                   
                                            this.localCcFirstLevelPromoCode=param;
                                    

                               }
                            

                        /**
                        * field for CcSecondLevelPromoCode
                        */

                        
                                    protected java.lang.String localCcSecondLevelPromoCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCcSecondLevelPromoCodeTracker = false ;

                           public boolean isCcSecondLevelPromoCodeSpecified(){
                               return localCcSecondLevelPromoCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCcSecondLevelPromoCode(){
                               return localCcSecondLevelPromoCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CcSecondLevelPromoCode
                               */
                               public void setCcSecondLevelPromoCode(java.lang.String param){
                            localCcSecondLevelPromoCodeTracker = param != null;
                                   
                                            this.localCcSecondLevelPromoCode=param;
                                    

                               }
                            

                        /**
                        * field for CcCreditLimitIncrease
                        */

                        
                                    protected java.lang.String localCcCreditLimitIncrease ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCcCreditLimitIncreaseTracker = false ;

                           public boolean isCcCreditLimitIncreaseSpecified(){
                               return localCcCreditLimitIncreaseTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCcCreditLimitIncrease(){
                               return localCcCreditLimitIncrease;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CcCreditLimitIncrease
                               */
                               public void setCcCreditLimitIncrease(java.lang.String param){
                            localCcCreditLimitIncreaseTracker = param != null;
                                   
                                            this.localCcCreditLimitIncrease=param;
                                    

                               }
                            

                        /**
                        * field for CcC2CBankName
                        */

                        
                                    protected java.lang.String localCcC2CBankName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCcC2CBankNameTracker = false ;

                           public boolean isCcC2CBankNameSpecified(){
                               return localCcC2CBankNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCcC2CBankName(){
                               return localCcC2CBankName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CcC2CBankName
                               */
                               public void setCcC2CBankName(java.lang.String param){
                            localCcC2CBankNameTracker = param != null;
                                   
                                            this.localCcC2CBankName=param;
                                    

                               }
                            

                        /**
                        * field for CcCreditCardUtilization
                        */

                        
                                    protected java.lang.String localCcCreditCardUtilization ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCcCreditCardUtilizationTracker = false ;

                           public boolean isCcCreditCardUtilizationSpecified(){
                               return localCcCreditCardUtilizationTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCcCreditCardUtilization(){
                               return localCcCreditCardUtilization;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CcCreditCardUtilization
                               */
                               public void setCcCreditCardUtilization(java.lang.String param){
                            localCcCreditCardUtilizationTracker = param != null;
                                   
                                            this.localCcCreditCardUtilization=param;
                                    

                               }
                            

                        /**
                        * field for CcLoanOnCards
                        */

                        
                                    protected java.lang.String localCcLoanOnCards ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCcLoanOnCardsTracker = false ;

                           public boolean isCcLoanOnCardsSpecified(){
                               return localCcLoanOnCardsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCcLoanOnCards(){
                               return localCcLoanOnCards;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CcLoanOnCards
                               */
                               public void setCcLoanOnCards(java.lang.String param){
                            localCcLoanOnCardsTracker = param != null;
                                   
                                            this.localCcLoanOnCards=param;
                                    

                               }
                            

                        /**
                        * field for CcEmirateSourceCode
                        */

                        
                                    protected java.lang.String localCcEmirateSourceCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCcEmirateSourceCodeTracker = false ;

                           public boolean isCcEmirateSourceCodeSpecified(){
                               return localCcEmirateSourceCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCcEmirateSourceCode(){
                               return localCcEmirateSourceCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CcEmirateSourceCode
                               */
                               public void setCcEmirateSourceCode(java.lang.String param){
                            localCcEmirateSourceCodeTracker = param != null;
                                   
                                            this.localCcEmirateSourceCode=param;
                                    

                               }
                            

                        /**
                        * field for CcSalaryTransferAdcb
                        */

                        
                                    protected java.lang.String localCcSalaryTransferAdcb ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCcSalaryTransferAdcbTracker = false ;

                           public boolean isCcSalaryTransferAdcbSpecified(){
                               return localCcSalaryTransferAdcbTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCcSalaryTransferAdcb(){
                               return localCcSalaryTransferAdcb;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CcSalaryTransferAdcb
                               */
                               public void setCcSalaryTransferAdcb(java.lang.String param){
                            localCcSalaryTransferAdcbTracker = param != null;
                                   
                                            this.localCcSalaryTransferAdcb=param;
                                    

                               }
                            

                        /**
                        * field for CcStatementCycle
                        */

                        
                                    protected java.lang.String localCcStatementCycle ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCcStatementCycleTracker = false ;

                           public boolean isCcStatementCycleSpecified(){
                               return localCcStatementCycleTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCcStatementCycle(){
                               return localCcStatementCycle;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CcStatementCycle
                               */
                               public void setCcStatementCycle(java.lang.String param){
                            localCcStatementCycleTracker = param != null;
                                   
                                            this.localCcStatementCycle=param;
                                    

                               }
                            

                        /**
                        * field for CcOnlineDebitPay
                        */

                        
                                    protected java.lang.String localCcOnlineDebitPay ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCcOnlineDebitPayTracker = false ;

                           public boolean isCcOnlineDebitPaySpecified(){
                               return localCcOnlineDebitPayTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCcOnlineDebitPay(){
                               return localCcOnlineDebitPay;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CcOnlineDebitPay
                               */
                               public void setCcOnlineDebitPay(java.lang.String param){
                            localCcOnlineDebitPayTracker = param != null;
                                   
                                            this.localCcOnlineDebitPay=param;
                                    

                               }
                            

                        /**
                        * field for CcTotalDbr
                        */

                        
                                    protected java.lang.String localCcTotalDbr ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCcTotalDbrTracker = false ;

                           public boolean isCcTotalDbrSpecified(){
                               return localCcTotalDbrTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCcTotalDbr(){
                               return localCcTotalDbr;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CcTotalDbr
                               */
                               public void setCcTotalDbr(java.lang.String param){
                            localCcTotalDbrTracker = param != null;
                                   
                                            this.localCcTotalDbr=param;
                                    

                               }
                            

                        /**
                        * field for CustGender
                        */

                        
                                    protected java.lang.String localCustGender ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustGenderTracker = false ;

                           public boolean isCustGenderSpecified(){
                               return localCustGenderTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustGender(){
                               return localCustGender;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustGender
                               */
                               public void setCustGender(java.lang.String param){
                            localCustGenderTracker = param != null;
                                   
                                            this.localCustGender=param;
                                    

                               }
                            

                        /**
                        * field for CustPassportNo
                        */

                        
                                    protected java.lang.String localCustPassportNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustPassportNoTracker = false ;

                           public boolean isCustPassportNoSpecified(){
                               return localCustPassportNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustPassportNo(){
                               return localCustPassportNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustPassportNo
                               */
                               public void setCustPassportNo(java.lang.String param){
                            localCustPassportNoTracker = param != null;
                                   
                                            this.localCustPassportNo=param;
                                    

                               }
                            

                        /**
                        * field for CustEmiratesId
                        */

                        
                                    protected java.lang.String localCustEmiratesId ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustEmiratesIdTracker = false ;

                           public boolean isCustEmiratesIdSpecified(){
                               return localCustEmiratesIdTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustEmiratesId(){
                               return localCustEmiratesId;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustEmiratesId
                               */
                               public void setCustEmiratesId(java.lang.String param){
                            localCustEmiratesIdTracker = param != null;
                                   
                                            this.localCustEmiratesId=param;
                                    

                               }
                            

                        /**
                        * field for CustResiPhone
                        */

                        
                                    protected java.lang.String localCustResiPhone ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustResiPhoneTracker = false ;

                           public boolean isCustResiPhoneSpecified(){
                               return localCustResiPhoneTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustResiPhone(){
                               return localCustResiPhone;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustResiPhone
                               */
                               public void setCustResiPhone(java.lang.String param){
                            localCustResiPhoneTracker = param != null;
                                   
                                            this.localCustResiPhone=param;
                                    

                               }
                            

                        /**
                        * field for CustResiAddress1
                        */

                        
                                    protected java.lang.String localCustResiAddress1 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustResiAddress1Tracker = false ;

                           public boolean isCustResiAddress1Specified(){
                               return localCustResiAddress1Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustResiAddress1(){
                               return localCustResiAddress1;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustResiAddress1
                               */
                               public void setCustResiAddress1(java.lang.String param){
                            localCustResiAddress1Tracker = param != null;
                                   
                                            this.localCustResiAddress1=param;
                                    

                               }
                            

                        /**
                        * field for CustResiAddress2
                        */

                        
                                    protected java.lang.String localCustResiAddress2 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustResiAddress2Tracker = false ;

                           public boolean isCustResiAddress2Specified(){
                               return localCustResiAddress2Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustResiAddress2(){
                               return localCustResiAddress2;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustResiAddress2
                               */
                               public void setCustResiAddress2(java.lang.String param){
                            localCustResiAddress2Tracker = param != null;
                                   
                                            this.localCustResiAddress2=param;
                                    

                               }
                            

                        /**
                        * field for CustResiAddress3
                        */

                        
                                    protected java.lang.String localCustResiAddress3 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustResiAddress3Tracker = false ;

                           public boolean isCustResiAddress3Specified(){
                               return localCustResiAddress3Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustResiAddress3(){
                               return localCustResiAddress3;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustResiAddress3
                               */
                               public void setCustResiAddress3(java.lang.String param){
                            localCustResiAddress3Tracker = param != null;
                                   
                                            this.localCustResiAddress3=param;
                                    

                               }
                            

                        /**
                        * field for CustResiEmirate
                        */

                        
                                    protected java.lang.String localCustResiEmirate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustResiEmirateTracker = false ;

                           public boolean isCustResiEmirateSpecified(){
                               return localCustResiEmirateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustResiEmirate(){
                               return localCustResiEmirate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustResiEmirate
                               */
                               public void setCustResiEmirate(java.lang.String param){
                            localCustResiEmirateTracker = param != null;
                                   
                                            this.localCustResiEmirate=param;
                                    

                               }
                            

                        /**
                        * field for CustResiCity
                        */

                        
                                    protected java.lang.String localCustResiCity ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustResiCityTracker = false ;

                           public boolean isCustResiCitySpecified(){
                               return localCustResiCityTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustResiCity(){
                               return localCustResiCity;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustResiCity
                               */
                               public void setCustResiCity(java.lang.String param){
                            localCustResiCityTracker = param != null;
                                   
                                            this.localCustResiCity=param;
                                    

                               }
                            

                        /**
                        * field for CustResiCountry
                        */

                        
                                    protected java.lang.String localCustResiCountry ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustResiCountryTracker = false ;

                           public boolean isCustResiCountrySpecified(){
                               return localCustResiCountryTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustResiCountry(){
                               return localCustResiCountry;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustResiCountry
                               */
                               public void setCustResiCountry(java.lang.String param){
                            localCustResiCountryTracker = param != null;
                                   
                                            this.localCustResiCountry=param;
                                    

                               }
                            

                        /**
                        * field for CustResiPoboxNo
                        */

                        
                                    protected java.lang.String localCustResiPoboxNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustResiPoboxNoTracker = false ;

                           public boolean isCustResiPoboxNoSpecified(){
                               return localCustResiPoboxNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustResiPoboxNo(){
                               return localCustResiPoboxNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustResiPoboxNo
                               */
                               public void setCustResiPoboxNo(java.lang.String param){
                            localCustResiPoboxNoTracker = param != null;
                                   
                                            this.localCustResiPoboxNo=param;
                                    

                               }
                            

                        /**
                        * field for CcThirdLevelPromoCode
                        */

                        
                                    protected java.lang.String localCcThirdLevelPromoCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCcThirdLevelPromoCodeTracker = false ;

                           public boolean isCcThirdLevelPromoCodeSpecified(){
                               return localCcThirdLevelPromoCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCcThirdLevelPromoCode(){
                               return localCcThirdLevelPromoCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CcThirdLevelPromoCode
                               */
                               public void setCcThirdLevelPromoCode(java.lang.String param){
                            localCcThirdLevelPromoCodeTracker = param != null;
                                   
                                            this.localCcThirdLevelPromoCode=param;
                                    

                               }
                            

                        /**
                        * field for CcCreditShield
                        */

                        
                                    protected java.lang.String localCcCreditShield ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCcCreditShieldTracker = false ;

                           public boolean isCcCreditShieldSpecified(){
                               return localCcCreditShieldTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCcCreditShield(){
                               return localCcCreditShield;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CcCreditShield
                               */
                               public void setCcCreditShield(java.lang.String param){
                            localCcCreditShieldTracker = param != null;
                                   
                                            this.localCcCreditShield=param;
                                    

                               }
                            

                        /**
                        * field for CcFileLocation
                        */

                        
                                    protected java.lang.String localCcFileLocation ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCcFileLocationTracker = false ;

                           public boolean isCcFileLocationSpecified(){
                               return localCcFileLocationTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCcFileLocation(){
                               return localCcFileLocation;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CcFileLocation
                               */
                               public void setCcFileLocation(java.lang.String param){
                            localCcFileLocationTracker = param != null;
                                   
                                            this.localCcFileLocation=param;
                                    

                               }
                            

                        /**
                        * field for CcPrintStatement
                        */

                        
                                    protected java.lang.String localCcPrintStatement ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCcPrintStatementTracker = false ;

                           public boolean isCcPrintStatementSpecified(){
                               return localCcPrintStatementTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCcPrintStatement(){
                               return localCcPrintStatement;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CcPrintStatement
                               */
                               public void setCcPrintStatement(java.lang.String param){
                            localCcPrintStatementTracker = param != null;
                                   
                                            this.localCcPrintStatement=param;
                                    

                               }
                            

                        /**
                        * field for CustEmail
                        */

                        
                                    protected java.lang.String localCustEmail ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustEmailTracker = false ;

                           public boolean isCustEmailSpecified(){
                               return localCustEmailTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustEmail(){
                               return localCustEmail;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustEmail
                               */
                               public void setCustEmail(java.lang.String param){
                            localCustEmailTracker = param != null;
                                   
                                            this.localCustEmail=param;
                                    

                               }
                            

                        /**
                        * field for CustNetIncome
                        */

                        
                                    protected java.lang.String localCustNetIncome ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustNetIncomeTracker = false ;

                           public boolean isCustNetIncomeSpecified(){
                               return localCustNetIncomeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustNetIncome(){
                               return localCustNetIncome;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustNetIncome
                               */
                               public void setCustNetIncome(java.lang.String param){
                            localCustNetIncomeTracker = param != null;
                                   
                                            this.localCustNetIncome=param;
                                    

                               }
                            

                        /**
                        * field for EmplPhoneNo
                        */

                        
                                    protected java.lang.String localEmplPhoneNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmplPhoneNoTracker = false ;

                           public boolean isEmplPhoneNoSpecified(){
                               return localEmplPhoneNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEmplPhoneNo(){
                               return localEmplPhoneNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EmplPhoneNo
                               */
                               public void setEmplPhoneNo(java.lang.String param){
                            localEmplPhoneNoTracker = param != null;
                                   
                                            this.localEmplPhoneNo=param;
                                    

                               }
                            

                        /**
                        * field for CustHomeAddress1
                        */

                        
                                    protected java.lang.String localCustHomeAddress1 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustHomeAddress1Tracker = false ;

                           public boolean isCustHomeAddress1Specified(){
                               return localCustHomeAddress1Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustHomeAddress1(){
                               return localCustHomeAddress1;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustHomeAddress1
                               */
                               public void setCustHomeAddress1(java.lang.String param){
                            localCustHomeAddress1Tracker = param != null;
                                   
                                            this.localCustHomeAddress1=param;
                                    

                               }
                            

                        /**
                        * field for CustHomeAddress2
                        */

                        
                                    protected java.lang.String localCustHomeAddress2 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustHomeAddress2Tracker = false ;

                           public boolean isCustHomeAddress2Specified(){
                               return localCustHomeAddress2Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustHomeAddress2(){
                               return localCustHomeAddress2;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustHomeAddress2
                               */
                               public void setCustHomeAddress2(java.lang.String param){
                            localCustHomeAddress2Tracker = param != null;
                                   
                                            this.localCustHomeAddress2=param;
                                    

                               }
                            

                        /**
                        * field for CustHomeAddress3
                        */

                        
                                    protected java.lang.String localCustHomeAddress3 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustHomeAddress3Tracker = false ;

                           public boolean isCustHomeAddress3Specified(){
                               return localCustHomeAddress3Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustHomeAddress3(){
                               return localCustHomeAddress3;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustHomeAddress3
                               */
                               public void setCustHomeAddress3(java.lang.String param){
                            localCustHomeAddress3Tracker = param != null;
                                   
                                            this.localCustHomeAddress3=param;
                                    

                               }
                            

                        /**
                        * field for CustHomeZip
                        */

                        
                                    protected java.lang.String localCustHomeZip ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustHomeZipTracker = false ;

                           public boolean isCustHomeZipSpecified(){
                               return localCustHomeZipTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustHomeZip(){
                               return localCustHomeZip;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustHomeZip
                               */
                               public void setCustHomeZip(java.lang.String param){
                            localCustHomeZipTracker = param != null;
                                   
                                            this.localCustHomeZip=param;
                                    

                               }
                            

                        /**
                        * field for CustHomeCity
                        */

                        
                                    protected java.lang.String localCustHomeCity ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustHomeCityTracker = false ;

                           public boolean isCustHomeCitySpecified(){
                               return localCustHomeCityTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustHomeCity(){
                               return localCustHomeCity;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustHomeCity
                               */
                               public void setCustHomeCity(java.lang.String param){
                            localCustHomeCityTracker = param != null;
                                   
                                            this.localCustHomeCity=param;
                                    

                               }
                            

                        /**
                        * field for CustHomeCountry
                        */

                        
                                    protected java.lang.String localCustHomeCountry ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustHomeCountryTracker = false ;

                           public boolean isCustHomeCountrySpecified(){
                               return localCustHomeCountryTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustHomeCountry(){
                               return localCustHomeCountry;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustHomeCountry
                               */
                               public void setCustHomeCountry(java.lang.String param){
                            localCustHomeCountryTracker = param != null;
                                   
                                            this.localCustHomeCountry=param;
                                    

                               }
                            

                        /**
                        * field for CustHomeState
                        */

                        
                                    protected java.lang.String localCustHomeState ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustHomeStateTracker = false ;

                           public boolean isCustHomeStateSpecified(){
                               return localCustHomeStateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustHomeState(){
                               return localCustHomeState;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustHomeState
                               */
                               public void setCustHomeState(java.lang.String param){
                            localCustHomeStateTracker = param != null;
                                   
                                            this.localCustHomeState=param;
                                    

                               }
                            

                        /**
                        * field for CustState2
                        */

                        
                                    protected java.lang.String localCustState2 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustState2Tracker = false ;

                           public boolean isCustState2Specified(){
                               return localCustState2Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustState2(){
                               return localCustState2;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustState2
                               */
                               public void setCustState2(java.lang.String param){
                            localCustState2Tracker = param != null;
                                   
                                            this.localCustState2=param;
                                    

                               }
                            

                        /**
                        * field for CcSupplLimitPercentage
                        */

                        
                                    protected java.lang.String localCcSupplLimitPercentage ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCcSupplLimitPercentageTracker = false ;

                           public boolean isCcSupplLimitPercentageSpecified(){
                               return localCcSupplLimitPercentageTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCcSupplLimitPercentage(){
                               return localCcSupplLimitPercentage;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CcSupplLimitPercentage
                               */
                               public void setCcSupplLimitPercentage(java.lang.String param){
                            localCcSupplLimitPercentageTracker = param != null;
                                   
                                            this.localCcSupplLimitPercentage=param;
                                    

                               }
                            

                        /**
                        * field for CcBranchCode
                        */

                        
                                    protected java.lang.String localCcBranchCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCcBranchCodeTracker = false ;

                           public boolean isCcBranchCodeSpecified(){
                               return localCcBranchCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCcBranchCode(){
                               return localCcBranchCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CcBranchCode
                               */
                               public void setCcBranchCode(java.lang.String param){
                            localCcBranchCodeTracker = param != null;
                                   
                                            this.localCcBranchCode=param;
                                    

                               }
                            

                        /**
                        * field for CcEStatement
                        */

                        
                                    protected java.lang.String localCcEStatement ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCcEStatementTracker = false ;

                           public boolean isCcEStatementSpecified(){
                               return localCcEStatementTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCcEStatement(){
                               return localCcEStatement;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CcEStatement
                               */
                               public void setCcEStatement(java.lang.String param){
                            localCcEStatementTracker = param != null;
                                   
                                            this.localCcEStatement=param;
                                    

                               }
                            

                        /**
                        * field for CcEcbEmi
                        */

                        
                                    protected java.lang.String localCcEcbEmi ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCcEcbEmiTracker = false ;

                           public boolean isCcEcbEmiSpecified(){
                               return localCcEcbEmiTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCcEcbEmi(){
                               return localCcEcbEmi;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CcEcbEmi
                               */
                               public void setCcEcbEmi(java.lang.String param){
                            localCcEcbEmiTracker = param != null;
                                   
                                            this.localCcEcbEmi=param;
                                    

                               }
                            

                        /**
                        * field for CcEcbUnsecuredExposture
                        */

                        
                                    protected java.lang.String localCcEcbUnsecuredExposture ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCcEcbUnsecuredExpostureTracker = false ;

                           public boolean isCcEcbUnsecuredExpostureSpecified(){
                               return localCcEcbUnsecuredExpostureTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCcEcbUnsecuredExposture(){
                               return localCcEcbUnsecuredExposture;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CcEcbUnsecuredExposture
                               */
                               public void setCcEcbUnsecuredExposture(java.lang.String param){
                            localCcEcbUnsecuredExpostureTracker = param != null;
                                   
                                            this.localCcEcbUnsecuredExposture=param;
                                    

                               }
                            

                        /**
                        * field for CcMaxBucket
                        */

                        
                                    protected java.lang.String localCcMaxBucket ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCcMaxBucketTracker = false ;

                           public boolean isCcMaxBucketSpecified(){
                               return localCcMaxBucketTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCcMaxBucket(){
                               return localCcMaxBucket;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CcMaxBucket
                               */
                               public void setCcMaxBucket(java.lang.String param){
                            localCcMaxBucketTracker = param != null;
                                   
                                            this.localCcMaxBucket=param;
                                    

                               }
                            

                        /**
                        * field for CcCurrentBucket
                        */

                        
                                    protected java.lang.String localCcCurrentBucket ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCcCurrentBucketTracker = false ;

                           public boolean isCcCurrentBucketSpecified(){
                               return localCcCurrentBucketTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCcCurrentBucket(){
                               return localCcCurrentBucket;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CcCurrentBucket
                               */
                               public void setCcCurrentBucket(java.lang.String param){
                            localCcCurrentBucketTracker = param != null;
                                   
                                            this.localCcCurrentBucket=param;
                                    

                               }
                            

                        /**
                        * field for CcSupplName
                        */

                        
                                    protected java.lang.String localCcSupplName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCcSupplNameTracker = false ;

                           public boolean isCcSupplNameSpecified(){
                               return localCcSupplNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCcSupplName(){
                               return localCcSupplName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CcSupplName
                               */
                               public void setCcSupplName(java.lang.String param){
                            localCcSupplNameTracker = param != null;
                                   
                                            this.localCcSupplName=param;
                                    

                               }
                            

                        /**
                        * field for CcSupplTitle
                        */

                        
                                    protected java.lang.String localCcSupplTitle ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCcSupplTitleTracker = false ;

                           public boolean isCcSupplTitleSpecified(){
                               return localCcSupplTitleTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCcSupplTitle(){
                               return localCcSupplTitle;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CcSupplTitle
                               */
                               public void setCcSupplTitle(java.lang.String param){
                            localCcSupplTitleTracker = param != null;
                                   
                                            this.localCcSupplTitle=param;
                                    

                               }
                            

                        /**
                        * field for CcSupplEmbossingName
                        */

                        
                                    protected java.lang.String localCcSupplEmbossingName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCcSupplEmbossingNameTracker = false ;

                           public boolean isCcSupplEmbossingNameSpecified(){
                               return localCcSupplEmbossingNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCcSupplEmbossingName(){
                               return localCcSupplEmbossingName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CcSupplEmbossingName
                               */
                               public void setCcSupplEmbossingName(java.lang.String param){
                            localCcSupplEmbossingNameTracker = param != null;
                                   
                                            this.localCcSupplEmbossingName=param;
                                    

                               }
                            

                        /**
                        * field for CcSupplRelationship
                        */

                        
                                    protected java.lang.String localCcSupplRelationship ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCcSupplRelationshipTracker = false ;

                           public boolean isCcSupplRelationshipSpecified(){
                               return localCcSupplRelationshipTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCcSupplRelationship(){
                               return localCcSupplRelationship;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CcSupplRelationship
                               */
                               public void setCcSupplRelationship(java.lang.String param){
                            localCcSupplRelationshipTracker = param != null;
                                   
                                            this.localCcSupplRelationship=param;
                                    

                               }
                            

                        /**
                        * field for CcSupplNationlity
                        */

                        
                                    protected java.lang.String localCcSupplNationlity ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCcSupplNationlityTracker = false ;

                           public boolean isCcSupplNationlitySpecified(){
                               return localCcSupplNationlityTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCcSupplNationlity(){
                               return localCcSupplNationlity;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CcSupplNationlity
                               */
                               public void setCcSupplNationlity(java.lang.String param){
                            localCcSupplNationlityTracker = param != null;
                                   
                                            this.localCcSupplNationlity=param;
                                    

                               }
                            

                        /**
                        * field for CcSupplPassportNo
                        */

                        
                                    protected java.lang.String localCcSupplPassportNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCcSupplPassportNoTracker = false ;

                           public boolean isCcSupplPassportNoSpecified(){
                               return localCcSupplPassportNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCcSupplPassportNo(){
                               return localCcSupplPassportNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CcSupplPassportNo
                               */
                               public void setCcSupplPassportNo(java.lang.String param){
                            localCcSupplPassportNoTracker = param != null;
                                   
                                            this.localCcSupplPassportNo=param;
                                    

                               }
                            

                        /**
                        * field for CcSupplDateOfBirth
                        */

                        
                                    protected java.lang.String localCcSupplDateOfBirth ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCcSupplDateOfBirthTracker = false ;

                           public boolean isCcSupplDateOfBirthSpecified(){
                               return localCcSupplDateOfBirthTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCcSupplDateOfBirth(){
                               return localCcSupplDateOfBirth;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CcSupplDateOfBirth
                               */
                               public void setCcSupplDateOfBirth(java.lang.String param){
                            localCcSupplDateOfBirthTracker = param != null;
                                   
                                            this.localCcSupplDateOfBirth=param;
                                    

                               }
                            

                        /**
                        * field for CcSupplMaritalStatus
                        */

                        
                                    protected java.lang.String localCcSupplMaritalStatus ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCcSupplMaritalStatusTracker = false ;

                           public boolean isCcSupplMaritalStatusSpecified(){
                               return localCcSupplMaritalStatusTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCcSupplMaritalStatus(){
                               return localCcSupplMaritalStatus;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CcSupplMaritalStatus
                               */
                               public void setCcSupplMaritalStatus(java.lang.String param){
                            localCcSupplMaritalStatusTracker = param != null;
                                   
                                            this.localCcSupplMaritalStatus=param;
                                    

                               }
                            

                        /**
                        * field for De3PersonalRefName
                        */

                        
                                    protected java.lang.String localDe3PersonalRefName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDe3PersonalRefNameTracker = false ;

                           public boolean isDe3PersonalRefNameSpecified(){
                               return localDe3PersonalRefNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDe3PersonalRefName(){
                               return localDe3PersonalRefName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param De3PersonalRefName
                               */
                               public void setDe3PersonalRefName(java.lang.String param){
                            localDe3PersonalRefNameTracker = param != null;
                                   
                                            this.localDe3PersonalRefName=param;
                                    

                               }
                            

                        /**
                        * field for De3PersonalRefMobile
                        */

                        
                                    protected java.lang.String localDe3PersonalRefMobile ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDe3PersonalRefMobileTracker = false ;

                           public boolean isDe3PersonalRefMobileSpecified(){
                               return localDe3PersonalRefMobileTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDe3PersonalRefMobile(){
                               return localDe3PersonalRefMobile;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param De3PersonalRefMobile
                               */
                               public void setDe3PersonalRefMobile(java.lang.String param){
                            localDe3PersonalRefMobileTracker = param != null;
                                   
                                            this.localDe3PersonalRefMobile=param;
                                    

                               }
                            

                        /**
                        * field for De3PersonalRefOfficePhone
                        */

                        
                                    protected java.lang.String localDe3PersonalRefOfficePhone ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDe3PersonalRefOfficePhoneTracker = false ;

                           public boolean isDe3PersonalRefOfficePhoneSpecified(){
                               return localDe3PersonalRefOfficePhoneTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDe3PersonalRefOfficePhone(){
                               return localDe3PersonalRefOfficePhone;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param De3PersonalRefOfficePhone
                               */
                               public void setDe3PersonalRefOfficePhone(java.lang.String param){
                            localDe3PersonalRefOfficePhoneTracker = param != null;
                                   
                                            this.localDe3PersonalRefOfficePhone=param;
                                    

                               }
                            

                        /**
                        * field for De3DateOfSalary
                        */

                        
                                    protected java.lang.String localDe3DateOfSalary ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDe3DateOfSalaryTracker = false ;

                           public boolean isDe3DateOfSalarySpecified(){
                               return localDe3DateOfSalaryTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDe3DateOfSalary(){
                               return localDe3DateOfSalary;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param De3DateOfSalary
                               */
                               public void setDe3DateOfSalary(java.lang.String param){
                            localDe3DateOfSalaryTracker = param != null;
                                   
                                            this.localDe3DateOfSalary=param;
                                    

                               }
                            

                        /**
                        * field for De3MychoiceTouchPoints
                        */

                        
                                    protected java.lang.String localDe3MychoiceTouchPoints ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDe3MychoiceTouchPointsTracker = false ;

                           public boolean isDe3MychoiceTouchPointsSpecified(){
                               return localDe3MychoiceTouchPointsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDe3MychoiceTouchPoints(){
                               return localDe3MychoiceTouchPoints;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param De3MychoiceTouchPoints
                               */
                               public void setDe3MychoiceTouchPoints(java.lang.String param){
                            localDe3MychoiceTouchPointsTracker = param != null;
                                   
                                            this.localDe3MychoiceTouchPoints=param;
                                    

                               }
                            

                        /**
                        * field for PilLoanAmount
                        */

                        
                                    protected java.lang.String localPilLoanAmount ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPilLoanAmountTracker = false ;

                           public boolean isPilLoanAmountSpecified(){
                               return localPilLoanAmountTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPilLoanAmount(){
                               return localPilLoanAmount;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PilLoanAmount
                               */
                               public void setPilLoanAmount(java.lang.String param){
                            localPilLoanAmountTracker = param != null;
                                   
                                            this.localPilLoanAmount=param;
                                    

                               }
                            

                        /**
                        * field for PilAmountRequested
                        */

                        
                                    protected java.lang.String localPilAmountRequested ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPilAmountRequestedTracker = false ;

                           public boolean isPilAmountRequestedSpecified(){
                               return localPilAmountRequestedTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPilAmountRequested(){
                               return localPilAmountRequested;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PilAmountRequested
                               */
                               public void setPilAmountRequested(java.lang.String param){
                            localPilAmountRequestedTracker = param != null;
                                   
                                            this.localPilAmountRequested=param;
                                    

                               }
                            

                        /**
                        * field for PilInterest
                        */

                        
                                    protected java.lang.String localPilInterest ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPilInterestTracker = false ;

                           public boolean isPilInterestSpecified(){
                               return localPilInterestTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPilInterest(){
                               return localPilInterest;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PilInterest
                               */
                               public void setPilInterest(java.lang.String param){
                            localPilInterestTracker = param != null;
                                   
                                            this.localPilInterest=param;
                                    

                               }
                            

                        /**
                        * field for PilTenor
                        */

                        
                                    protected java.lang.String localPilTenor ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPilTenorTracker = false ;

                           public boolean isPilTenorSpecified(){
                               return localPilTenorTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPilTenor(){
                               return localPilTenor;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PilTenor
                               */
                               public void setPilTenor(java.lang.String param){
                            localPilTenorTracker = param != null;
                                   
                                            this.localPilTenor=param;
                                    

                               }
                            

                        /**
                        * field for PilInstallmentAmount
                        */

                        
                                    protected java.lang.String localPilInstallmentAmount ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPilInstallmentAmountTracker = false ;

                           public boolean isPilInstallmentAmountSpecified(){
                               return localPilInstallmentAmountTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPilInstallmentAmount(){
                               return localPilInstallmentAmount;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PilInstallmentAmount
                               */
                               public void setPilInstallmentAmount(java.lang.String param){
                            localPilInstallmentAmountTracker = param != null;
                                   
                                            this.localPilInstallmentAmount=param;
                                    

                               }
                            

                        /**
                        * field for PilProductPurchased
                        */

                        
                                    protected java.lang.String localPilProductPurchased ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPilProductPurchasedTracker = false ;

                           public boolean isPilProductPurchasedSpecified(){
                               return localPilProductPurchasedTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPilProductPurchased(){
                               return localPilProductPurchased;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PilProductPurchased
                               */
                               public void setPilProductPurchased(java.lang.String param){
                            localPilProductPurchasedTracker = param != null;
                                   
                                            this.localPilProductPurchased=param;
                                    

                               }
                            

                        /**
                        * field for PilTotalDbr
                        */

                        
                                    protected java.lang.String localPilTotalDbr ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPilTotalDbrTracker = false ;

                           public boolean isPilTotalDbrSpecified(){
                               return localPilTotalDbrTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPilTotalDbr(){
                               return localPilTotalDbr;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PilTotalDbr
                               */
                               public void setPilTotalDbr(java.lang.String param){
                            localPilTotalDbrTracker = param != null;
                                   
                                            this.localPilTotalDbr=param;
                                    

                               }
                            

                        /**
                        * field for PilSblDocumentCriteria
                        */

                        
                                    protected java.lang.String localPilSblDocumentCriteria ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPilSblDocumentCriteriaTracker = false ;

                           public boolean isPilSblDocumentCriteriaSpecified(){
                               return localPilSblDocumentCriteriaTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPilSblDocumentCriteria(){
                               return localPilSblDocumentCriteria;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PilSblDocumentCriteria
                               */
                               public void setPilSblDocumentCriteria(java.lang.String param){
                            localPilSblDocumentCriteriaTracker = param != null;
                                   
                                            this.localPilSblDocumentCriteria=param;
                                    

                               }
                            

                        /**
                        * field for PilCreditCardLimit
                        */

                        
                                    protected java.lang.String localPilCreditCardLimit ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPilCreditCardLimitTracker = false ;

                           public boolean isPilCreditCardLimitSpecified(){
                               return localPilCreditCardLimitTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPilCreditCardLimit(){
                               return localPilCreditCardLimit;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PilCreditCardLimit
                               */
                               public void setPilCreditCardLimit(java.lang.String param){
                            localPilCreditCardLimitTracker = param != null;
                                   
                                            this.localPilCreditCardLimit=param;
                                    

                               }
                            

                        /**
                        * field for PilL2CApprovedBank
                        */

                        
                                    protected java.lang.String localPilL2CApprovedBank ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPilL2CApprovedBankTracker = false ;

                           public boolean isPilL2CApprovedBankSpecified(){
                               return localPilL2CApprovedBankTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPilL2CApprovedBank(){
                               return localPilL2CApprovedBank;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PilL2CApprovedBank
                               */
                               public void setPilL2CApprovedBank(java.lang.String param){
                            localPilL2CApprovedBankTracker = param != null;
                                   
                                            this.localPilL2CApprovedBank=param;
                                    

                               }
                            

                        /**
                        * field for PilMobileBillAmount
                        */

                        
                                    protected java.lang.String localPilMobileBillAmount ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPilMobileBillAmountTracker = false ;

                           public boolean isPilMobileBillAmountSpecified(){
                               return localPilMobileBillAmountTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPilMobileBillAmount(){
                               return localPilMobileBillAmount;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PilMobileBillAmount
                               */
                               public void setPilMobileBillAmount(java.lang.String param){
                            localPilMobileBillAmountTracker = param != null;
                                   
                                            this.localPilMobileBillAmount=param;
                                    

                               }
                            

                        /**
                        * field for PilDsaCode
                        */

                        
                                    protected java.lang.String localPilDsaCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPilDsaCodeTracker = false ;

                           public boolean isPilDsaCodeSpecified(){
                               return localPilDsaCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPilDsaCode(){
                               return localPilDsaCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PilDsaCode
                               */
                               public void setPilDsaCode(java.lang.String param){
                            localPilDsaCodeTracker = param != null;
                                   
                                            this.localPilDsaCode=param;
                                    

                               }
                            

                        /**
                        * field for PilPrimaryProduct
                        */

                        
                                    protected java.lang.String localPilPrimaryProduct ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPilPrimaryProductTracker = false ;

                           public boolean isPilPrimaryProductSpecified(){
                               return localPilPrimaryProductTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPilPrimaryProduct(){
                               return localPilPrimaryProduct;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PilPrimaryProduct
                               */
                               public void setPilPrimaryProduct(java.lang.String param){
                            localPilPrimaryProductTracker = param != null;
                                   
                                            this.localPilPrimaryProduct=param;
                                    

                               }
                            

                        /**
                        * field for PilSpecialPromoCode
                        */

                        
                                    protected java.lang.String localPilSpecialPromoCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPilSpecialPromoCodeTracker = false ;

                           public boolean isPilSpecialPromoCodeSpecified(){
                               return localPilSpecialPromoCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPilSpecialPromoCode(){
                               return localPilSpecialPromoCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PilSpecialPromoCode
                               */
                               public void setPilSpecialPromoCode(java.lang.String param){
                            localPilSpecialPromoCodeTracker = param != null;
                                   
                                            this.localPilSpecialPromoCode=param;
                                    

                               }
                            

                        /**
                        * field for PilXSellProduct
                        */

                        
                                    protected java.lang.String localPilXSellProduct ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPilXSellProductTracker = false ;

                           public boolean isPilXSellProductSpecified(){
                               return localPilXSellProductTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPilXSellProduct(){
                               return localPilXSellProduct;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PilXSellProduct
                               */
                               public void setPilXSellProduct(java.lang.String param){
                            localPilXSellProductTracker = param != null;
                                   
                                            this.localPilXSellProduct=param;
                                    

                               }
                            

                        /**
                        * field for PilBdmName
                        */

                        
                                    protected java.lang.String localPilBdmName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPilBdmNameTracker = false ;

                           public boolean isPilBdmNameSpecified(){
                               return localPilBdmNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPilBdmName(){
                               return localPilBdmName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PilBdmName
                               */
                               public void setPilBdmName(java.lang.String param){
                            localPilBdmNameTracker = param != null;
                                   
                                            this.localPilBdmName=param;
                                    

                               }
                            

                        /**
                        * field for SourcingCentre
                        */

                        
                                    protected java.lang.String localSourcingCentre ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSourcingCentreTracker = false ;

                           public boolean isSourcingCentreSpecified(){
                               return localSourcingCentreTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSourcingCentre(){
                               return localSourcingCentre;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SourcingCentre
                               */
                               public void setSourcingCentre(java.lang.String param){
                            localSourcingCentreTracker = param != null;
                                   
                                            this.localSourcingCentre=param;
                                    

                               }
                            

                        /**
                        * field for ExtCclibFlag
                        */

                        
                                    protected java.lang.String localExtCclibFlag ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localExtCclibFlagTracker = false ;

                           public boolean isExtCclibFlagSpecified(){
                               return localExtCclibFlagTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getExtCclibFlag(){
                               return localExtCclibFlag;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ExtCclibFlag
                               */
                               public void setExtCclibFlag(java.lang.String param){
                            localExtCclibFlagTracker = param != null;
                                   
                                            this.localExtCclibFlag=param;
                                    

                               }
                            

                        /**
                        * field for ExtCclibAmount
                        */

                        
                                    protected java.lang.String localExtCclibAmount ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localExtCclibAmountTracker = false ;

                           public boolean isExtCclibAmountSpecified(){
                               return localExtCclibAmountTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getExtCclibAmount(){
                               return localExtCclibAmount;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ExtCclibAmount
                               */
                               public void setExtCclibAmount(java.lang.String param){
                            localExtCclibAmountTracker = param != null;
                                   
                                            this.localExtCclibAmount=param;
                                    

                               }
                            

                        /**
                        * field for ExtOdlibFlag
                        */

                        
                                    protected java.lang.String localExtOdlibFlag ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localExtOdlibFlagTracker = false ;

                           public boolean isExtOdlibFlagSpecified(){
                               return localExtOdlibFlagTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getExtOdlibFlag(){
                               return localExtOdlibFlag;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ExtOdlibFlag
                               */
                               public void setExtOdlibFlag(java.lang.String param){
                            localExtOdlibFlagTracker = param != null;
                                   
                                            this.localExtOdlibFlag=param;
                                    

                               }
                            

                        /**
                        * field for ExtOdlibAmount
                        */

                        
                                    protected java.lang.String localExtOdlibAmount ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localExtOdlibAmountTracker = false ;

                           public boolean isExtOdlibAmountSpecified(){
                               return localExtOdlibAmountTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getExtOdlibAmount(){
                               return localExtOdlibAmount;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ExtOdlibAmount
                               */
                               public void setExtOdlibAmount(java.lang.String param){
                            localExtOdlibAmountTracker = param != null;
                                   
                                            this.localExtOdlibAmount=param;
                                    

                               }
                            

                        /**
                        * field for ExtPllibFlag
                        */

                        
                                    protected java.lang.String localExtPllibFlag ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localExtPllibFlagTracker = false ;

                           public boolean isExtPllibFlagSpecified(){
                               return localExtPllibFlagTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getExtPllibFlag(){
                               return localExtPllibFlag;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ExtPllibFlag
                               */
                               public void setExtPllibFlag(java.lang.String param){
                            localExtPllibFlagTracker = param != null;
                                   
                                            this.localExtPllibFlag=param;
                                    

                               }
                            

                        /**
                        * field for ExtPllibAmount
                        */

                        
                                    protected java.lang.String localExtPllibAmount ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localExtPllibAmountTracker = false ;

                           public boolean isExtPllibAmountSpecified(){
                               return localExtPllibAmountTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getExtPllibAmount(){
                               return localExtPllibAmount;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ExtPllibAmount
                               */
                               public void setExtPllibAmount(java.lang.String param){
                            localExtPllibAmountTracker = param != null;
                                   
                                            this.localExtPllibAmount=param;
                                    

                               }
                            

                        /**
                        * field for ExtOllibFlag
                        */

                        
                                    protected java.lang.String localExtOllibFlag ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localExtOllibFlagTracker = false ;

                           public boolean isExtOllibFlagSpecified(){
                               return localExtOllibFlagTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getExtOllibFlag(){
                               return localExtOllibFlag;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ExtOllibFlag
                               */
                               public void setExtOllibFlag(java.lang.String param){
                            localExtOllibFlagTracker = param != null;
                                   
                                            this.localExtOllibFlag=param;
                                    

                               }
                            

                        /**
                        * field for ExtOllibAmount
                        */

                        
                                    protected java.lang.String localExtOllibAmount ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localExtOllibAmountTracker = false ;

                           public boolean isExtOllibAmountSpecified(){
                               return localExtOllibAmountTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getExtOllibAmount(){
                               return localExtOllibAmount;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ExtOllibAmount
                               */
                               public void setExtOllibAmount(java.lang.String param){
                            localExtOllibAmountTracker = param != null;
                                   
                                            this.localExtOllibAmount=param;
                                    

                               }
                            

                        /**
                        * field for CustEmpAddr1
                        */

                        
                                    protected java.lang.String localCustEmpAddr1 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustEmpAddr1Tracker = false ;

                           public boolean isCustEmpAddr1Specified(){
                               return localCustEmpAddr1Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustEmpAddr1(){
                               return localCustEmpAddr1;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustEmpAddr1
                               */
                               public void setCustEmpAddr1(java.lang.String param){
                            localCustEmpAddr1Tracker = param != null;
                                   
                                            this.localCustEmpAddr1=param;
                                    

                               }
                            

                        /**
                        * field for CustEmpAddr2
                        */

                        
                                    protected java.lang.String localCustEmpAddr2 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustEmpAddr2Tracker = false ;

                           public boolean isCustEmpAddr2Specified(){
                               return localCustEmpAddr2Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustEmpAddr2(){
                               return localCustEmpAddr2;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustEmpAddr2
                               */
                               public void setCustEmpAddr2(java.lang.String param){
                            localCustEmpAddr2Tracker = param != null;
                                   
                                            this.localCustEmpAddr2=param;
                                    

                               }
                            

                        /**
                        * field for CustEmpAddr3
                        */

                        
                                    protected java.lang.String localCustEmpAddr3 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustEmpAddr3Tracker = false ;

                           public boolean isCustEmpAddr3Specified(){
                               return localCustEmpAddr3Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustEmpAddr3(){
                               return localCustEmpAddr3;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustEmpAddr3
                               */
                               public void setCustEmpAddr3(java.lang.String param){
                            localCustEmpAddr3Tracker = param != null;
                                   
                                            this.localCustEmpAddr3=param;
                                    

                               }
                            

                        /**
                        * field for CustEmpAddrcity
                        */

                        
                                    protected java.lang.String localCustEmpAddrcity ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustEmpAddrcityTracker = false ;

                           public boolean isCustEmpAddrcitySpecified(){
                               return localCustEmpAddrcityTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustEmpAddrcity(){
                               return localCustEmpAddrcity;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustEmpAddrcity
                               */
                               public void setCustEmpAddrcity(java.lang.String param){
                            localCustEmpAddrcityTracker = param != null;
                                   
                                            this.localCustEmpAddrcity=param;
                                    

                               }
                            

                        /**
                        * field for CustEmpAddrzip
                        */

                        
                                    protected java.lang.String localCustEmpAddrzip ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustEmpAddrzipTracker = false ;

                           public boolean isCustEmpAddrzipSpecified(){
                               return localCustEmpAddrzipTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustEmpAddrzip(){
                               return localCustEmpAddrzip;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustEmpAddrzip
                               */
                               public void setCustEmpAddrzip(java.lang.String param){
                            localCustEmpAddrzipTracker = param != null;
                                   
                                            this.localCustEmpAddrzip=param;
                                    

                               }
                            

                        /**
                        * field for CustEmpAddrstate
                        */

                        
                                    protected java.lang.String localCustEmpAddrstate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustEmpAddrstateTracker = false ;

                           public boolean isCustEmpAddrstateSpecified(){
                               return localCustEmpAddrstateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustEmpAddrstate(){
                               return localCustEmpAddrstate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustEmpAddrstate
                               */
                               public void setCustEmpAddrstate(java.lang.String param){
                            localCustEmpAddrstateTracker = param != null;
                                   
                                            this.localCustEmpAddrstate=param;
                                    

                               }
                            

                        /**
                        * field for CustEmpAddrcntry
                        */

                        
                                    protected java.lang.String localCustEmpAddrcntry ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustEmpAddrcntryTracker = false ;

                           public boolean isCustEmpAddrcntrySpecified(){
                               return localCustEmpAddrcntryTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustEmpAddrcntry(){
                               return localCustEmpAddrcntry;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustEmpAddrcntry
                               */
                               public void setCustEmpAddrcntry(java.lang.String param){
                            localCustEmpAddrcntryTracker = param != null;
                                   
                                            this.localCustEmpAddrcntry=param;
                                    

                               }
                            

                        /**
                        * field for CustHomecntryPhone
                        */

                        
                                    protected java.lang.String localCustHomecntryPhone ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustHomecntryPhoneTracker = false ;

                           public boolean isCustHomecntryPhoneSpecified(){
                               return localCustHomecntryPhoneTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustHomecntryPhone(){
                               return localCustHomecntryPhone;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustHomecntryPhone
                               */
                               public void setCustHomecntryPhone(java.lang.String param){
                            localCustHomecntryPhoneTracker = param != null;
                                   
                                            this.localCustHomecntryPhone=param;
                                    

                               }
                            

                        /**
                        * field for CustEmpEmirate
                        */

                        
                                    protected java.lang.String localCustEmpEmirate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustEmpEmirateTracker = false ;

                           public boolean isCustEmpEmirateSpecified(){
                               return localCustEmpEmirateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustEmpEmirate(){
                               return localCustEmpEmirate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustEmpEmirate
                               */
                               public void setCustEmpEmirate(java.lang.String param){
                            localCustEmpEmirateTracker = param != null;
                                   
                                            this.localCustEmpEmirate=param;
                                    

                               }
                            

                        /**
                        * field for ApplSubmissionDate
                        */

                        
                                    protected java.lang.String localApplSubmissionDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localApplSubmissionDateTracker = false ;

                           public boolean isApplSubmissionDateSpecified(){
                               return localApplSubmissionDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getApplSubmissionDate(){
                               return localApplSubmissionDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ApplSubmissionDate
                               */
                               public void setApplSubmissionDate(java.lang.String param){
                            localApplSubmissionDateTracker = param != null;
                                   
                                            this.localApplSubmissionDate=param;
                                    

                               }
                            

                        /**
                        * field for ExcellencyFlag
                        */

                        
                                    protected java.lang.String localExcellencyFlag ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localExcellencyFlagTracker = false ;

                           public boolean isExcellencyFlagSpecified(){
                               return localExcellencyFlagTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getExcellencyFlag(){
                               return localExcellencyFlag;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ExcellencyFlag
                               */
                               public void setExcellencyFlag(java.lang.String param){
                            localExcellencyFlagTracker = param != null;
                                   
                                            this.localExcellencyFlag=param;
                                    

                               }
                            

                        /**
                        * field for DsaRemarks
                        */

                        
                                    protected java.lang.String localDsaRemarks ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDsaRemarksTracker = false ;

                           public boolean isDsaRemarksSpecified(){
                               return localDsaRemarksTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDsaRemarks(){
                               return localDsaRemarks;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DsaRemarks
                               */
                               public void setDsaRemarks(java.lang.String param){
                            localDsaRemarksTracker = param != null;
                                   
                                            this.localDsaRemarks=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":LAPSAppDetails_type1",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "LAPSAppDetails_type1",
                           xmlWriter);
                   }

               
                   }
                if (localChannelIdTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "channelId", xmlWriter);
                             

                                          if (localChannelId==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("channelId cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localChannelId);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCollectOrDeliverTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "collectOrDeliver", xmlWriter);
                             

                                          if (localCollectOrDeliver==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("collectOrDeliver cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCollectOrDeliver);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustVisaTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custVisa", xmlWriter);
                             

                                          if (localCustVisa==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custVisa cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustVisa);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustPassportExpiryTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custPassportExpiry", xmlWriter);
                             

                                          if (localCustPassportExpiry==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custPassportExpiry cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustPassportExpiry);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustDependentTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custDependent", xmlWriter);
                             

                                          if (localCustDependent==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custDependent cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustDependent);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEmpSeqcodeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "empSeqcode", xmlWriter);
                             

                                          if (localEmpSeqcode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("empSeqcode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEmpSeqcode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustMailaddrFlagTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custMailaddrFlag", xmlWriter);
                             

                                          if (localCustMailaddrFlag==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custMailaddrFlag cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustMailaddrFlag);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLodgementRefnoTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "lodgementRefno", xmlWriter);
                             

                                          if (localLodgementRefno==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("lodgementRefno cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLodgementRefno);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCcPreApprovedFlagTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ccPreApprovedFlag", xmlWriter);
                             

                                          if (localCcPreApprovedFlag==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ccPreApprovedFlag cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCcPreApprovedFlag);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustExistingFlagTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custExistingFlag", xmlWriter);
                             

                                          if (localCustExistingFlag==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custExistingFlag cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustExistingFlag);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localProductTypeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "productType", xmlWriter);
                             

                                          if (localProductType==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("productType cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localProductType);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localProductCodeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "productCode", xmlWriter);
                             

                                          if (localProductCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("productCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localProductCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustIdTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custId", xmlWriter);
                             

                                          if (localCustId==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custId cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustId);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustTitleTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custTitle", xmlWriter);
                             

                                          if (localCustTitle==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custTitle cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustTitle);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustNameTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custName", xmlWriter);
                             

                                          if (localCustName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustCategoryTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custCategory", xmlWriter);
                             

                                          if (localCustCategory==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custCategory cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustCategory);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustShortNameTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custShortName", xmlWriter);
                             

                                          if (localCustShortName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custShortName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustShortName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustDobTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custDob", xmlWriter);
                             

                                          if (localCustDob==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custDob cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustDob);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustMotherNameTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custMotherName", xmlWriter);
                             

                                          if (localCustMotherName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custMotherName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustMotherName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustBankStaffTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custBankStaff", xmlWriter);
                             

                                          if (localCustBankStaff==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custBankStaff cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustBankStaff);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustMaritalStatusTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custMaritalStatus", xmlWriter);
                             

                                          if (localCustMaritalStatus==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custMaritalStatus cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustMaritalStatus);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustBankingWithusTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custBankingWithus", xmlWriter);
                             

                                          if (localCustBankingWithus==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custBankingWithus cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustBankingWithus);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustLocationTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custLocation", xmlWriter);
                             

                                          if (localCustLocation==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custLocation cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustLocation);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustEduQualificationTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custEduQualification", xmlWriter);
                             

                                          if (localCustEduQualification==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custEduQualification cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustEduQualification);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustEmirateTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custEmirate", xmlWriter);
                             

                                          if (localCustEmirate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custEmirate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustEmirate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustProfessionTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custProfession", xmlWriter);
                             

                                          if (localCustProfession==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custProfession cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustProfession);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustNationalityTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custNationality", xmlWriter);
                             

                                          if (localCustNationality==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custNationality cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustNationality);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustMobileTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custMobile", xmlWriter);
                             

                                          if (localCustMobile==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custMobile cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustMobile);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustSubSegTypeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custSubSegType", xmlWriter);
                             

                                          if (localCustSubSegType==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custSubSegType cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustSubSegType);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustHomePhoneTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custHomePhone", xmlWriter);
                             

                                          if (localCustHomePhone==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custHomePhone cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustHomePhone);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustUnsecuredExposureTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custUnsecuredExposure", xmlWriter);
                             

                                          if (localCustUnsecuredExposure==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custUnsecuredExposure cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustUnsecuredExposure);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustPoBoxNoTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custPoBoxNo", xmlWriter);
                             

                                          if (localCustPoBoxNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custPoBoxNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustPoBoxNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustPresentCountryTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custPresentCountry", xmlWriter);
                             

                                          if (localCustPresentCountry==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custPresentCountry cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustPresentCountry);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustRelationshipValueTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custRelationshipValue", xmlWriter);
                             

                                          if (localCustRelationshipValue==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custRelationshipValue cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustRelationshipValue);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustVisaExpiryDateTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custVisaExpiryDate", xmlWriter);
                             

                                          if (localCustVisaExpiryDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custVisaExpiryDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustVisaExpiryDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustCreditShieldTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custCreditShield", xmlWriter);
                             

                                          if (localCustCreditShield==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custCreditShield cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustCreditShield);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEmplTypeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "emplType", xmlWriter);
                             

                                          if (localEmplType==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("emplType cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEmplType);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEmplDesignationTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "emplDesignation", xmlWriter);
                             

                                          if (localEmplDesignation==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("emplDesignation cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEmplDesignation);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEmplNameTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "emplName", xmlWriter);
                             

                                          if (localEmplName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("emplName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEmplName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEmplEmploymentTypeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "emplEmploymentType", xmlWriter);
                             

                                          if (localEmplEmploymentType==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("emplEmploymentType cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEmplEmploymentType);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEmplEmiratesTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "emplEmirates", xmlWriter);
                             

                                          if (localEmplEmirates==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("emplEmirates cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEmplEmirates);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEmplCategoryTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "emplCategory", xmlWriter);
                             

                                          if (localEmplCategory==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("emplCategory cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEmplCategory);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEmplCpvWaivedTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "emplCpvWaived", xmlWriter);
                             

                                          if (localEmplCpvWaived==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("emplCpvWaived cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEmplCpvWaived);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEmplGrossIncomeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "emplGrossIncome", xmlWriter);
                             

                                          if (localEmplGrossIncome==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("emplGrossIncome cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEmplGrossIncome);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEmplStaffIdTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "emplStaffId", xmlWriter);
                             

                                          if (localEmplStaffId==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("emplStaffId cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEmplStaffId);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEmplDateOfJoiningTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "emplDateOfJoining", xmlWriter);
                             

                                          if (localEmplDateOfJoining==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("emplDateOfJoining cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEmplDateOfJoining);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEmplTmlFlagTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "emplTmlFlag", xmlWriter);
                             

                                          if (localEmplTmlFlag==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("emplTmlFlag cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEmplTmlFlag);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEmplIndustryClassTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "emplIndustryClass", xmlWriter);
                             

                                          if (localEmplIndustryClass==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("emplIndustryClass cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEmplIndustryClass);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEmplFixedIncomeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "emplFixedIncome", xmlWriter);
                             

                                          if (localEmplFixedIncome==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("emplFixedIncome cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEmplFixedIncome);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEmplSalaryCreditsTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "emplSalaryCredits", xmlWriter);
                             

                                          if (localEmplSalaryCredits==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("emplSalaryCredits cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEmplSalaryCredits);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEmplJobConfirmationTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "emplJobConfirmation", xmlWriter);
                             

                                          if (localEmplJobConfirmation==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("emplJobConfirmation cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEmplJobConfirmation);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEmplCompletedServicesTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "emplCompletedServices", xmlWriter);
                             

                                          if (localEmplCompletedServices==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("emplCompletedServices cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEmplCompletedServices);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEmplAvgMobileBillTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "emplAvgMobileBill", xmlWriter);
                             

                                          if (localEmplAvgMobileBill==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("emplAvgMobileBill cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEmplAvgMobileBill);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEmplAverageIncomeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "emplAverageIncome", xmlWriter);
                             

                                          if (localEmplAverageIncome==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("emplAverageIncome cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEmplAverageIncome);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEmplChequeReturnsTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "emplChequeReturns", xmlWriter);
                             

                                          if (localEmplChequeReturns==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("emplChequeReturns cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEmplChequeReturns);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEmplSelfEmpCategoryTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "emplSelfEmpCategory", xmlWriter);
                             

                                          if (localEmplSelfEmpCategory==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("emplSelfEmpCategory cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEmplSelfEmpCategory);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEmplLengthOfBusinessTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "emplLengthOfBusiness", xmlWriter);
                             

                                          if (localEmplLengthOfBusiness==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("emplLengthOfBusiness cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEmplLengthOfBusiness);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEmplNatureBusinessTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "emplNatureBusiness", xmlWriter);
                             

                                          if (localEmplNatureBusiness==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("emplNatureBusiness cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEmplNatureBusiness);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCcEtihadGuestTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ccEtihadGuest", xmlWriter);
                             

                                          if (localCcEtihadGuest==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ccEtihadGuest cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCcEtihadGuest);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCcEtihadGuestNoTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ccEtihadGuestNo", xmlWriter);
                             

                                          if (localCcEtihadGuestNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ccEtihadGuestNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCcEtihadGuestNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCcCreditLimitTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ccCreditLimit", xmlWriter);
                             

                                          if (localCcCreditLimit==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ccCreditLimit cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCcCreditLimit);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCcPromoValueTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ccPromoValue", xmlWriter);
                             

                                          if (localCcPromoValue==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ccPromoValue cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCcPromoValue);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCcDsaCodeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ccDsaCode", xmlWriter);
                             

                                          if (localCcDsaCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ccDsaCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCcDsaCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCcApplnRefNoTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ccApplnRefNo", xmlWriter);
                             

                                          if (localCcApplnRefNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ccApplnRefNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCcApplnRefNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCcPrimEmbossNameTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ccPrimEmbossName", xmlWriter);
                             

                                          if (localCcPrimEmbossName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ccPrimEmbossName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCcPrimEmbossName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCcStandingInstructionTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ccStandingInstruction", xmlWriter);
                             

                                          if (localCcStandingInstruction==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ccStandingInstruction cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCcStandingInstruction);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCcAdcbAccntNoTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ccAdcbAccntNo", xmlWriter);
                             

                                          if (localCcAdcbAccntNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ccAdcbAccntNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCcAdcbAccntNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCcAutoDebitPercentTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ccAutoDebitPercent", xmlWriter);
                             

                                          if (localCcAutoDebitPercent==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ccAutoDebitPercent cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCcAutoDebitPercent);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCcFirstLevelPromoCodeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ccFirstLevelPromoCode", xmlWriter);
                             

                                          if (localCcFirstLevelPromoCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ccFirstLevelPromoCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCcFirstLevelPromoCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCcSecondLevelPromoCodeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ccSecondLevelPromoCode", xmlWriter);
                             

                                          if (localCcSecondLevelPromoCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ccSecondLevelPromoCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCcSecondLevelPromoCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCcCreditLimitIncreaseTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ccCreditLimitIncrease", xmlWriter);
                             

                                          if (localCcCreditLimitIncrease==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ccCreditLimitIncrease cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCcCreditLimitIncrease);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCcC2CBankNameTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ccC2cBankName", xmlWriter);
                             

                                          if (localCcC2CBankName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ccC2cBankName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCcC2CBankName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCcCreditCardUtilizationTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ccCreditCardUtilization", xmlWriter);
                             

                                          if (localCcCreditCardUtilization==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ccCreditCardUtilization cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCcCreditCardUtilization);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCcLoanOnCardsTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ccLoanOnCards", xmlWriter);
                             

                                          if (localCcLoanOnCards==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ccLoanOnCards cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCcLoanOnCards);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCcEmirateSourceCodeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ccEmirateSourceCode", xmlWriter);
                             

                                          if (localCcEmirateSourceCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ccEmirateSourceCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCcEmirateSourceCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCcSalaryTransferAdcbTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ccSalaryTransferAdcb", xmlWriter);
                             

                                          if (localCcSalaryTransferAdcb==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ccSalaryTransferAdcb cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCcSalaryTransferAdcb);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCcStatementCycleTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ccStatementCycle", xmlWriter);
                             

                                          if (localCcStatementCycle==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ccStatementCycle cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCcStatementCycle);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCcOnlineDebitPayTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ccOnlineDebitPay", xmlWriter);
                             

                                          if (localCcOnlineDebitPay==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ccOnlineDebitPay cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCcOnlineDebitPay);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCcTotalDbrTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ccTotalDbr", xmlWriter);
                             

                                          if (localCcTotalDbr==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ccTotalDbr cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCcTotalDbr);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustGenderTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custGender", xmlWriter);
                             

                                          if (localCustGender==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custGender cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustGender);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustPassportNoTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custPassportNo", xmlWriter);
                             

                                          if (localCustPassportNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custPassportNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustPassportNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustEmiratesIdTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custEmiratesId", xmlWriter);
                             

                                          if (localCustEmiratesId==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custEmiratesId cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustEmiratesId);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustResiPhoneTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custResiPhone", xmlWriter);
                             

                                          if (localCustResiPhone==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custResiPhone cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustResiPhone);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustResiAddress1Tracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custResiAddress1", xmlWriter);
                             

                                          if (localCustResiAddress1==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custResiAddress1 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustResiAddress1);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustResiAddress2Tracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custResiAddress2", xmlWriter);
                             

                                          if (localCustResiAddress2==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custResiAddress2 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustResiAddress2);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustResiAddress3Tracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custResiAddress3", xmlWriter);
                             

                                          if (localCustResiAddress3==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custResiAddress3 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustResiAddress3);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustResiEmirateTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custResiEmirate", xmlWriter);
                             

                                          if (localCustResiEmirate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custResiEmirate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustResiEmirate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustResiCityTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custResiCity", xmlWriter);
                             

                                          if (localCustResiCity==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custResiCity cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustResiCity);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustResiCountryTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custResiCountry", xmlWriter);
                             

                                          if (localCustResiCountry==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custResiCountry cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustResiCountry);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustResiPoboxNoTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custResiPoboxNo", xmlWriter);
                             

                                          if (localCustResiPoboxNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custResiPoboxNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustResiPoboxNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCcThirdLevelPromoCodeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ccThirdLevelPromoCode", xmlWriter);
                             

                                          if (localCcThirdLevelPromoCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ccThirdLevelPromoCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCcThirdLevelPromoCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCcCreditShieldTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ccCreditShield", xmlWriter);
                             

                                          if (localCcCreditShield==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ccCreditShield cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCcCreditShield);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCcFileLocationTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ccFileLocation", xmlWriter);
                             

                                          if (localCcFileLocation==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ccFileLocation cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCcFileLocation);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCcPrintStatementTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ccPrintStatement", xmlWriter);
                             

                                          if (localCcPrintStatement==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ccPrintStatement cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCcPrintStatement);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustEmailTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custEmail", xmlWriter);
                             

                                          if (localCustEmail==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custEmail cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustEmail);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustNetIncomeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custNetIncome", xmlWriter);
                             

                                          if (localCustNetIncome==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custNetIncome cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustNetIncome);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEmplPhoneNoTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "emplPhoneNo", xmlWriter);
                             

                                          if (localEmplPhoneNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("emplPhoneNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEmplPhoneNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustHomeAddress1Tracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custHomeAddress1", xmlWriter);
                             

                                          if (localCustHomeAddress1==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custHomeAddress1 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustHomeAddress1);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustHomeAddress2Tracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custHomeAddress2", xmlWriter);
                             

                                          if (localCustHomeAddress2==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custHomeAddress2 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustHomeAddress2);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustHomeAddress3Tracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custHomeAddress3", xmlWriter);
                             

                                          if (localCustHomeAddress3==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custHomeAddress3 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustHomeAddress3);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustHomeZipTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custHomeZip", xmlWriter);
                             

                                          if (localCustHomeZip==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custHomeZip cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustHomeZip);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustHomeCityTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custHomeCity", xmlWriter);
                             

                                          if (localCustHomeCity==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custHomeCity cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustHomeCity);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustHomeCountryTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custHomeCountry", xmlWriter);
                             

                                          if (localCustHomeCountry==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custHomeCountry cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustHomeCountry);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustHomeStateTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custHomeState", xmlWriter);
                             

                                          if (localCustHomeState==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custHomeState cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustHomeState);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustState2Tracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custState2", xmlWriter);
                             

                                          if (localCustState2==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custState2 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustState2);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCcSupplLimitPercentageTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ccSupplLimitPercentage", xmlWriter);
                             

                                          if (localCcSupplLimitPercentage==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ccSupplLimitPercentage cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCcSupplLimitPercentage);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCcBranchCodeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ccBranchCode", xmlWriter);
                             

                                          if (localCcBranchCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ccBranchCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCcBranchCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCcEStatementTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ccEStatement", xmlWriter);
                             

                                          if (localCcEStatement==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ccEStatement cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCcEStatement);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCcEcbEmiTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ccEcbEmi", xmlWriter);
                             

                                          if (localCcEcbEmi==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ccEcbEmi cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCcEcbEmi);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCcEcbUnsecuredExpostureTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ccEcbUnsecuredExposture", xmlWriter);
                             

                                          if (localCcEcbUnsecuredExposture==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ccEcbUnsecuredExposture cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCcEcbUnsecuredExposture);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCcMaxBucketTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ccMaxBucket", xmlWriter);
                             

                                          if (localCcMaxBucket==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ccMaxBucket cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCcMaxBucket);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCcCurrentBucketTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ccCurrentBucket", xmlWriter);
                             

                                          if (localCcCurrentBucket==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ccCurrentBucket cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCcCurrentBucket);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCcSupplNameTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ccSupplName", xmlWriter);
                             

                                          if (localCcSupplName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ccSupplName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCcSupplName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCcSupplTitleTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ccSupplTitle", xmlWriter);
                             

                                          if (localCcSupplTitle==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ccSupplTitle cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCcSupplTitle);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCcSupplEmbossingNameTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ccSupplEmbossingName", xmlWriter);
                             

                                          if (localCcSupplEmbossingName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ccSupplEmbossingName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCcSupplEmbossingName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCcSupplRelationshipTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ccSupplRelationship", xmlWriter);
                             

                                          if (localCcSupplRelationship==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ccSupplRelationship cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCcSupplRelationship);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCcSupplNationlityTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ccSupplNationlity", xmlWriter);
                             

                                          if (localCcSupplNationlity==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ccSupplNationlity cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCcSupplNationlity);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCcSupplPassportNoTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ccSupplPassportNo", xmlWriter);
                             

                                          if (localCcSupplPassportNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ccSupplPassportNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCcSupplPassportNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCcSupplDateOfBirthTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ccSupplDateOfBirth", xmlWriter);
                             

                                          if (localCcSupplDateOfBirth==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ccSupplDateOfBirth cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCcSupplDateOfBirth);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCcSupplMaritalStatusTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ccSupplMaritalStatus", xmlWriter);
                             

                                          if (localCcSupplMaritalStatus==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ccSupplMaritalStatus cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCcSupplMaritalStatus);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDe3PersonalRefNameTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "de3PersonalRefName", xmlWriter);
                             

                                          if (localDe3PersonalRefName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("de3PersonalRefName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDe3PersonalRefName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDe3PersonalRefMobileTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "de3PersonalRefMobile", xmlWriter);
                             

                                          if (localDe3PersonalRefMobile==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("de3PersonalRefMobile cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDe3PersonalRefMobile);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDe3PersonalRefOfficePhoneTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "de3PersonalRefOfficePhone", xmlWriter);
                             

                                          if (localDe3PersonalRefOfficePhone==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("de3PersonalRefOfficePhone cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDe3PersonalRefOfficePhone);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDe3DateOfSalaryTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "de3DateOfSalary", xmlWriter);
                             

                                          if (localDe3DateOfSalary==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("de3DateOfSalary cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDe3DateOfSalary);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDe3MychoiceTouchPointsTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "de3MychoiceTouchPoints", xmlWriter);
                             

                                          if (localDe3MychoiceTouchPoints==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("de3MychoiceTouchPoints cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDe3MychoiceTouchPoints);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPilLoanAmountTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "pilLoanAmount", xmlWriter);
                             

                                          if (localPilLoanAmount==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("pilLoanAmount cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPilLoanAmount);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPilAmountRequestedTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "pilAmountRequested", xmlWriter);
                             

                                          if (localPilAmountRequested==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("pilAmountRequested cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPilAmountRequested);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPilInterestTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "pilInterest", xmlWriter);
                             

                                          if (localPilInterest==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("pilInterest cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPilInterest);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPilTenorTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "pilTenor", xmlWriter);
                             

                                          if (localPilTenor==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("pilTenor cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPilTenor);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPilInstallmentAmountTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "pilInstallmentAmount", xmlWriter);
                             

                                          if (localPilInstallmentAmount==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("pilInstallmentAmount cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPilInstallmentAmount);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPilProductPurchasedTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "pilProductPurchased", xmlWriter);
                             

                                          if (localPilProductPurchased==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("pilProductPurchased cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPilProductPurchased);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPilTotalDbrTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "pilTotalDbr", xmlWriter);
                             

                                          if (localPilTotalDbr==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("pilTotalDbr cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPilTotalDbr);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPilSblDocumentCriteriaTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "pilSblDocumentCriteria", xmlWriter);
                             

                                          if (localPilSblDocumentCriteria==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("pilSblDocumentCriteria cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPilSblDocumentCriteria);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPilCreditCardLimitTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "pilCreditCardLimit", xmlWriter);
                             

                                          if (localPilCreditCardLimit==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("pilCreditCardLimit cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPilCreditCardLimit);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPilL2CApprovedBankTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "pilL2cApprovedBank", xmlWriter);
                             

                                          if (localPilL2CApprovedBank==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("pilL2cApprovedBank cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPilL2CApprovedBank);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPilMobileBillAmountTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "pilMobileBillAmount", xmlWriter);
                             

                                          if (localPilMobileBillAmount==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("pilMobileBillAmount cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPilMobileBillAmount);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPilDsaCodeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "pilDsaCode", xmlWriter);
                             

                                          if (localPilDsaCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("pilDsaCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPilDsaCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPilPrimaryProductTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "pilPrimaryProduct", xmlWriter);
                             

                                          if (localPilPrimaryProduct==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("pilPrimaryProduct cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPilPrimaryProduct);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPilSpecialPromoCodeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "pilSpecialPromoCode", xmlWriter);
                             

                                          if (localPilSpecialPromoCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("pilSpecialPromoCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPilSpecialPromoCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPilXSellProductTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "pilXSellProduct", xmlWriter);
                             

                                          if (localPilXSellProduct==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("pilXSellProduct cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPilXSellProduct);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPilBdmNameTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "pilBdmName", xmlWriter);
                             

                                          if (localPilBdmName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("pilBdmName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPilBdmName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSourcingCentreTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "sourcingCentre", xmlWriter);
                             

                                          if (localSourcingCentre==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sourcingCentre cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSourcingCentre);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localExtCclibFlagTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "extCclibFlag", xmlWriter);
                             

                                          if (localExtCclibFlag==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("extCclibFlag cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localExtCclibFlag);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localExtCclibAmountTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "extCclibAmount", xmlWriter);
                             

                                          if (localExtCclibAmount==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("extCclibAmount cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localExtCclibAmount);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localExtOdlibFlagTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "extOdlibFlag", xmlWriter);
                             

                                          if (localExtOdlibFlag==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("extOdlibFlag cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localExtOdlibFlag);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localExtOdlibAmountTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "extOdlibAmount", xmlWriter);
                             

                                          if (localExtOdlibAmount==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("extOdlibAmount cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localExtOdlibAmount);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localExtPllibFlagTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "extPllibFlag", xmlWriter);
                             

                                          if (localExtPllibFlag==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("extPllibFlag cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localExtPllibFlag);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localExtPllibAmountTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "extPllibAmount", xmlWriter);
                             

                                          if (localExtPllibAmount==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("extPllibAmount cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localExtPllibAmount);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localExtOllibFlagTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "extOllibFlag", xmlWriter);
                             

                                          if (localExtOllibFlag==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("extOllibFlag cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localExtOllibFlag);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localExtOllibAmountTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "extOllibAmount", xmlWriter);
                             

                                          if (localExtOllibAmount==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("extOllibAmount cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localExtOllibAmount);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustEmpAddr1Tracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custEmpAddr1", xmlWriter);
                             

                                          if (localCustEmpAddr1==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custEmpAddr1 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustEmpAddr1);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustEmpAddr2Tracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custEmpAddr2", xmlWriter);
                             

                                          if (localCustEmpAddr2==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custEmpAddr2 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustEmpAddr2);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustEmpAddr3Tracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custEmpAddr3", xmlWriter);
                             

                                          if (localCustEmpAddr3==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custEmpAddr3 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustEmpAddr3);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustEmpAddrcityTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custEmpAddrcity", xmlWriter);
                             

                                          if (localCustEmpAddrcity==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custEmpAddrcity cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustEmpAddrcity);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustEmpAddrzipTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custEmpAddrzip", xmlWriter);
                             

                                          if (localCustEmpAddrzip==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custEmpAddrzip cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustEmpAddrzip);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustEmpAddrstateTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custEmpAddrstate", xmlWriter);
                             

                                          if (localCustEmpAddrstate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custEmpAddrstate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustEmpAddrstate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustEmpAddrcntryTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custEmpAddrcntry", xmlWriter);
                             

                                          if (localCustEmpAddrcntry==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custEmpAddrcntry cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustEmpAddrcntry);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustHomecntryPhoneTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custHomecntryPhone", xmlWriter);
                             

                                          if (localCustHomecntryPhone==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custHomecntryPhone cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustHomecntryPhone);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustEmpEmirateTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custEmpEmirate", xmlWriter);
                             

                                          if (localCustEmpEmirate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custEmpEmirate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustEmpEmirate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localApplSubmissionDateTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "applSubmissionDate", xmlWriter);
                             

                                          if (localApplSubmissionDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("applSubmissionDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localApplSubmissionDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localExcellencyFlagTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "excellencyFlag", xmlWriter);
                             

                                          if (localExcellencyFlag==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("excellencyFlag cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localExcellencyFlag);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDsaRemarksTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "dsaRemarks", xmlWriter);
                             

                                          if (localDsaRemarks==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("dsaRemarks cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDsaRemarks);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localChannelIdTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "channelId"));
                                 
                                        if (localChannelId != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localChannelId));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("channelId cannot be null!!");
                                        }
                                    } if (localCollectOrDeliverTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "collectOrDeliver"));
                                 
                                        if (localCollectOrDeliver != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCollectOrDeliver));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("collectOrDeliver cannot be null!!");
                                        }
                                    } if (localCustVisaTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custVisa"));
                                 
                                        if (localCustVisa != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustVisa));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custVisa cannot be null!!");
                                        }
                                    } if (localCustPassportExpiryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custPassportExpiry"));
                                 
                                        if (localCustPassportExpiry != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustPassportExpiry));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custPassportExpiry cannot be null!!");
                                        }
                                    } if (localCustDependentTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custDependent"));
                                 
                                        if (localCustDependent != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustDependent));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custDependent cannot be null!!");
                                        }
                                    } if (localEmpSeqcodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "empSeqcode"));
                                 
                                        if (localEmpSeqcode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmpSeqcode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("empSeqcode cannot be null!!");
                                        }
                                    } if (localCustMailaddrFlagTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custMailaddrFlag"));
                                 
                                        if (localCustMailaddrFlag != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustMailaddrFlag));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custMailaddrFlag cannot be null!!");
                                        }
                                    } if (localLodgementRefnoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "lodgementRefno"));
                                 
                                        if (localLodgementRefno != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLodgementRefno));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("lodgementRefno cannot be null!!");
                                        }
                                    } if (localCcPreApprovedFlagTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ccPreApprovedFlag"));
                                 
                                        if (localCcPreApprovedFlag != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCcPreApprovedFlag));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ccPreApprovedFlag cannot be null!!");
                                        }
                                    } if (localCustExistingFlagTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custExistingFlag"));
                                 
                                        if (localCustExistingFlag != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustExistingFlag));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custExistingFlag cannot be null!!");
                                        }
                                    } if (localProductTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "productType"));
                                 
                                        if (localProductType != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localProductType));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("productType cannot be null!!");
                                        }
                                    } if (localProductCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "productCode"));
                                 
                                        if (localProductCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localProductCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("productCode cannot be null!!");
                                        }
                                    } if (localCustIdTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custId"));
                                 
                                        if (localCustId != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustId));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custId cannot be null!!");
                                        }
                                    } if (localCustTitleTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custTitle"));
                                 
                                        if (localCustTitle != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustTitle));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custTitle cannot be null!!");
                                        }
                                    } if (localCustNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custName"));
                                 
                                        if (localCustName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custName cannot be null!!");
                                        }
                                    } if (localCustCategoryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custCategory"));
                                 
                                        if (localCustCategory != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustCategory));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custCategory cannot be null!!");
                                        }
                                    } if (localCustShortNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custShortName"));
                                 
                                        if (localCustShortName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustShortName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custShortName cannot be null!!");
                                        }
                                    } if (localCustDobTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custDob"));
                                 
                                        if (localCustDob != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustDob));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custDob cannot be null!!");
                                        }
                                    } if (localCustMotherNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custMotherName"));
                                 
                                        if (localCustMotherName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustMotherName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custMotherName cannot be null!!");
                                        }
                                    } if (localCustBankStaffTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custBankStaff"));
                                 
                                        if (localCustBankStaff != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustBankStaff));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custBankStaff cannot be null!!");
                                        }
                                    } if (localCustMaritalStatusTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custMaritalStatus"));
                                 
                                        if (localCustMaritalStatus != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustMaritalStatus));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custMaritalStatus cannot be null!!");
                                        }
                                    } if (localCustBankingWithusTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custBankingWithus"));
                                 
                                        if (localCustBankingWithus != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustBankingWithus));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custBankingWithus cannot be null!!");
                                        }
                                    } if (localCustLocationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custLocation"));
                                 
                                        if (localCustLocation != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustLocation));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custLocation cannot be null!!");
                                        }
                                    } if (localCustEduQualificationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custEduQualification"));
                                 
                                        if (localCustEduQualification != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustEduQualification));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custEduQualification cannot be null!!");
                                        }
                                    } if (localCustEmirateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custEmirate"));
                                 
                                        if (localCustEmirate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustEmirate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custEmirate cannot be null!!");
                                        }
                                    } if (localCustProfessionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custProfession"));
                                 
                                        if (localCustProfession != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustProfession));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custProfession cannot be null!!");
                                        }
                                    } if (localCustNationalityTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custNationality"));
                                 
                                        if (localCustNationality != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustNationality));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custNationality cannot be null!!");
                                        }
                                    } if (localCustMobileTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custMobile"));
                                 
                                        if (localCustMobile != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustMobile));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custMobile cannot be null!!");
                                        }
                                    } if (localCustSubSegTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custSubSegType"));
                                 
                                        if (localCustSubSegType != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustSubSegType));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custSubSegType cannot be null!!");
                                        }
                                    } if (localCustHomePhoneTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custHomePhone"));
                                 
                                        if (localCustHomePhone != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustHomePhone));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custHomePhone cannot be null!!");
                                        }
                                    } if (localCustUnsecuredExposureTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custUnsecuredExposure"));
                                 
                                        if (localCustUnsecuredExposure != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustUnsecuredExposure));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custUnsecuredExposure cannot be null!!");
                                        }
                                    } if (localCustPoBoxNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custPoBoxNo"));
                                 
                                        if (localCustPoBoxNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustPoBoxNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custPoBoxNo cannot be null!!");
                                        }
                                    } if (localCustPresentCountryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custPresentCountry"));
                                 
                                        if (localCustPresentCountry != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustPresentCountry));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custPresentCountry cannot be null!!");
                                        }
                                    } if (localCustRelationshipValueTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custRelationshipValue"));
                                 
                                        if (localCustRelationshipValue != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustRelationshipValue));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custRelationshipValue cannot be null!!");
                                        }
                                    } if (localCustVisaExpiryDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custVisaExpiryDate"));
                                 
                                        if (localCustVisaExpiryDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustVisaExpiryDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custVisaExpiryDate cannot be null!!");
                                        }
                                    } if (localCustCreditShieldTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custCreditShield"));
                                 
                                        if (localCustCreditShield != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustCreditShield));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custCreditShield cannot be null!!");
                                        }
                                    } if (localEmplTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "emplType"));
                                 
                                        if (localEmplType != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmplType));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("emplType cannot be null!!");
                                        }
                                    } if (localEmplDesignationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "emplDesignation"));
                                 
                                        if (localEmplDesignation != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmplDesignation));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("emplDesignation cannot be null!!");
                                        }
                                    } if (localEmplNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "emplName"));
                                 
                                        if (localEmplName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmplName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("emplName cannot be null!!");
                                        }
                                    } if (localEmplEmploymentTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "emplEmploymentType"));
                                 
                                        if (localEmplEmploymentType != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmplEmploymentType));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("emplEmploymentType cannot be null!!");
                                        }
                                    } if (localEmplEmiratesTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "emplEmirates"));
                                 
                                        if (localEmplEmirates != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmplEmirates));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("emplEmirates cannot be null!!");
                                        }
                                    } if (localEmplCategoryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "emplCategory"));
                                 
                                        if (localEmplCategory != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmplCategory));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("emplCategory cannot be null!!");
                                        }
                                    } if (localEmplCpvWaivedTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "emplCpvWaived"));
                                 
                                        if (localEmplCpvWaived != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmplCpvWaived));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("emplCpvWaived cannot be null!!");
                                        }
                                    } if (localEmplGrossIncomeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "emplGrossIncome"));
                                 
                                        if (localEmplGrossIncome != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmplGrossIncome));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("emplGrossIncome cannot be null!!");
                                        }
                                    } if (localEmplStaffIdTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "emplStaffId"));
                                 
                                        if (localEmplStaffId != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmplStaffId));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("emplStaffId cannot be null!!");
                                        }
                                    } if (localEmplDateOfJoiningTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "emplDateOfJoining"));
                                 
                                        if (localEmplDateOfJoining != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmplDateOfJoining));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("emplDateOfJoining cannot be null!!");
                                        }
                                    } if (localEmplTmlFlagTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "emplTmlFlag"));
                                 
                                        if (localEmplTmlFlag != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmplTmlFlag));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("emplTmlFlag cannot be null!!");
                                        }
                                    } if (localEmplIndustryClassTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "emplIndustryClass"));
                                 
                                        if (localEmplIndustryClass != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmplIndustryClass));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("emplIndustryClass cannot be null!!");
                                        }
                                    } if (localEmplFixedIncomeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "emplFixedIncome"));
                                 
                                        if (localEmplFixedIncome != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmplFixedIncome));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("emplFixedIncome cannot be null!!");
                                        }
                                    } if (localEmplSalaryCreditsTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "emplSalaryCredits"));
                                 
                                        if (localEmplSalaryCredits != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmplSalaryCredits));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("emplSalaryCredits cannot be null!!");
                                        }
                                    } if (localEmplJobConfirmationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "emplJobConfirmation"));
                                 
                                        if (localEmplJobConfirmation != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmplJobConfirmation));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("emplJobConfirmation cannot be null!!");
                                        }
                                    } if (localEmplCompletedServicesTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "emplCompletedServices"));
                                 
                                        if (localEmplCompletedServices != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmplCompletedServices));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("emplCompletedServices cannot be null!!");
                                        }
                                    } if (localEmplAvgMobileBillTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "emplAvgMobileBill"));
                                 
                                        if (localEmplAvgMobileBill != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmplAvgMobileBill));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("emplAvgMobileBill cannot be null!!");
                                        }
                                    } if (localEmplAverageIncomeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "emplAverageIncome"));
                                 
                                        if (localEmplAverageIncome != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmplAverageIncome));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("emplAverageIncome cannot be null!!");
                                        }
                                    } if (localEmplChequeReturnsTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "emplChequeReturns"));
                                 
                                        if (localEmplChequeReturns != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmplChequeReturns));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("emplChequeReturns cannot be null!!");
                                        }
                                    } if (localEmplSelfEmpCategoryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "emplSelfEmpCategory"));
                                 
                                        if (localEmplSelfEmpCategory != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmplSelfEmpCategory));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("emplSelfEmpCategory cannot be null!!");
                                        }
                                    } if (localEmplLengthOfBusinessTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "emplLengthOfBusiness"));
                                 
                                        if (localEmplLengthOfBusiness != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmplLengthOfBusiness));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("emplLengthOfBusiness cannot be null!!");
                                        }
                                    } if (localEmplNatureBusinessTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "emplNatureBusiness"));
                                 
                                        if (localEmplNatureBusiness != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmplNatureBusiness));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("emplNatureBusiness cannot be null!!");
                                        }
                                    } if (localCcEtihadGuestTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ccEtihadGuest"));
                                 
                                        if (localCcEtihadGuest != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCcEtihadGuest));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ccEtihadGuest cannot be null!!");
                                        }
                                    } if (localCcEtihadGuestNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ccEtihadGuestNo"));
                                 
                                        if (localCcEtihadGuestNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCcEtihadGuestNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ccEtihadGuestNo cannot be null!!");
                                        }
                                    } if (localCcCreditLimitTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ccCreditLimit"));
                                 
                                        if (localCcCreditLimit != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCcCreditLimit));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ccCreditLimit cannot be null!!");
                                        }
                                    } if (localCcPromoValueTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ccPromoValue"));
                                 
                                        if (localCcPromoValue != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCcPromoValue));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ccPromoValue cannot be null!!");
                                        }
                                    } if (localCcDsaCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ccDsaCode"));
                                 
                                        if (localCcDsaCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCcDsaCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ccDsaCode cannot be null!!");
                                        }
                                    } if (localCcApplnRefNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ccApplnRefNo"));
                                 
                                        if (localCcApplnRefNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCcApplnRefNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ccApplnRefNo cannot be null!!");
                                        }
                                    } if (localCcPrimEmbossNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ccPrimEmbossName"));
                                 
                                        if (localCcPrimEmbossName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCcPrimEmbossName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ccPrimEmbossName cannot be null!!");
                                        }
                                    } if (localCcStandingInstructionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ccStandingInstruction"));
                                 
                                        if (localCcStandingInstruction != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCcStandingInstruction));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ccStandingInstruction cannot be null!!");
                                        }
                                    } if (localCcAdcbAccntNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ccAdcbAccntNo"));
                                 
                                        if (localCcAdcbAccntNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCcAdcbAccntNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ccAdcbAccntNo cannot be null!!");
                                        }
                                    } if (localCcAutoDebitPercentTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ccAutoDebitPercent"));
                                 
                                        if (localCcAutoDebitPercent != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCcAutoDebitPercent));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ccAutoDebitPercent cannot be null!!");
                                        }
                                    } if (localCcFirstLevelPromoCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ccFirstLevelPromoCode"));
                                 
                                        if (localCcFirstLevelPromoCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCcFirstLevelPromoCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ccFirstLevelPromoCode cannot be null!!");
                                        }
                                    } if (localCcSecondLevelPromoCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ccSecondLevelPromoCode"));
                                 
                                        if (localCcSecondLevelPromoCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCcSecondLevelPromoCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ccSecondLevelPromoCode cannot be null!!");
                                        }
                                    } if (localCcCreditLimitIncreaseTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ccCreditLimitIncrease"));
                                 
                                        if (localCcCreditLimitIncrease != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCcCreditLimitIncrease));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ccCreditLimitIncrease cannot be null!!");
                                        }
                                    } if (localCcC2CBankNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ccC2cBankName"));
                                 
                                        if (localCcC2CBankName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCcC2CBankName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ccC2cBankName cannot be null!!");
                                        }
                                    } if (localCcCreditCardUtilizationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ccCreditCardUtilization"));
                                 
                                        if (localCcCreditCardUtilization != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCcCreditCardUtilization));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ccCreditCardUtilization cannot be null!!");
                                        }
                                    } if (localCcLoanOnCardsTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ccLoanOnCards"));
                                 
                                        if (localCcLoanOnCards != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCcLoanOnCards));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ccLoanOnCards cannot be null!!");
                                        }
                                    } if (localCcEmirateSourceCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ccEmirateSourceCode"));
                                 
                                        if (localCcEmirateSourceCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCcEmirateSourceCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ccEmirateSourceCode cannot be null!!");
                                        }
                                    } if (localCcSalaryTransferAdcbTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ccSalaryTransferAdcb"));
                                 
                                        if (localCcSalaryTransferAdcb != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCcSalaryTransferAdcb));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ccSalaryTransferAdcb cannot be null!!");
                                        }
                                    } if (localCcStatementCycleTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ccStatementCycle"));
                                 
                                        if (localCcStatementCycle != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCcStatementCycle));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ccStatementCycle cannot be null!!");
                                        }
                                    } if (localCcOnlineDebitPayTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ccOnlineDebitPay"));
                                 
                                        if (localCcOnlineDebitPay != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCcOnlineDebitPay));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ccOnlineDebitPay cannot be null!!");
                                        }
                                    } if (localCcTotalDbrTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ccTotalDbr"));
                                 
                                        if (localCcTotalDbr != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCcTotalDbr));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ccTotalDbr cannot be null!!");
                                        }
                                    } if (localCustGenderTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custGender"));
                                 
                                        if (localCustGender != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustGender));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custGender cannot be null!!");
                                        }
                                    } if (localCustPassportNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custPassportNo"));
                                 
                                        if (localCustPassportNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustPassportNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custPassportNo cannot be null!!");
                                        }
                                    } if (localCustEmiratesIdTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custEmiratesId"));
                                 
                                        if (localCustEmiratesId != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustEmiratesId));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custEmiratesId cannot be null!!");
                                        }
                                    } if (localCustResiPhoneTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custResiPhone"));
                                 
                                        if (localCustResiPhone != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustResiPhone));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custResiPhone cannot be null!!");
                                        }
                                    } if (localCustResiAddress1Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custResiAddress1"));
                                 
                                        if (localCustResiAddress1 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustResiAddress1));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custResiAddress1 cannot be null!!");
                                        }
                                    } if (localCustResiAddress2Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custResiAddress2"));
                                 
                                        if (localCustResiAddress2 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustResiAddress2));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custResiAddress2 cannot be null!!");
                                        }
                                    } if (localCustResiAddress3Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custResiAddress3"));
                                 
                                        if (localCustResiAddress3 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustResiAddress3));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custResiAddress3 cannot be null!!");
                                        }
                                    } if (localCustResiEmirateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custResiEmirate"));
                                 
                                        if (localCustResiEmirate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustResiEmirate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custResiEmirate cannot be null!!");
                                        }
                                    } if (localCustResiCityTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custResiCity"));
                                 
                                        if (localCustResiCity != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustResiCity));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custResiCity cannot be null!!");
                                        }
                                    } if (localCustResiCountryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custResiCountry"));
                                 
                                        if (localCustResiCountry != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustResiCountry));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custResiCountry cannot be null!!");
                                        }
                                    } if (localCustResiPoboxNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custResiPoboxNo"));
                                 
                                        if (localCustResiPoboxNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustResiPoboxNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custResiPoboxNo cannot be null!!");
                                        }
                                    } if (localCcThirdLevelPromoCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ccThirdLevelPromoCode"));
                                 
                                        if (localCcThirdLevelPromoCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCcThirdLevelPromoCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ccThirdLevelPromoCode cannot be null!!");
                                        }
                                    } if (localCcCreditShieldTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ccCreditShield"));
                                 
                                        if (localCcCreditShield != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCcCreditShield));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ccCreditShield cannot be null!!");
                                        }
                                    } if (localCcFileLocationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ccFileLocation"));
                                 
                                        if (localCcFileLocation != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCcFileLocation));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ccFileLocation cannot be null!!");
                                        }
                                    } if (localCcPrintStatementTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ccPrintStatement"));
                                 
                                        if (localCcPrintStatement != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCcPrintStatement));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ccPrintStatement cannot be null!!");
                                        }
                                    } if (localCustEmailTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custEmail"));
                                 
                                        if (localCustEmail != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustEmail));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custEmail cannot be null!!");
                                        }
                                    } if (localCustNetIncomeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custNetIncome"));
                                 
                                        if (localCustNetIncome != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustNetIncome));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custNetIncome cannot be null!!");
                                        }
                                    } if (localEmplPhoneNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "emplPhoneNo"));
                                 
                                        if (localEmplPhoneNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmplPhoneNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("emplPhoneNo cannot be null!!");
                                        }
                                    } if (localCustHomeAddress1Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custHomeAddress1"));
                                 
                                        if (localCustHomeAddress1 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustHomeAddress1));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custHomeAddress1 cannot be null!!");
                                        }
                                    } if (localCustHomeAddress2Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custHomeAddress2"));
                                 
                                        if (localCustHomeAddress2 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustHomeAddress2));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custHomeAddress2 cannot be null!!");
                                        }
                                    } if (localCustHomeAddress3Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custHomeAddress3"));
                                 
                                        if (localCustHomeAddress3 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustHomeAddress3));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custHomeAddress3 cannot be null!!");
                                        }
                                    } if (localCustHomeZipTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custHomeZip"));
                                 
                                        if (localCustHomeZip != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustHomeZip));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custHomeZip cannot be null!!");
                                        }
                                    } if (localCustHomeCityTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custHomeCity"));
                                 
                                        if (localCustHomeCity != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustHomeCity));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custHomeCity cannot be null!!");
                                        }
                                    } if (localCustHomeCountryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custHomeCountry"));
                                 
                                        if (localCustHomeCountry != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustHomeCountry));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custHomeCountry cannot be null!!");
                                        }
                                    } if (localCustHomeStateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custHomeState"));
                                 
                                        if (localCustHomeState != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustHomeState));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custHomeState cannot be null!!");
                                        }
                                    } if (localCustState2Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custState2"));
                                 
                                        if (localCustState2 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustState2));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custState2 cannot be null!!");
                                        }
                                    } if (localCcSupplLimitPercentageTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ccSupplLimitPercentage"));
                                 
                                        if (localCcSupplLimitPercentage != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCcSupplLimitPercentage));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ccSupplLimitPercentage cannot be null!!");
                                        }
                                    } if (localCcBranchCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ccBranchCode"));
                                 
                                        if (localCcBranchCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCcBranchCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ccBranchCode cannot be null!!");
                                        }
                                    } if (localCcEStatementTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ccEStatement"));
                                 
                                        if (localCcEStatement != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCcEStatement));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ccEStatement cannot be null!!");
                                        }
                                    } if (localCcEcbEmiTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ccEcbEmi"));
                                 
                                        if (localCcEcbEmi != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCcEcbEmi));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ccEcbEmi cannot be null!!");
                                        }
                                    } if (localCcEcbUnsecuredExpostureTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ccEcbUnsecuredExposture"));
                                 
                                        if (localCcEcbUnsecuredExposture != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCcEcbUnsecuredExposture));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ccEcbUnsecuredExposture cannot be null!!");
                                        }
                                    } if (localCcMaxBucketTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ccMaxBucket"));
                                 
                                        if (localCcMaxBucket != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCcMaxBucket));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ccMaxBucket cannot be null!!");
                                        }
                                    } if (localCcCurrentBucketTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ccCurrentBucket"));
                                 
                                        if (localCcCurrentBucket != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCcCurrentBucket));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ccCurrentBucket cannot be null!!");
                                        }
                                    } if (localCcSupplNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ccSupplName"));
                                 
                                        if (localCcSupplName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCcSupplName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ccSupplName cannot be null!!");
                                        }
                                    } if (localCcSupplTitleTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ccSupplTitle"));
                                 
                                        if (localCcSupplTitle != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCcSupplTitle));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ccSupplTitle cannot be null!!");
                                        }
                                    } if (localCcSupplEmbossingNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ccSupplEmbossingName"));
                                 
                                        if (localCcSupplEmbossingName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCcSupplEmbossingName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ccSupplEmbossingName cannot be null!!");
                                        }
                                    } if (localCcSupplRelationshipTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ccSupplRelationship"));
                                 
                                        if (localCcSupplRelationship != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCcSupplRelationship));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ccSupplRelationship cannot be null!!");
                                        }
                                    } if (localCcSupplNationlityTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ccSupplNationlity"));
                                 
                                        if (localCcSupplNationlity != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCcSupplNationlity));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ccSupplNationlity cannot be null!!");
                                        }
                                    } if (localCcSupplPassportNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ccSupplPassportNo"));
                                 
                                        if (localCcSupplPassportNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCcSupplPassportNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ccSupplPassportNo cannot be null!!");
                                        }
                                    } if (localCcSupplDateOfBirthTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ccSupplDateOfBirth"));
                                 
                                        if (localCcSupplDateOfBirth != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCcSupplDateOfBirth));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ccSupplDateOfBirth cannot be null!!");
                                        }
                                    } if (localCcSupplMaritalStatusTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ccSupplMaritalStatus"));
                                 
                                        if (localCcSupplMaritalStatus != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCcSupplMaritalStatus));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ccSupplMaritalStatus cannot be null!!");
                                        }
                                    } if (localDe3PersonalRefNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "de3PersonalRefName"));
                                 
                                        if (localDe3PersonalRefName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDe3PersonalRefName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("de3PersonalRefName cannot be null!!");
                                        }
                                    } if (localDe3PersonalRefMobileTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "de3PersonalRefMobile"));
                                 
                                        if (localDe3PersonalRefMobile != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDe3PersonalRefMobile));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("de3PersonalRefMobile cannot be null!!");
                                        }
                                    } if (localDe3PersonalRefOfficePhoneTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "de3PersonalRefOfficePhone"));
                                 
                                        if (localDe3PersonalRefOfficePhone != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDe3PersonalRefOfficePhone));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("de3PersonalRefOfficePhone cannot be null!!");
                                        }
                                    } if (localDe3DateOfSalaryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "de3DateOfSalary"));
                                 
                                        if (localDe3DateOfSalary != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDe3DateOfSalary));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("de3DateOfSalary cannot be null!!");
                                        }
                                    } if (localDe3MychoiceTouchPointsTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "de3MychoiceTouchPoints"));
                                 
                                        if (localDe3MychoiceTouchPoints != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDe3MychoiceTouchPoints));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("de3MychoiceTouchPoints cannot be null!!");
                                        }
                                    } if (localPilLoanAmountTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "pilLoanAmount"));
                                 
                                        if (localPilLoanAmount != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPilLoanAmount));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("pilLoanAmount cannot be null!!");
                                        }
                                    } if (localPilAmountRequestedTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "pilAmountRequested"));
                                 
                                        if (localPilAmountRequested != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPilAmountRequested));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("pilAmountRequested cannot be null!!");
                                        }
                                    } if (localPilInterestTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "pilInterest"));
                                 
                                        if (localPilInterest != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPilInterest));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("pilInterest cannot be null!!");
                                        }
                                    } if (localPilTenorTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "pilTenor"));
                                 
                                        if (localPilTenor != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPilTenor));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("pilTenor cannot be null!!");
                                        }
                                    } if (localPilInstallmentAmountTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "pilInstallmentAmount"));
                                 
                                        if (localPilInstallmentAmount != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPilInstallmentAmount));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("pilInstallmentAmount cannot be null!!");
                                        }
                                    } if (localPilProductPurchasedTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "pilProductPurchased"));
                                 
                                        if (localPilProductPurchased != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPilProductPurchased));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("pilProductPurchased cannot be null!!");
                                        }
                                    } if (localPilTotalDbrTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "pilTotalDbr"));
                                 
                                        if (localPilTotalDbr != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPilTotalDbr));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("pilTotalDbr cannot be null!!");
                                        }
                                    } if (localPilSblDocumentCriteriaTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "pilSblDocumentCriteria"));
                                 
                                        if (localPilSblDocumentCriteria != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPilSblDocumentCriteria));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("pilSblDocumentCriteria cannot be null!!");
                                        }
                                    } if (localPilCreditCardLimitTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "pilCreditCardLimit"));
                                 
                                        if (localPilCreditCardLimit != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPilCreditCardLimit));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("pilCreditCardLimit cannot be null!!");
                                        }
                                    } if (localPilL2CApprovedBankTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "pilL2cApprovedBank"));
                                 
                                        if (localPilL2CApprovedBank != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPilL2CApprovedBank));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("pilL2cApprovedBank cannot be null!!");
                                        }
                                    } if (localPilMobileBillAmountTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "pilMobileBillAmount"));
                                 
                                        if (localPilMobileBillAmount != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPilMobileBillAmount));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("pilMobileBillAmount cannot be null!!");
                                        }
                                    } if (localPilDsaCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "pilDsaCode"));
                                 
                                        if (localPilDsaCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPilDsaCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("pilDsaCode cannot be null!!");
                                        }
                                    } if (localPilPrimaryProductTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "pilPrimaryProduct"));
                                 
                                        if (localPilPrimaryProduct != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPilPrimaryProduct));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("pilPrimaryProduct cannot be null!!");
                                        }
                                    } if (localPilSpecialPromoCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "pilSpecialPromoCode"));
                                 
                                        if (localPilSpecialPromoCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPilSpecialPromoCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("pilSpecialPromoCode cannot be null!!");
                                        }
                                    } if (localPilXSellProductTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "pilXSellProduct"));
                                 
                                        if (localPilXSellProduct != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPilXSellProduct));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("pilXSellProduct cannot be null!!");
                                        }
                                    } if (localPilBdmNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "pilBdmName"));
                                 
                                        if (localPilBdmName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPilBdmName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("pilBdmName cannot be null!!");
                                        }
                                    } if (localSourcingCentreTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "sourcingCentre"));
                                 
                                        if (localSourcingCentre != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSourcingCentre));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sourcingCentre cannot be null!!");
                                        }
                                    } if (localExtCclibFlagTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "extCclibFlag"));
                                 
                                        if (localExtCclibFlag != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localExtCclibFlag));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("extCclibFlag cannot be null!!");
                                        }
                                    } if (localExtCclibAmountTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "extCclibAmount"));
                                 
                                        if (localExtCclibAmount != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localExtCclibAmount));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("extCclibAmount cannot be null!!");
                                        }
                                    } if (localExtOdlibFlagTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "extOdlibFlag"));
                                 
                                        if (localExtOdlibFlag != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localExtOdlibFlag));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("extOdlibFlag cannot be null!!");
                                        }
                                    } if (localExtOdlibAmountTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "extOdlibAmount"));
                                 
                                        if (localExtOdlibAmount != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localExtOdlibAmount));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("extOdlibAmount cannot be null!!");
                                        }
                                    } if (localExtPllibFlagTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "extPllibFlag"));
                                 
                                        if (localExtPllibFlag != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localExtPllibFlag));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("extPllibFlag cannot be null!!");
                                        }
                                    } if (localExtPllibAmountTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "extPllibAmount"));
                                 
                                        if (localExtPllibAmount != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localExtPllibAmount));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("extPllibAmount cannot be null!!");
                                        }
                                    } if (localExtOllibFlagTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "extOllibFlag"));
                                 
                                        if (localExtOllibFlag != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localExtOllibFlag));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("extOllibFlag cannot be null!!");
                                        }
                                    } if (localExtOllibAmountTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "extOllibAmount"));
                                 
                                        if (localExtOllibAmount != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localExtOllibAmount));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("extOllibAmount cannot be null!!");
                                        }
                                    } if (localCustEmpAddr1Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custEmpAddr1"));
                                 
                                        if (localCustEmpAddr1 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustEmpAddr1));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custEmpAddr1 cannot be null!!");
                                        }
                                    } if (localCustEmpAddr2Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custEmpAddr2"));
                                 
                                        if (localCustEmpAddr2 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustEmpAddr2));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custEmpAddr2 cannot be null!!");
                                        }
                                    } if (localCustEmpAddr3Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custEmpAddr3"));
                                 
                                        if (localCustEmpAddr3 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustEmpAddr3));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custEmpAddr3 cannot be null!!");
                                        }
                                    } if (localCustEmpAddrcityTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custEmpAddrcity"));
                                 
                                        if (localCustEmpAddrcity != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustEmpAddrcity));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custEmpAddrcity cannot be null!!");
                                        }
                                    } if (localCustEmpAddrzipTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custEmpAddrzip"));
                                 
                                        if (localCustEmpAddrzip != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustEmpAddrzip));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custEmpAddrzip cannot be null!!");
                                        }
                                    } if (localCustEmpAddrstateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custEmpAddrstate"));
                                 
                                        if (localCustEmpAddrstate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustEmpAddrstate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custEmpAddrstate cannot be null!!");
                                        }
                                    } if (localCustEmpAddrcntryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custEmpAddrcntry"));
                                 
                                        if (localCustEmpAddrcntry != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustEmpAddrcntry));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custEmpAddrcntry cannot be null!!");
                                        }
                                    } if (localCustHomecntryPhoneTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custHomecntryPhone"));
                                 
                                        if (localCustHomecntryPhone != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustHomecntryPhone));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custHomecntryPhone cannot be null!!");
                                        }
                                    } if (localCustEmpEmirateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custEmpEmirate"));
                                 
                                        if (localCustEmpEmirate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustEmpEmirate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custEmpEmirate cannot be null!!");
                                        }
                                    } if (localApplSubmissionDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "applSubmissionDate"));
                                 
                                        if (localApplSubmissionDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localApplSubmissionDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("applSubmissionDate cannot be null!!");
                                        }
                                    } if (localExcellencyFlagTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "excellencyFlag"));
                                 
                                        if (localExcellencyFlag != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localExcellencyFlag));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("excellencyFlag cannot be null!!");
                                        }
                                    } if (localDsaRemarksTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "dsaRemarks"));
                                 
                                        if (localDsaRemarks != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDsaRemarks));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("dsaRemarks cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static LAPSAppDetails_type1 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            LAPSAppDetails_type1 object =
                new LAPSAppDetails_type1();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"LAPSAppDetails_type1".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (LAPSAppDetails_type1)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","channelId").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"channelId" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setChannelId(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","collectOrDeliver").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"collectOrDeliver" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCollectOrDeliver(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custVisa").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custVisa" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustVisa(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custPassportExpiry").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custPassportExpiry" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustPassportExpiry(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custDependent").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custDependent" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustDependent(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","empSeqcode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"empSeqcode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEmpSeqcode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custMailaddrFlag").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custMailaddrFlag" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustMailaddrFlag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","lodgementRefno").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"lodgementRefno" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLodgementRefno(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ccPreApprovedFlag").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ccPreApprovedFlag" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCcPreApprovedFlag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custExistingFlag").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custExistingFlag" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustExistingFlag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","productType").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"productType" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setProductType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","productCode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"productCode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setProductCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custId").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custId" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustId(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custTitle").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custTitle" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustTitle(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custCategory").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custCategory" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustCategory(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custShortName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custShortName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustShortName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custDob").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custDob" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustDob(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custMotherName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custMotherName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustMotherName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custBankStaff").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custBankStaff" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustBankStaff(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custMaritalStatus").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custMaritalStatus" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustMaritalStatus(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custBankingWithus").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custBankingWithus" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustBankingWithus(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custLocation").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custLocation" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustLocation(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custEduQualification").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custEduQualification" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustEduQualification(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custEmirate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custEmirate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustEmirate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custProfession").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custProfession" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustProfession(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custNationality").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custNationality" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustNationality(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custMobile").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custMobile" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustMobile(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custSubSegType").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custSubSegType" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustSubSegType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custHomePhone").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custHomePhone" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustHomePhone(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custUnsecuredExposure").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custUnsecuredExposure" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustUnsecuredExposure(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custPoBoxNo").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custPoBoxNo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustPoBoxNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custPresentCountry").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custPresentCountry" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustPresentCountry(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custRelationshipValue").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custRelationshipValue" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustRelationshipValue(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custVisaExpiryDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custVisaExpiryDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustVisaExpiryDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custCreditShield").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custCreditShield" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustCreditShield(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","emplType").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"emplType" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEmplType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","emplDesignation").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"emplDesignation" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEmplDesignation(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","emplName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"emplName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEmplName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","emplEmploymentType").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"emplEmploymentType" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEmplEmploymentType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","emplEmirates").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"emplEmirates" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEmplEmirates(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","emplCategory").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"emplCategory" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEmplCategory(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","emplCpvWaived").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"emplCpvWaived" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEmplCpvWaived(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","emplGrossIncome").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"emplGrossIncome" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEmplGrossIncome(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","emplStaffId").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"emplStaffId" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEmplStaffId(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","emplDateOfJoining").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"emplDateOfJoining" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEmplDateOfJoining(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","emplTmlFlag").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"emplTmlFlag" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEmplTmlFlag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","emplIndustryClass").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"emplIndustryClass" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEmplIndustryClass(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","emplFixedIncome").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"emplFixedIncome" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEmplFixedIncome(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","emplSalaryCredits").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"emplSalaryCredits" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEmplSalaryCredits(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","emplJobConfirmation").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"emplJobConfirmation" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEmplJobConfirmation(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","emplCompletedServices").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"emplCompletedServices" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEmplCompletedServices(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","emplAvgMobileBill").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"emplAvgMobileBill" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEmplAvgMobileBill(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","emplAverageIncome").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"emplAverageIncome" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEmplAverageIncome(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","emplChequeReturns").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"emplChequeReturns" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEmplChequeReturns(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","emplSelfEmpCategory").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"emplSelfEmpCategory" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEmplSelfEmpCategory(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","emplLengthOfBusiness").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"emplLengthOfBusiness" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEmplLengthOfBusiness(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","emplNatureBusiness").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"emplNatureBusiness" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEmplNatureBusiness(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ccEtihadGuest").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ccEtihadGuest" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCcEtihadGuest(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ccEtihadGuestNo").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ccEtihadGuestNo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCcEtihadGuestNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ccCreditLimit").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ccCreditLimit" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCcCreditLimit(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ccPromoValue").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ccPromoValue" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCcPromoValue(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ccDsaCode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ccDsaCode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCcDsaCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ccApplnRefNo").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ccApplnRefNo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCcApplnRefNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ccPrimEmbossName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ccPrimEmbossName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCcPrimEmbossName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ccStandingInstruction").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ccStandingInstruction" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCcStandingInstruction(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ccAdcbAccntNo").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ccAdcbAccntNo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCcAdcbAccntNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ccAutoDebitPercent").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ccAutoDebitPercent" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCcAutoDebitPercent(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ccFirstLevelPromoCode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ccFirstLevelPromoCode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCcFirstLevelPromoCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ccSecondLevelPromoCode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ccSecondLevelPromoCode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCcSecondLevelPromoCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ccCreditLimitIncrease").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ccCreditLimitIncrease" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCcCreditLimitIncrease(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ccC2cBankName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ccC2cBankName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCcC2CBankName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ccCreditCardUtilization").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ccCreditCardUtilization" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCcCreditCardUtilization(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ccLoanOnCards").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ccLoanOnCards" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCcLoanOnCards(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ccEmirateSourceCode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ccEmirateSourceCode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCcEmirateSourceCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ccSalaryTransferAdcb").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ccSalaryTransferAdcb" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCcSalaryTransferAdcb(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ccStatementCycle").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ccStatementCycle" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCcStatementCycle(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ccOnlineDebitPay").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ccOnlineDebitPay" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCcOnlineDebitPay(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ccTotalDbr").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ccTotalDbr" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCcTotalDbr(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custGender").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custGender" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustGender(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custPassportNo").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custPassportNo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustPassportNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custEmiratesId").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custEmiratesId" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustEmiratesId(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custResiPhone").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custResiPhone" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustResiPhone(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custResiAddress1").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custResiAddress1" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustResiAddress1(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custResiAddress2").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custResiAddress2" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustResiAddress2(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custResiAddress3").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custResiAddress3" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustResiAddress3(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custResiEmirate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custResiEmirate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustResiEmirate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custResiCity").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custResiCity" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustResiCity(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custResiCountry").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custResiCountry" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustResiCountry(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custResiPoboxNo").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custResiPoboxNo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustResiPoboxNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ccThirdLevelPromoCode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ccThirdLevelPromoCode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCcThirdLevelPromoCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ccCreditShield").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ccCreditShield" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCcCreditShield(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ccFileLocation").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ccFileLocation" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCcFileLocation(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ccPrintStatement").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ccPrintStatement" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCcPrintStatement(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custEmail").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custEmail" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustEmail(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custNetIncome").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custNetIncome" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustNetIncome(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","emplPhoneNo").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"emplPhoneNo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEmplPhoneNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custHomeAddress1").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custHomeAddress1" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustHomeAddress1(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custHomeAddress2").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custHomeAddress2" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustHomeAddress2(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custHomeAddress3").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custHomeAddress3" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustHomeAddress3(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custHomeZip").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custHomeZip" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustHomeZip(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custHomeCity").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custHomeCity" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustHomeCity(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custHomeCountry").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custHomeCountry" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustHomeCountry(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custHomeState").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custHomeState" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustHomeState(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custState2").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custState2" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustState2(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ccSupplLimitPercentage").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ccSupplLimitPercentage" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCcSupplLimitPercentage(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ccBranchCode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ccBranchCode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCcBranchCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ccEStatement").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ccEStatement" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCcEStatement(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ccEcbEmi").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ccEcbEmi" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCcEcbEmi(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ccEcbUnsecuredExposture").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ccEcbUnsecuredExposture" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCcEcbUnsecuredExposture(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ccMaxBucket").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ccMaxBucket" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCcMaxBucket(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ccCurrentBucket").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ccCurrentBucket" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCcCurrentBucket(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ccSupplName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ccSupplName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCcSupplName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ccSupplTitle").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ccSupplTitle" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCcSupplTitle(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ccSupplEmbossingName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ccSupplEmbossingName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCcSupplEmbossingName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ccSupplRelationship").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ccSupplRelationship" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCcSupplRelationship(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ccSupplNationlity").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ccSupplNationlity" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCcSupplNationlity(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ccSupplPassportNo").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ccSupplPassportNo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCcSupplPassportNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ccSupplDateOfBirth").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ccSupplDateOfBirth" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCcSupplDateOfBirth(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ccSupplMaritalStatus").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ccSupplMaritalStatus" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCcSupplMaritalStatus(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","de3PersonalRefName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"de3PersonalRefName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDe3PersonalRefName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","de3PersonalRefMobile").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"de3PersonalRefMobile" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDe3PersonalRefMobile(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","de3PersonalRefOfficePhone").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"de3PersonalRefOfficePhone" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDe3PersonalRefOfficePhone(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","de3DateOfSalary").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"de3DateOfSalary" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDe3DateOfSalary(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","de3MychoiceTouchPoints").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"de3MychoiceTouchPoints" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDe3MychoiceTouchPoints(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","pilLoanAmount").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"pilLoanAmount" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPilLoanAmount(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","pilAmountRequested").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"pilAmountRequested" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPilAmountRequested(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","pilInterest").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"pilInterest" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPilInterest(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","pilTenor").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"pilTenor" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPilTenor(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","pilInstallmentAmount").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"pilInstallmentAmount" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPilInstallmentAmount(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","pilProductPurchased").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"pilProductPurchased" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPilProductPurchased(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","pilTotalDbr").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"pilTotalDbr" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPilTotalDbr(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","pilSblDocumentCriteria").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"pilSblDocumentCriteria" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPilSblDocumentCriteria(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","pilCreditCardLimit").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"pilCreditCardLimit" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPilCreditCardLimit(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","pilL2cApprovedBank").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"pilL2cApprovedBank" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPilL2CApprovedBank(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","pilMobileBillAmount").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"pilMobileBillAmount" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPilMobileBillAmount(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","pilDsaCode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"pilDsaCode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPilDsaCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","pilPrimaryProduct").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"pilPrimaryProduct" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPilPrimaryProduct(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","pilSpecialPromoCode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"pilSpecialPromoCode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPilSpecialPromoCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","pilXSellProduct").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"pilXSellProduct" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPilXSellProduct(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","pilBdmName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"pilBdmName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPilBdmName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","sourcingCentre").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"sourcingCentre" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSourcingCentre(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","extCclibFlag").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"extCclibFlag" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setExtCclibFlag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","extCclibAmount").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"extCclibAmount" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setExtCclibAmount(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","extOdlibFlag").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"extOdlibFlag" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setExtOdlibFlag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","extOdlibAmount").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"extOdlibAmount" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setExtOdlibAmount(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","extPllibFlag").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"extPllibFlag" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setExtPllibFlag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","extPllibAmount").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"extPllibAmount" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setExtPllibAmount(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","extOllibFlag").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"extOllibFlag" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setExtOllibFlag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","extOllibAmount").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"extOllibAmount" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setExtOllibAmount(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custEmpAddr1").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custEmpAddr1" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustEmpAddr1(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custEmpAddr2").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custEmpAddr2" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustEmpAddr2(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custEmpAddr3").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custEmpAddr3" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustEmpAddr3(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custEmpAddrcity").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custEmpAddrcity" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustEmpAddrcity(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custEmpAddrzip").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custEmpAddrzip" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustEmpAddrzip(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custEmpAddrstate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custEmpAddrstate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustEmpAddrstate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custEmpAddrcntry").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custEmpAddrcntry" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustEmpAddrcntry(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custHomecntryPhone").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custHomecntryPhone" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustHomecntryPhone(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custEmpEmirate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custEmpEmirate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustEmpEmirate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","applSubmissionDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"applSubmissionDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setApplSubmissionDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","excellencyFlag").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"excellencyFlag" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setExcellencyFlag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","dsaRemarks").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"dsaRemarks" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDsaRemarks(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class AccountDetails_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = accountDetails_type0
                Namespace URI = http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for AccountInfo
                        * This was an Array!
                        */

                        
                                    protected AccountInfo_type0[] localAccountInfo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAccountInfoTracker = false ;

                           public boolean isAccountInfoSpecified(){
                               return localAccountInfoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return AccountInfo_type0[]
                           */
                           public  AccountInfo_type0[] getAccountInfo(){
                               return localAccountInfo;
                           }

                           
                        


                               
                              /**
                               * validate the array for AccountInfo
                               */
                              protected void validateAccountInfo(AccountInfo_type0[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param AccountInfo
                              */
                              public void setAccountInfo(AccountInfo_type0[] param){
                              
                                   validateAccountInfo(param);

                               localAccountInfoTracker = param != null;
                                      
                                      this.localAccountInfo=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param AccountInfo_type0
                             */
                             public void addAccountInfo(AccountInfo_type0 param){
                                   if (localAccountInfo == null){
                                   localAccountInfo = new AccountInfo_type0[]{};
                                   }

                            
                                 //update the setting tracker
                                localAccountInfoTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localAccountInfo);
                               list.add(param);
                               this.localAccountInfo =
                             (AccountInfo_type0[])list.toArray(
                            new AccountInfo_type0[list.size()]);

                             }
                             

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":accountDetails_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "accountDetails_type0",
                           xmlWriter);
                   }

               
                   }
                if (localAccountInfoTracker){
                                       if (localAccountInfo!=null){
                                            for (int i = 0;i < localAccountInfo.length;i++){
                                                if (localAccountInfo[i] != null){
                                                 localAccountInfo[i].serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","accountInfo"),
                                                           xmlWriter);
                                                } else {
                                                   
                                                        // we don't have to do any thing since minOccures is zero
                                                    
                                                }

                                            }
                                     } else {
                                        
                                               throw new org.apache.axis2.databinding.ADBException("accountInfo cannot be null!!");
                                        
                                    }
                                 }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localAccountInfoTracker){
                             if (localAccountInfo!=null) {
                                 for (int i = 0;i < localAccountInfo.length;i++){

                                    if (localAccountInfo[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                          "accountInfo"));
                                         elementList.add(localAccountInfo[i]);
                                    } else {
                                        
                                                // nothing to do
                                            
                                    }

                                 }
                             } else {
                                 
                                        throw new org.apache.axis2.databinding.ADBException("accountInfo cannot be null!!");
                                    
                             }

                        }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static AccountDetails_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            AccountDetails_type0 object =
                new AccountDetails_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"accountDetails_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (AccountDetails_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                        java.util.ArrayList list1 = new java.util.ArrayList();
                    
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","accountInfo").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    list1.add(AccountInfo_type0.Factory.parse(reader));
                                                                
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone1 = false;
                                                        while(!loopDone1){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone1 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","accountInfo").equals(reader.getName())){
                                                                    list1.add(AccountInfo_type0.Factory.parse(reader));
                                                                        
                                                                }else{
                                                                    loopDone1 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array
                                                        
                                                        object.setAccountInfo((AccountInfo_type0[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                AccountInfo_type0.class,
                                                                list1));
                                                            
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class AccountDetails_type1
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = accountDetails_type1
                Namespace URI = http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for AccountType
                        */

                        
                                    protected java.lang.String localAccountType ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAccountTypeTracker = false ;

                           public boolean isAccountTypeSpecified(){
                               return localAccountTypeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAccountType(){
                               return localAccountType;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AccountType
                               */
                               public void setAccountType(java.lang.String param){
                            localAccountTypeTracker = param != null;
                                   
                                            this.localAccountType=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":accountDetails_type1",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "accountDetails_type1",
                           xmlWriter);
                   }

               
                   }
                if (localAccountTypeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "accountType", xmlWriter);
                             

                                          if (localAccountType==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("accountType cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAccountType);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localAccountTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "accountType"));
                                 
                                        if (localAccountType != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAccountType));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("accountType cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static AccountDetails_type1 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            AccountDetails_type1 object =
                new AccountDetails_type1();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"accountDetails_type1".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (AccountDetails_type1)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","accountType").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"accountType" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAccountType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class FatcaDetails_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = fatcaDetails_type0
                Namespace URI = http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for BirthCntry
                        */

                        
                                    protected java.lang.String localBirthCntry ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBirthCntryTracker = false ;

                           public boolean isBirthCntrySpecified(){
                               return localBirthCntryTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBirthCntry(){
                               return localBirthCntry;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BirthCntry
                               */
                               public void setBirthCntry(java.lang.String param){
                            localBirthCntryTracker = param != null;
                                   
                                            this.localBirthCntry=param;
                                    

                               }
                            

                        /**
                        * field for CustClassDate
                        */

                        
                                    protected java.lang.String localCustClassDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustClassDateTracker = false ;

                           public boolean isCustClassDateSpecified(){
                               return localCustClassDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustClassDate(){
                               return localCustClassDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustClassDate
                               */
                               public void setCustClassDate(java.lang.String param){
                            localCustClassDateTracker = param != null;
                                   
                                            this.localCustClassDate=param;
                                    

                               }
                            

                        /**
                        * field for CustFATCAClass
                        */

                        
                                    protected java.lang.String localCustFATCAClass ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustFATCAClassTracker = false ;

                           public boolean isCustFATCAClassSpecified(){
                               return localCustFATCAClassTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustFATCAClass(){
                               return localCustFATCAClass;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustFATCAClass
                               */
                               public void setCustFATCAClass(java.lang.String param){
                            localCustFATCAClassTracker = param != null;
                                   
                                            this.localCustFATCAClass=param;
                                    

                               }
                            

                        /**
                        * field for DocCollected
                        */

                        
                                    protected java.lang.String localDocCollected ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDocCollectedTracker = false ;

                           public boolean isDocCollectedSpecified(){
                               return localDocCollectedTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDocCollected(){
                               return localDocCollected;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DocCollected
                               */
                               public void setDocCollected(java.lang.String param){
                            localDocCollectedTracker = param != null;
                                   
                                            this.localDocCollected=param;
                                    

                               }
                            

                        /**
                        * field for IsUS
                        */

                        
                                    protected java.lang.String localIsUS ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIsUSTracker = false ;

                           public boolean isIsUSSpecified(){
                               return localIsUSTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getIsUS(){
                               return localIsUS;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param IsUS
                               */
                               public void setIsUS(java.lang.String param){
                            localIsUSTracker = param != null;
                                   
                                            this.localIsUS=param;
                                    

                               }
                            

                        /**
                        * field for Ssn
                        */

                        
                                    protected java.lang.String localSsn ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSsnTracker = false ;

                           public boolean isSsnSpecified(){
                               return localSsnTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSsn(){
                               return localSsn;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Ssn
                               */
                               public void setSsn(java.lang.String param){
                            localSsnTracker = param != null;
                                   
                                            this.localSsn=param;
                                    

                               }
                            

                        /**
                        * field for SignatoryToUSPerson
                        */

                        
                                    protected java.lang.String localSignatoryToUSPerson ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSignatoryToUSPersonTracker = false ;

                           public boolean isSignatoryToUSPersonSpecified(){
                               return localSignatoryToUSPersonTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSignatoryToUSPerson(){
                               return localSignatoryToUSPerson;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SignatoryToUSPerson
                               */
                               public void setSignatoryToUSPerson(java.lang.String param){
                            localSignatoryToUSPersonTracker = param != null;
                                   
                                            this.localSignatoryToUSPerson=param;
                                    

                               }
                            

                        /**
                        * field for TaxLiabliltyUS
                        */

                        
                                    protected java.lang.String localTaxLiabliltyUS ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTaxLiabliltyUSTracker = false ;

                           public boolean isTaxLiabliltyUSSpecified(){
                               return localTaxLiabliltyUSTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTaxLiabliltyUS(){
                               return localTaxLiabliltyUS;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TaxLiabliltyUS
                               */
                               public void setTaxLiabliltyUS(java.lang.String param){
                            localTaxLiabliltyUSTracker = param != null;
                                   
                                            this.localTaxLiabliltyUS=param;
                                    

                               }
                            

                        /**
                        * field for W8BenSignUpDate
                        */

                        
                                    protected java.lang.String localW8BenSignUpDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localW8BenSignUpDateTracker = false ;

                           public boolean isW8BenSignUpDateSpecified(){
                               return localW8BenSignUpDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getW8BenSignUpDate(){
                               return localW8BenSignUpDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param W8BenSignUpDate
                               */
                               public void setW8BenSignUpDate(java.lang.String param){
                            localW8BenSignUpDateTracker = param != null;
                                   
                                            this.localW8BenSignUpDate=param;
                                    

                               }
                            

                        /**
                        * field for UsIndiciaFound
                        */

                        
                                    protected java.lang.String localUsIndiciaFound ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUsIndiciaFoundTracker = false ;

                           public boolean isUsIndiciaFoundSpecified(){
                               return localUsIndiciaFoundTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUsIndiciaFound(){
                               return localUsIndiciaFound;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param UsIndiciaFound
                               */
                               public void setUsIndiciaFound(java.lang.String param){
                            localUsIndiciaFoundTracker = param != null;
                                   
                                            this.localUsIndiciaFound=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":fatcaDetails_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "fatcaDetails_type0",
                           xmlWriter);
                   }

               
                   }
                if (localBirthCntryTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "birthCntry", xmlWriter);
                             

                                          if (localBirthCntry==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("birthCntry cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBirthCntry);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustClassDateTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custClassDate", xmlWriter);
                             

                                          if (localCustClassDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custClassDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustClassDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustFATCAClassTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custFATCAClass", xmlWriter);
                             

                                          if (localCustFATCAClass==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custFATCAClass cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustFATCAClass);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDocCollectedTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "docCollected", xmlWriter);
                             

                                          if (localDocCollected==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("docCollected cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDocCollected);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localIsUSTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "isUS", xmlWriter);
                             

                                          if (localIsUS==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("isUS cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localIsUS);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSsnTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ssn", xmlWriter);
                             

                                          if (localSsn==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ssn cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSsn);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSignatoryToUSPersonTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "signatoryToUSPerson", xmlWriter);
                             

                                          if (localSignatoryToUSPerson==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("signatoryToUSPerson cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSignatoryToUSPerson);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTaxLiabliltyUSTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "taxLiabliltyUS", xmlWriter);
                             

                                          if (localTaxLiabliltyUS==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("taxLiabliltyUS cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTaxLiabliltyUS);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localW8BenSignUpDateTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "w8BenSignUpDate", xmlWriter);
                             

                                          if (localW8BenSignUpDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("w8BenSignUpDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localW8BenSignUpDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUsIndiciaFoundTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "usIndiciaFound", xmlWriter);
                             

                                          if (localUsIndiciaFound==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("usIndiciaFound cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUsIndiciaFound);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localBirthCntryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "birthCntry"));
                                 
                                        if (localBirthCntry != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBirthCntry));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("birthCntry cannot be null!!");
                                        }
                                    } if (localCustClassDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custClassDate"));
                                 
                                        if (localCustClassDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustClassDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custClassDate cannot be null!!");
                                        }
                                    } if (localCustFATCAClassTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custFATCAClass"));
                                 
                                        if (localCustFATCAClass != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustFATCAClass));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custFATCAClass cannot be null!!");
                                        }
                                    } if (localDocCollectedTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "docCollected"));
                                 
                                        if (localDocCollected != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDocCollected));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("docCollected cannot be null!!");
                                        }
                                    } if (localIsUSTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "isUS"));
                                 
                                        if (localIsUS != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIsUS));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("isUS cannot be null!!");
                                        }
                                    } if (localSsnTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ssn"));
                                 
                                        if (localSsn != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSsn));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ssn cannot be null!!");
                                        }
                                    } if (localSignatoryToUSPersonTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "signatoryToUSPerson"));
                                 
                                        if (localSignatoryToUSPerson != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSignatoryToUSPerson));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("signatoryToUSPerson cannot be null!!");
                                        }
                                    } if (localTaxLiabliltyUSTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "taxLiabliltyUS"));
                                 
                                        if (localTaxLiabliltyUS != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTaxLiabliltyUS));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("taxLiabliltyUS cannot be null!!");
                                        }
                                    } if (localW8BenSignUpDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "w8BenSignUpDate"));
                                 
                                        if (localW8BenSignUpDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localW8BenSignUpDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("w8BenSignUpDate cannot be null!!");
                                        }
                                    } if (localUsIndiciaFoundTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "usIndiciaFound"));
                                 
                                        if (localUsIndiciaFound != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUsIndiciaFound));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("usIndiciaFound cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static FatcaDetails_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            FatcaDetails_type0 object =
                new FatcaDetails_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"fatcaDetails_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (FatcaDetails_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","birthCntry").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"birthCntry" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBirthCntry(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custClassDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custClassDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustClassDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custFATCAClass").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custFATCAClass" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustFATCAClass(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","docCollected").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"docCollected" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDocCollected(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","isUS").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"isUS" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIsUS(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ssn").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ssn" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSsn(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","signatoryToUSPerson").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"signatoryToUSPerson" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSignatoryToUSPerson(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","taxLiabliltyUS").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"taxLiabliltyUS" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTaxLiabliltyUS(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","w8BenSignUpDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"w8BenSignUpDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setW8BenSignUpDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","usIndiciaFound").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"usIndiciaFound" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUsIndiciaFound(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class AddOnlineAppDataReq_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = AddOnlineAppDataReq_type0
                Namespace URI = http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for AccountClassification
                        */

                        
                                    protected java.lang.String localAccountClassification ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAccountClassificationTracker = false ;

                           public boolean isAccountClassificationSpecified(){
                               return localAccountClassificationTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAccountClassification(){
                               return localAccountClassification;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AccountClassification
                               */
                               public void setAccountClassification(java.lang.String param){
                            localAccountClassificationTracker = param != null;
                                   
                                            this.localAccountClassification=param;
                                    

                               }
                            

                        /**
                        * field for AccountDetails
                        */

                        
                                    protected AccountDetails_type0 localAccountDetails ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAccountDetailsTracker = false ;

                           public boolean isAccountDetailsSpecified(){
                               return localAccountDetailsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return AccountDetails_type0
                           */
                           public  AccountDetails_type0 getAccountDetails(){
                               return localAccountDetails;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AccountDetails
                               */
                               public void setAccountDetails(AccountDetails_type0 param){
                            localAccountDetailsTracker = param != null;
                                   
                                            this.localAccountDetails=param;
                                    

                               }
                            

                        /**
                        * field for AccountHomeBranch
                        */

                        
                                    protected java.lang.String localAccountHomeBranch ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAccountHomeBranchTracker = false ;

                           public boolean isAccountHomeBranchSpecified(){
                               return localAccountHomeBranchTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAccountHomeBranch(){
                               return localAccountHomeBranch;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AccountHomeBranch
                               */
                               public void setAccountHomeBranch(java.lang.String param){
                            localAccountHomeBranchTracker = param != null;
                                   
                                            this.localAccountHomeBranch=param;
                                    

                               }
                            

                        /**
                        * field for AccountOwnership
                        */

                        
                                    protected java.lang.String localAccountOwnership ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAccountOwnershipTracker = false ;

                           public boolean isAccountOwnershipSpecified(){
                               return localAccountOwnershipTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAccountOwnership(){
                               return localAccountOwnership;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AccountOwnership
                               */
                               public void setAccountOwnership(java.lang.String param){
                            localAccountOwnershipTracker = param != null;
                                   
                                            this.localAccountOwnership=param;
                                    

                               }
                            

                        /**
                        * field for Customers
                        */

                        
                                    protected Customers_type0 localCustomers ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustomersTracker = false ;

                           public boolean isCustomersSpecified(){
                               return localCustomersTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Customers_type0
                           */
                           public  Customers_type0 getCustomers(){
                               return localCustomers;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Customers
                               */
                               public void setCustomers(Customers_type0 param){
                            localCustomersTracker = param != null;
                                   
                                            this.localCustomers=param;
                                    

                               }
                            

                        /**
                        * field for DataEntryMode
                        */

                        
                                    protected java.lang.String localDataEntryMode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDataEntryModeTracker = false ;

                           public boolean isDataEntryModeSpecified(){
                               return localDataEntryModeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDataEntryMode(){
                               return localDataEntryMode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DataEntryMode
                               */
                               public void setDataEntryMode(java.lang.String param){
                            localDataEntryModeTracker = param != null;
                                   
                                            this.localDataEntryMode=param;
                                    

                               }
                            

                        /**
                        * field for DeliveryMode
                        */

                        
                                    protected java.lang.String localDeliveryMode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDeliveryModeTracker = false ;

                           public boolean isDeliveryModeSpecified(){
                               return localDeliveryModeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDeliveryMode(){
                               return localDeliveryMode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DeliveryMode
                               */
                               public void setDeliveryMode(java.lang.String param){
                            localDeliveryModeTracker = param != null;
                                   
                                            this.localDeliveryMode=param;
                                    

                               }
                            

                        /**
                        * field for DeliveryPreferences
                        */

                        
                                    protected DeliveryPreferences_type0 localDeliveryPreferences ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDeliveryPreferencesTracker = false ;

                           public boolean isDeliveryPreferencesSpecified(){
                               return localDeliveryPreferencesTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return DeliveryPreferences_type0
                           */
                           public  DeliveryPreferences_type0 getDeliveryPreferences(){
                               return localDeliveryPreferences;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DeliveryPreferences
                               */
                               public void setDeliveryPreferences(DeliveryPreferences_type0 param){
                            localDeliveryPreferencesTracker = param != null;
                                   
                                            this.localDeliveryPreferences=param;
                                    

                               }
                            

                        /**
                        * field for FormAutoGeneration
                        */

                        
                                    protected java.lang.String localFormAutoGeneration ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFormAutoGenerationTracker = false ;

                           public boolean isFormAutoGenerationSpecified(){
                               return localFormAutoGenerationTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFormAutoGeneration(){
                               return localFormAutoGeneration;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FormAutoGeneration
                               */
                               public void setFormAutoGeneration(java.lang.String param){
                            localFormAutoGenerationTracker = param != null;
                                   
                                            this.localFormAutoGeneration=param;
                                    

                               }
                            

                        /**
                        * field for InstantDebitCardFlag
                        */

                        
                                    protected java.lang.String localInstantDebitCardFlag ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localInstantDebitCardFlagTracker = false ;

                           public boolean isInstantDebitCardFlagSpecified(){
                               return localInstantDebitCardFlagTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getInstantDebitCardFlag(){
                               return localInstantDebitCardFlag;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param InstantDebitCardFlag
                               */
                               public void setInstantDebitCardFlag(java.lang.String param){
                            localInstantDebitCardFlagTracker = param != null;
                                   
                                            this.localInstantDebitCardFlag=param;
                                    

                               }
                            

                        /**
                        * field for LodgementRefNo
                        */

                        
                                    protected java.lang.String localLodgementRefNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLodgementRefNoTracker = false ;

                           public boolean isLodgementRefNoSpecified(){
                               return localLodgementRefNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLodgementRefNo(){
                               return localLodgementRefNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LodgementRefNo
                               */
                               public void setLodgementRefNo(java.lang.String param){
                            localLodgementRefNoTracker = param != null;
                                   
                                            this.localLodgementRefNo=param;
                                    

                               }
                            

                        /**
                        * field for ReqMode
                        */

                        
                                    protected java.lang.String localReqMode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localReqModeTracker = false ;

                           public boolean isReqModeSpecified(){
                               return localReqModeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getReqMode(){
                               return localReqMode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ReqMode
                               */
                               public void setReqMode(java.lang.String param){
                            localReqModeTracker = param != null;
                                   
                                            this.localReqMode=param;
                                    

                               }
                            

                        /**
                        * field for RequestDateTime
                        */

                        
                                    protected java.lang.String localRequestDateTime ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRequestDateTimeTracker = false ;

                           public boolean isRequestDateTimeSpecified(){
                               return localRequestDateTimeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRequestDateTime(){
                               return localRequestDateTime;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RequestDateTime
                               */
                               public void setRequestDateTime(java.lang.String param){
                            localRequestDateTimeTracker = param != null;
                                   
                                            this.localRequestDateTime=param;
                                    

                               }
                            

                        /**
                        * field for SeqRefNo
                        */

                        
                                    protected java.lang.String localSeqRefNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSeqRefNoTracker = false ;

                           public boolean isSeqRefNoSpecified(){
                               return localSeqRefNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSeqRefNo(){
                               return localSeqRefNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SeqRefNo
                               */
                               public void setSeqRefNo(java.lang.String param){
                            localSeqRefNoTracker = param != null;
                                   
                                            this.localSeqRefNo=param;
                                    

                               }
                            

                        /**
                        * field for SourceChannel
                        */

                        
                                    protected java.lang.String localSourceChannel ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSourceChannelTracker = false ;

                           public boolean isSourceChannelSpecified(){
                               return localSourceChannelTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSourceChannel(){
                               return localSourceChannel;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SourceChannel
                               */
                               public void setSourceChannel(java.lang.String param){
                            localSourceChannelTracker = param != null;
                                   
                                            this.localSourceChannel=param;
                                    

                               }
                            

                        /**
                        * field for SourcingCentre
                        */

                        
                                    protected java.lang.String localSourcingCentre ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSourcingCentreTracker = false ;

                           public boolean isSourcingCentreSpecified(){
                               return localSourcingCentreTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSourcingCentre(){
                               return localSourcingCentre;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SourcingCentre
                               */
                               public void setSourcingCentre(java.lang.String param){
                            localSourcingCentreTracker = param != null;
                                   
                                            this.localSourcingCentre=param;
                                    

                               }
                            

                        /**
                        * field for StandingInstructions
                        */

                        
                                    protected StandingInstructions_type0 localStandingInstructions ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localStandingInstructionsTracker = false ;

                           public boolean isStandingInstructionsSpecified(){
                               return localStandingInstructionsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return StandingInstructions_type0
                           */
                           public  StandingInstructions_type0 getStandingInstructions(){
                               return localStandingInstructions;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param StandingInstructions
                               */
                               public void setStandingInstructions(StandingInstructions_type0 param){
                            localStandingInstructionsTracker = param != null;
                                   
                                            this.localStandingInstructions=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":AddOnlineAppDataReq_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "AddOnlineAppDataReq_type0",
                           xmlWriter);
                   }

               
                   }
                if (localAccountClassificationTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "accountClassification", xmlWriter);
                             

                                          if (localAccountClassification==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("accountClassification cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAccountClassification);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAccountDetailsTracker){
                                            if (localAccountDetails==null){
                                                 throw new org.apache.axis2.databinding.ADBException("accountDetails cannot be null!!");
                                            }
                                           localAccountDetails.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","accountDetails"),
                                               xmlWriter);
                                        } if (localAccountHomeBranchTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "accountHomeBranch", xmlWriter);
                             

                                          if (localAccountHomeBranch==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("accountHomeBranch cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAccountHomeBranch);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAccountOwnershipTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "accountOwnership", xmlWriter);
                             

                                          if (localAccountOwnership==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("accountOwnership cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAccountOwnership);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustomersTracker){
                                            if (localCustomers==null){
                                                 throw new org.apache.axis2.databinding.ADBException("customers cannot be null!!");
                                            }
                                           localCustomers.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","customers"),
                                               xmlWriter);
                                        } if (localDataEntryModeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "dataEntryMode", xmlWriter);
                             

                                          if (localDataEntryMode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("dataEntryMode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDataEntryMode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDeliveryModeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "deliveryMode", xmlWriter);
                             

                                          if (localDeliveryMode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("deliveryMode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDeliveryMode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDeliveryPreferencesTracker){
                                            if (localDeliveryPreferences==null){
                                                 throw new org.apache.axis2.databinding.ADBException("deliveryPreferences cannot be null!!");
                                            }
                                           localDeliveryPreferences.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","deliveryPreferences"),
                                               xmlWriter);
                                        } if (localFormAutoGenerationTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "formAutoGeneration", xmlWriter);
                             

                                          if (localFormAutoGeneration==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("formAutoGeneration cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFormAutoGeneration);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localInstantDebitCardFlagTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "instantDebitCardFlag", xmlWriter);
                             

                                          if (localInstantDebitCardFlag==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("instantDebitCardFlag cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localInstantDebitCardFlag);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLodgementRefNoTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "lodgementRefNo", xmlWriter);
                             

                                          if (localLodgementRefNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("lodgementRefNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLodgementRefNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localReqModeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "reqMode", xmlWriter);
                             

                                          if (localReqMode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("reqMode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localReqMode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRequestDateTimeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "requestDateTime", xmlWriter);
                             

                                          if (localRequestDateTime==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("requestDateTime cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRequestDateTime);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSeqRefNoTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "seqRefNo", xmlWriter);
                             

                                          if (localSeqRefNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("seqRefNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSeqRefNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSourceChannelTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "sourceChannel", xmlWriter);
                             

                                          if (localSourceChannel==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sourceChannel cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSourceChannel);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSourcingCentreTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "sourcingCentre", xmlWriter);
                             

                                          if (localSourcingCentre==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sourcingCentre cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSourcingCentre);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localStandingInstructionsTracker){
                                            if (localStandingInstructions==null){
                                                 throw new org.apache.axis2.databinding.ADBException("standingInstructions cannot be null!!");
                                            }
                                           localStandingInstructions.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","standingInstructions"),
                                               xmlWriter);
                                        }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localAccountClassificationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "accountClassification"));
                                 
                                        if (localAccountClassification != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAccountClassification));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("accountClassification cannot be null!!");
                                        }
                                    } if (localAccountDetailsTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "accountDetails"));
                            
                            
                                    if (localAccountDetails==null){
                                         throw new org.apache.axis2.databinding.ADBException("accountDetails cannot be null!!");
                                    }
                                    elementList.add(localAccountDetails);
                                } if (localAccountHomeBranchTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "accountHomeBranch"));
                                 
                                        if (localAccountHomeBranch != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAccountHomeBranch));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("accountHomeBranch cannot be null!!");
                                        }
                                    } if (localAccountOwnershipTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "accountOwnership"));
                                 
                                        if (localAccountOwnership != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAccountOwnership));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("accountOwnership cannot be null!!");
                                        }
                                    } if (localCustomersTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "customers"));
                            
                            
                                    if (localCustomers==null){
                                         throw new org.apache.axis2.databinding.ADBException("customers cannot be null!!");
                                    }
                                    elementList.add(localCustomers);
                                } if (localDataEntryModeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "dataEntryMode"));
                                 
                                        if (localDataEntryMode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDataEntryMode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("dataEntryMode cannot be null!!");
                                        }
                                    } if (localDeliveryModeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "deliveryMode"));
                                 
                                        if (localDeliveryMode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDeliveryMode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("deliveryMode cannot be null!!");
                                        }
                                    } if (localDeliveryPreferencesTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "deliveryPreferences"));
                            
                            
                                    if (localDeliveryPreferences==null){
                                         throw new org.apache.axis2.databinding.ADBException("deliveryPreferences cannot be null!!");
                                    }
                                    elementList.add(localDeliveryPreferences);
                                } if (localFormAutoGenerationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "formAutoGeneration"));
                                 
                                        if (localFormAutoGeneration != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFormAutoGeneration));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("formAutoGeneration cannot be null!!");
                                        }
                                    } if (localInstantDebitCardFlagTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "instantDebitCardFlag"));
                                 
                                        if (localInstantDebitCardFlag != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localInstantDebitCardFlag));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("instantDebitCardFlag cannot be null!!");
                                        }
                                    } if (localLodgementRefNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "lodgementRefNo"));
                                 
                                        if (localLodgementRefNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLodgementRefNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("lodgementRefNo cannot be null!!");
                                        }
                                    } if (localReqModeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "reqMode"));
                                 
                                        if (localReqMode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReqMode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("reqMode cannot be null!!");
                                        }
                                    } if (localRequestDateTimeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "requestDateTime"));
                                 
                                        if (localRequestDateTime != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRequestDateTime));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("requestDateTime cannot be null!!");
                                        }
                                    } if (localSeqRefNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "seqRefNo"));
                                 
                                        if (localSeqRefNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSeqRefNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("seqRefNo cannot be null!!");
                                        }
                                    } if (localSourceChannelTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "sourceChannel"));
                                 
                                        if (localSourceChannel != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSourceChannel));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sourceChannel cannot be null!!");
                                        }
                                    } if (localSourcingCentreTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "sourcingCentre"));
                                 
                                        if (localSourcingCentre != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSourcingCentre));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sourcingCentre cannot be null!!");
                                        }
                                    } if (localStandingInstructionsTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "standingInstructions"));
                            
                            
                                    if (localStandingInstructions==null){
                                         throw new org.apache.axis2.databinding.ADBException("standingInstructions cannot be null!!");
                                    }
                                    elementList.add(localStandingInstructions);
                                }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static AddOnlineAppDataReq_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            AddOnlineAppDataReq_type0 object =
                new AddOnlineAppDataReq_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"AddOnlineAppDataReq_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (AddOnlineAppDataReq_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","accountClassification").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"accountClassification" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAccountClassification(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","accountDetails").equals(reader.getName())){
                                
                                                object.setAccountDetails(AccountDetails_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","accountHomeBranch").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"accountHomeBranch" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAccountHomeBranch(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","accountOwnership").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"accountOwnership" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAccountOwnership(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","customers").equals(reader.getName())){
                                
                                                object.setCustomers(Customers_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","dataEntryMode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"dataEntryMode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDataEntryMode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","deliveryMode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"deliveryMode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDeliveryMode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","deliveryPreferences").equals(reader.getName())){
                                
                                                object.setDeliveryPreferences(DeliveryPreferences_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","formAutoGeneration").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"formAutoGeneration" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFormAutoGeneration(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","instantDebitCardFlag").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"instantDebitCardFlag" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setInstantDebitCardFlag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","lodgementRefNo").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"lodgementRefNo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLodgementRefNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","reqMode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"reqMode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReqMode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","requestDateTime").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"requestDateTime" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRequestDateTime(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","seqRefNo").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"seqRefNo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSeqRefNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","sourceChannel").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"sourceChannel" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSourceChannel(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","sourcingCentre").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"sourcingCentre" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSourcingCentre(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","standingInstructions").equals(reader.getName())){
                                
                                                object.setStandingInstructions(StandingInstructions_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class PermanentAddress_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = permanentAddress_type0
                Namespace URI = http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for BuildingName
                        */

                        
                                    protected java.lang.String localBuildingName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBuildingNameTracker = false ;

                           public boolean isBuildingNameSpecified(){
                               return localBuildingNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBuildingName(){
                               return localBuildingName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BuildingName
                               */
                               public void setBuildingName(java.lang.String param){
                            localBuildingNameTracker = param != null;
                                   
                                            this.localBuildingName=param;
                                    

                               }
                            

                        /**
                        * field for City
                        */

                        
                                    protected java.lang.String localCity ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCityTracker = false ;

                           public boolean isCitySpecified(){
                               return localCityTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCity(){
                               return localCity;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param City
                               */
                               public void setCity(java.lang.String param){
                            localCityTracker = param != null;
                                   
                                            this.localCity=param;
                                    

                               }
                            

                        /**
                        * field for CityOthers
                        */

                        
                                    protected java.lang.String localCityOthers ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCityOthersTracker = false ;

                           public boolean isCityOthersSpecified(){
                               return localCityOthersTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCityOthers(){
                               return localCityOthers;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CityOthers
                               */
                               public void setCityOthers(java.lang.String param){
                            localCityOthersTracker = param != null;
                                   
                                            this.localCityOthers=param;
                                    

                               }
                            

                        /**
                        * field for Country
                        */

                        
                                    protected java.lang.String localCountry ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCountryTracker = false ;

                           public boolean isCountrySpecified(){
                               return localCountryTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCountry(){
                               return localCountry;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Country
                               */
                               public void setCountry(java.lang.String param){
                            localCountryTracker = param != null;
                                   
                                            this.localCountry=param;
                                    

                               }
                            

                        /**
                        * field for FlatNo
                        */

                        
                                    protected java.lang.String localFlatNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFlatNoTracker = false ;

                           public boolean isFlatNoSpecified(){
                               return localFlatNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFlatNo(){
                               return localFlatNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FlatNo
                               */
                               public void setFlatNo(java.lang.String param){
                            localFlatNoTracker = param != null;
                                   
                                            this.localFlatNo=param;
                                    

                               }
                            

                        /**
                        * field for SameAS
                        */

                        
                                    protected java.lang.String localSameAS ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSameASTracker = false ;

                           public boolean isSameASSpecified(){
                               return localSameASTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSameAS(){
                               return localSameAS;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SameAS
                               */
                               public void setSameAS(java.lang.String param){
                            localSameASTracker = param != null;
                                   
                                            this.localSameAS=param;
                                    

                               }
                            

                        /**
                        * field for State
                        */

                        
                                    protected java.lang.String localState ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localStateTracker = false ;

                           public boolean isStateSpecified(){
                               return localStateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getState(){
                               return localState;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param State
                               */
                               public void setState(java.lang.String param){
                            localStateTracker = param != null;
                                   
                                            this.localState=param;
                                    

                               }
                            

                        /**
                        * field for StateOther
                        */

                        
                                    protected java.lang.String localStateOther ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localStateOtherTracker = false ;

                           public boolean isStateOtherSpecified(){
                               return localStateOtherTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getStateOther(){
                               return localStateOther;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param StateOther
                               */
                               public void setStateOther(java.lang.String param){
                            localStateOtherTracker = param != null;
                                   
                                            this.localStateOther=param;
                                    

                               }
                            

                        /**
                        * field for Street
                        */

                        
                                    protected java.lang.String localStreet ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localStreetTracker = false ;

                           public boolean isStreetSpecified(){
                               return localStreetTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getStreet(){
                               return localStreet;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Street
                               */
                               public void setStreet(java.lang.String param){
                            localStreetTracker = param != null;
                                   
                                            this.localStreet=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":permanentAddress_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "permanentAddress_type0",
                           xmlWriter);
                   }

               
                   }
                if (localBuildingNameTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "buildingName", xmlWriter);
                             

                                          if (localBuildingName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("buildingName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBuildingName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCityTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "city", xmlWriter);
                             

                                          if (localCity==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("city cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCity);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCityOthersTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "cityOthers", xmlWriter);
                             

                                          if (localCityOthers==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("cityOthers cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCityOthers);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCountryTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "country", xmlWriter);
                             

                                          if (localCountry==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("country cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCountry);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFlatNoTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "flatNo", xmlWriter);
                             

                                          if (localFlatNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("flatNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFlatNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSameASTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "sameAS", xmlWriter);
                             

                                          if (localSameAS==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sameAS cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSameAS);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localStateTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "state", xmlWriter);
                             

                                          if (localState==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("state cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localState);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localStateOtherTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "stateOther", xmlWriter);
                             

                                          if (localStateOther==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("stateOther cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localStateOther);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localStreetTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "street", xmlWriter);
                             

                                          if (localStreet==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("street cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localStreet);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localBuildingNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "buildingName"));
                                 
                                        if (localBuildingName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBuildingName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("buildingName cannot be null!!");
                                        }
                                    } if (localCityTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "city"));
                                 
                                        if (localCity != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCity));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("city cannot be null!!");
                                        }
                                    } if (localCityOthersTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "cityOthers"));
                                 
                                        if (localCityOthers != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCityOthers));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("cityOthers cannot be null!!");
                                        }
                                    } if (localCountryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "country"));
                                 
                                        if (localCountry != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCountry));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("country cannot be null!!");
                                        }
                                    } if (localFlatNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "flatNo"));
                                 
                                        if (localFlatNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFlatNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("flatNo cannot be null!!");
                                        }
                                    } if (localSameASTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "sameAS"));
                                 
                                        if (localSameAS != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSameAS));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sameAS cannot be null!!");
                                        }
                                    } if (localStateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "state"));
                                 
                                        if (localState != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localState));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("state cannot be null!!");
                                        }
                                    } if (localStateOtherTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "stateOther"));
                                 
                                        if (localStateOther != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localStateOther));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("stateOther cannot be null!!");
                                        }
                                    } if (localStreetTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "street"));
                                 
                                        if (localStreet != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localStreet));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("street cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static PermanentAddress_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            PermanentAddress_type0 object =
                new PermanentAddress_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"permanentAddress_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (PermanentAddress_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","buildingName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"buildingName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBuildingName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","city").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"city" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCity(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","cityOthers").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"cityOthers" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCityOthers(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","country").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"country" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCountry(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","flatNo").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"flatNo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFlatNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","sameAS").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"sameAS" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSameAS(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","state").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"state" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setState(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","stateOther").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"stateOther" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setStateOther(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","street").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"street" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setStreet(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class AddOnlineLendingApplicationDtlsRes_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = addOnlineLendingApplicationDtlsRes_type0
                Namespace URI = http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for ProductResDtls
                        */

                        
                                    protected ProductResDtls_type0 localProductResDtls ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localProductResDtlsTracker = false ;

                           public boolean isProductResDtlsSpecified(){
                               return localProductResDtlsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return ProductResDtls_type0
                           */
                           public  ProductResDtls_type0 getProductResDtls(){
                               return localProductResDtls;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ProductResDtls
                               */
                               public void setProductResDtls(ProductResDtls_type0 param){
                            localProductResDtlsTracker = param != null;
                                   
                                            this.localProductResDtls=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":addOnlineLendingApplicationDtlsRes_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "addOnlineLendingApplicationDtlsRes_type0",
                           xmlWriter);
                   }

               
                   }
                if (localProductResDtlsTracker){
                                            if (localProductResDtls==null){
                                                 throw new org.apache.axis2.databinding.ADBException("productResDtls cannot be null!!");
                                            }
                                           localProductResDtls.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","productResDtls"),
                                               xmlWriter);
                                        }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localProductResDtlsTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "productResDtls"));
                            
                            
                                    if (localProductResDtls==null){
                                         throw new org.apache.axis2.databinding.ADBException("productResDtls cannot be null!!");
                                    }
                                    elementList.add(localProductResDtls);
                                }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static AddOnlineLendingApplicationDtlsRes_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            AddOnlineLendingApplicationDtlsRes_type0 object =
                new AddOnlineLendingApplicationDtlsRes_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"addOnlineLendingApplicationDtlsRes_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (AddOnlineLendingApplicationDtlsRes_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","productResDtls").equals(reader.getName())){
                                
                                                object.setProductResDtls(ProductResDtls_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class StandingInstructions_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = standingInstructions_type0
                Namespace URI = http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for SiForRegTransfer
                        */

                        
                                    protected SiForRegTransfer_type0 localSiForRegTransfer ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSiForRegTransferTracker = false ;

                           public boolean isSiForRegTransferSpecified(){
                               return localSiForRegTransferTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return SiForRegTransfer_type0
                           */
                           public  SiForRegTransfer_type0 getSiForRegTransfer(){
                               return localSiForRegTransfer;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SiForRegTransfer
                               */
                               public void setSiForRegTransfer(SiForRegTransfer_type0 param){
                            localSiForRegTransferTracker = param != null;
                                   
                                            this.localSiForRegTransfer=param;
                                    

                               }
                            

                        /**
                        * field for SweepInstructions
                        */

                        
                                    protected SweepInstructions_type0 localSweepInstructions ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSweepInstructionsTracker = false ;

                           public boolean isSweepInstructionsSpecified(){
                               return localSweepInstructionsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return SweepInstructions_type0
                           */
                           public  SweepInstructions_type0 getSweepInstructions(){
                               return localSweepInstructions;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SweepInstructions
                               */
                               public void setSweepInstructions(SweepInstructions_type0 param){
                            localSweepInstructionsTracker = param != null;
                                   
                                            this.localSweepInstructions=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":standingInstructions_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "standingInstructions_type0",
                           xmlWriter);
                   }

               
                   }
                if (localSiForRegTransferTracker){
                                            if (localSiForRegTransfer==null){
                                                 throw new org.apache.axis2.databinding.ADBException("siForRegTransfer cannot be null!!");
                                            }
                                           localSiForRegTransfer.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","siForRegTransfer"),
                                               xmlWriter);
                                        } if (localSweepInstructionsTracker){
                                            if (localSweepInstructions==null){
                                                 throw new org.apache.axis2.databinding.ADBException("sweepInstructions cannot be null!!");
                                            }
                                           localSweepInstructions.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","sweepInstructions"),
                                               xmlWriter);
                                        }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localSiForRegTransferTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "siForRegTransfer"));
                            
                            
                                    if (localSiForRegTransfer==null){
                                         throw new org.apache.axis2.databinding.ADBException("siForRegTransfer cannot be null!!");
                                    }
                                    elementList.add(localSiForRegTransfer);
                                } if (localSweepInstructionsTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "sweepInstructions"));
                            
                            
                                    if (localSweepInstructions==null){
                                         throw new org.apache.axis2.databinding.ADBException("sweepInstructions cannot be null!!");
                                    }
                                    elementList.add(localSweepInstructions);
                                }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static StandingInstructions_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            StandingInstructions_type0 object =
                new StandingInstructions_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"standingInstructions_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (StandingInstructions_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","siForRegTransfer").equals(reader.getName())){
                                
                                                object.setSiForRegTransfer(SiForRegTransfer_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","sweepInstructions").equals(reader.getName())){
                                
                                                object.setSweepInstructions(SweepInstructions_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class DebitCard_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = debitCard_type0
                Namespace URI = http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for CardType
                        */

                        
                                    protected java.lang.String localCardType ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCardTypeTracker = false ;

                           public boolean isCardTypeSpecified(){
                               return localCardTypeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCardType(){
                               return localCardType;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CardType
                               */
                               public void setCardType(java.lang.String param){
                            localCardTypeTracker = param != null;
                                   
                                            this.localCardType=param;
                                    

                               }
                            

                        /**
                        * field for EmbossName
                        */

                        
                                    protected java.lang.String localEmbossName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmbossNameTracker = false ;

                           public boolean isEmbossNameSpecified(){
                               return localEmbossNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEmbossName(){
                               return localEmbossName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EmbossName
                               */
                               public void setEmbossName(java.lang.String param){
                            localEmbossNameTracker = param != null;
                                   
                                            this.localEmbossName=param;
                                    

                               }
                            

                        /**
                        * field for ExistingCardNo
                        */

                        
                                    protected java.lang.String localExistingCardNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localExistingCardNoTracker = false ;

                           public boolean isExistingCardNoSpecified(){
                               return localExistingCardNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getExistingCardNo(){
                               return localExistingCardNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ExistingCardNo
                               */
                               public void setExistingCardNo(java.lang.String param){
                            localExistingCardNoTracker = param != null;
                                   
                                            this.localExistingCardNo=param;
                                    

                               }
                            

                        /**
                        * field for GrpType
                        */

                        
                                    protected java.lang.String localGrpType ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localGrpTypeTracker = false ;

                           public boolean isGrpTypeSpecified(){
                               return localGrpTypeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getGrpType(){
                               return localGrpType;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param GrpType
                               */
                               public void setGrpType(java.lang.String param){
                            localGrpTypeTracker = param != null;
                                   
                                            this.localGrpType=param;
                                    

                               }
                            

                        /**
                        * field for NewCard
                        */

                        
                                    protected java.lang.String localNewCard ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNewCardTracker = false ;

                           public boolean isNewCardSpecified(){
                               return localNewCardTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNewCard(){
                               return localNewCard;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NewCard
                               */
                               public void setNewCard(java.lang.String param){
                            localNewCardTracker = param != null;
                                   
                                            this.localNewCard=param;
                                    

                               }
                            

                        /**
                        * field for ProductGrp
                        */

                        
                                    protected java.lang.String localProductGrp ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localProductGrpTracker = false ;

                           public boolean isProductGrpSpecified(){
                               return localProductGrpTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getProductGrp(){
                               return localProductGrp;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ProductGrp
                               */
                               public void setProductGrp(java.lang.String param){
                            localProductGrpTracker = param != null;
                                   
                                            this.localProductGrp=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":debitCard_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "debitCard_type0",
                           xmlWriter);
                   }

               
                   }
                if (localCardTypeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "cardType", xmlWriter);
                             

                                          if (localCardType==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("cardType cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCardType);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEmbossNameTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "embossName", xmlWriter);
                             

                                          if (localEmbossName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("embossName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEmbossName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localExistingCardNoTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "existingCardNo", xmlWriter);
                             

                                          if (localExistingCardNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("existingCardNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localExistingCardNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localGrpTypeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "grpType", xmlWriter);
                             

                                          if (localGrpType==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("grpType cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localGrpType);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNewCardTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "newCard", xmlWriter);
                             

                                          if (localNewCard==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("newCard cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNewCard);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localProductGrpTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "productGrp", xmlWriter);
                             

                                          if (localProductGrp==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("productGrp cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localProductGrp);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localCardTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "cardType"));
                                 
                                        if (localCardType != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCardType));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("cardType cannot be null!!");
                                        }
                                    } if (localEmbossNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "embossName"));
                                 
                                        if (localEmbossName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmbossName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("embossName cannot be null!!");
                                        }
                                    } if (localExistingCardNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "existingCardNo"));
                                 
                                        if (localExistingCardNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localExistingCardNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("existingCardNo cannot be null!!");
                                        }
                                    } if (localGrpTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "grpType"));
                                 
                                        if (localGrpType != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localGrpType));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("grpType cannot be null!!");
                                        }
                                    } if (localNewCardTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "newCard"));
                                 
                                        if (localNewCard != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNewCard));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("newCard cannot be null!!");
                                        }
                                    } if (localProductGrpTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "productGrp"));
                                 
                                        if (localProductGrp != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localProductGrp));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("productGrp cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static DebitCard_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            DebitCard_type0 object =
                new DebitCard_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"debitCard_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (DebitCard_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","cardType").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"cardType" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCardType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","embossName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"embossName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEmbossName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","existingCardNo").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"existingCardNo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setExistingCardNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","grpType").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"grpType" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setGrpType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","newCard").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"newCard" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNewCard(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","productGrp").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"productGrp" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setProductGrp(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class Document_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = document_type0
                Namespace URI = http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for DocType
                        */

                        
                                    protected java.lang.String localDocType ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDocTypeTracker = false ;

                           public boolean isDocTypeSpecified(){
                               return localDocTypeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDocType(){
                               return localDocType;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DocType
                               */
                               public void setDocType(java.lang.String param){
                            localDocTypeTracker = param != null;
                                   
                                            this.localDocType=param;
                                    

                               }
                            

                        /**
                        * field for DocumentIndex
                        */

                        
                                    protected java.lang.String localDocumentIndex ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDocumentIndexTracker = false ;

                           public boolean isDocumentIndexSpecified(){
                               return localDocumentIndexTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDocumentIndex(){
                               return localDocumentIndex;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DocumentIndex
                               */
                               public void setDocumentIndex(java.lang.String param){
                            localDocumentIndexTracker = param != null;
                                   
                                            this.localDocumentIndex=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":document_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "document_type0",
                           xmlWriter);
                   }

               
                   }
                if (localDocTypeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "docType", xmlWriter);
                             

                                          if (localDocType==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("docType cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDocType);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDocumentIndexTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "documentIndex", xmlWriter);
                             

                                          if (localDocumentIndex==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("documentIndex cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDocumentIndex);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localDocTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "docType"));
                                 
                                        if (localDocType != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDocType));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("docType cannot be null!!");
                                        }
                                    } if (localDocumentIndexTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "documentIndex"));
                                 
                                        if (localDocumentIndex != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDocumentIndex));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("documentIndex cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static Document_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            Document_type0 object =
                new Document_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"document_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (Document_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","docType").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"docType" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDocType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","documentIndex").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"documentIndex" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDocumentIndex(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class CutomerInformation_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = cutomerInformation_type0
                Namespace URI = http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for BankingRelation
                        */

                        
                                    protected BankingRelation_type0 localBankingRelation ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBankingRelationTracker = false ;

                           public boolean isBankingRelationSpecified(){
                               return localBankingRelationTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return BankingRelation_type0
                           */
                           public  BankingRelation_type0 getBankingRelation(){
                               return localBankingRelation;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BankingRelation
                               */
                               public void setBankingRelation(BankingRelation_type0 param){
                            localBankingRelationTracker = param != null;
                                   
                                            this.localBankingRelation=param;
                                    

                               }
                            

                        /**
                        * field for CutomerPersonalInformation
                        */

                        
                                    protected CutomerPersonalInformation_type0 localCutomerPersonalInformation ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCutomerPersonalInformationTracker = false ;

                           public boolean isCutomerPersonalInformationSpecified(){
                               return localCutomerPersonalInformationTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return CutomerPersonalInformation_type0
                           */
                           public  CutomerPersonalInformation_type0 getCutomerPersonalInformation(){
                               return localCutomerPersonalInformation;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CutomerPersonalInformation
                               */
                               public void setCutomerPersonalInformation(CutomerPersonalInformation_type0 param){
                            localCutomerPersonalInformationTracker = param != null;
                                   
                                            this.localCutomerPersonalInformation=param;
                                    

                               }
                            

                        /**
                        * field for Document
                        * This was an Array!
                        */

                        
                                    protected Document_type0[] localDocument ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDocumentTracker = false ;

                           public boolean isDocumentSpecified(){
                               return localDocumentTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Document_type0[]
                           */
                           public  Document_type0[] getDocument(){
                               return localDocument;
                           }

                           
                        


                               
                              /**
                               * validate the array for Document
                               */
                              protected void validateDocument(Document_type0[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param Document
                              */
                              public void setDocument(Document_type0[] param){
                              
                                   validateDocument(param);

                               localDocumentTracker = param != null;
                                      
                                      this.localDocument=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param Document_type0
                             */
                             public void addDocument(Document_type0 param){
                                   if (localDocument == null){
                                   localDocument = new Document_type0[]{};
                                   }

                            
                                 //update the setting tracker
                                localDocumentTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localDocument);
                               list.add(param);
                               this.localDocument =
                             (Document_type0[])list.toArray(
                            new Document_type0[list.size()]);

                             }
                             

                        /**
                        * field for ExpectedRelationShipType
                        */

                        
                                    protected ExpectedRelationShipType_type0 localExpectedRelationShipType ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localExpectedRelationShipTypeTracker = false ;

                           public boolean isExpectedRelationShipTypeSpecified(){
                               return localExpectedRelationShipTypeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return ExpectedRelationShipType_type0
                           */
                           public  ExpectedRelationShipType_type0 getExpectedRelationShipType(){
                               return localExpectedRelationShipType;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ExpectedRelationShipType
                               */
                               public void setExpectedRelationShipType(ExpectedRelationShipType_type0 param){
                            localExpectedRelationShipTypeTracker = param != null;
                                   
                                            this.localExpectedRelationShipType=param;
                                    

                               }
                            

                        /**
                        * field for FatcaDetails
                        */

                        
                                    protected FatcaDetails_type0 localFatcaDetails ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFatcaDetailsTracker = false ;

                           public boolean isFatcaDetailsSpecified(){
                               return localFatcaDetailsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return FatcaDetails_type0
                           */
                           public  FatcaDetails_type0 getFatcaDetails(){
                               return localFatcaDetails;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FatcaDetails
                               */
                               public void setFatcaDetails(FatcaDetails_type0 param){
                            localFatcaDetailsTracker = param != null;
                                   
                                            this.localFatcaDetails=param;
                                    

                               }
                            

                        /**
                        * field for GeneralInfo
                        */

                        
                                    protected GeneralInfo_type0 localGeneralInfo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localGeneralInfoTracker = false ;

                           public boolean isGeneralInfoSpecified(){
                               return localGeneralInfoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return GeneralInfo_type0
                           */
                           public  GeneralInfo_type0 getGeneralInfo(){
                               return localGeneralInfo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param GeneralInfo
                               */
                               public void setGeneralInfo(GeneralInfo_type0 param){
                            localGeneralInfoTracker = param != null;
                                   
                                            this.localGeneralInfo=param;
                                    

                               }
                            

                        /**
                        * field for InternalDetails
                        */

                        
                                    protected InternalDetails_type0 localInternalDetails ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localInternalDetailsTracker = false ;

                           public boolean isInternalDetailsSpecified(){
                               return localInternalDetailsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return InternalDetails_type0
                           */
                           public  InternalDetails_type0 getInternalDetails(){
                               return localInternalDetails;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param InternalDetails
                               */
                               public void setInternalDetails(InternalDetails_type0 param){
                            localInternalDetailsTracker = param != null;
                                   
                                            this.localInternalDetails=param;
                                    

                               }
                            

                        /**
                        * field for RiskAssessment
                        */

                        
                                    protected RiskAssessment_type0 localRiskAssessment ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRiskAssessmentTracker = false ;

                           public boolean isRiskAssessmentSpecified(){
                               return localRiskAssessmentTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return RiskAssessment_type0
                           */
                           public  RiskAssessment_type0 getRiskAssessment(){
                               return localRiskAssessment;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RiskAssessment
                               */
                               public void setRiskAssessment(RiskAssessment_type0 param){
                            localRiskAssessmentTracker = param != null;
                                   
                                            this.localRiskAssessment=param;
                                    

                               }
                            

                        /**
                        * field for SignOff
                        */

                        
                                    protected SignOff_type0 localSignOff ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSignOffTracker = false ;

                           public boolean isSignOffSpecified(){
                               return localSignOffTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return SignOff_type0
                           */
                           public  SignOff_type0 getSignOff(){
                               return localSignOff;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SignOff
                               */
                               public void setSignOff(SignOff_type0 param){
                            localSignOffTracker = param != null;
                                   
                                            this.localSignOff=param;
                                    

                               }
                            

                        /**
                        * field for IKYC
                        */

                        
                                    protected IKYC_type0 localIKYC ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIKYCTracker = false ;

                           public boolean isIKYCSpecified(){
                               return localIKYCTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return IKYC_type0
                           */
                           public  IKYC_type0 getIKYC(){
                               return localIKYC;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param IKYC
                               */
                               public void setIKYC(IKYC_type0 param){
                            localIKYCTracker = param != null;
                                   
                                            this.localIKYC=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":cutomerInformation_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "cutomerInformation_type0",
                           xmlWriter);
                   }

               
                   }
                if (localBankingRelationTracker){
                                            if (localBankingRelation==null){
                                                 throw new org.apache.axis2.databinding.ADBException("bankingRelation cannot be null!!");
                                            }
                                           localBankingRelation.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","bankingRelation"),
                                               xmlWriter);
                                        } if (localCutomerPersonalInformationTracker){
                                            if (localCutomerPersonalInformation==null){
                                                 throw new org.apache.axis2.databinding.ADBException("cutomerPersonalInformation cannot be null!!");
                                            }
                                           localCutomerPersonalInformation.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","cutomerPersonalInformation"),
                                               xmlWriter);
                                        } if (localDocumentTracker){
                                       if (localDocument!=null){
                                            for (int i = 0;i < localDocument.length;i++){
                                                if (localDocument[i] != null){
                                                 localDocument[i].serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","document"),
                                                           xmlWriter);
                                                } else {
                                                   
                                                        // we don't have to do any thing since minOccures is zero
                                                    
                                                }

                                            }
                                     } else {
                                        
                                               throw new org.apache.axis2.databinding.ADBException("document cannot be null!!");
                                        
                                    }
                                 } if (localExpectedRelationShipTypeTracker){
                                            if (localExpectedRelationShipType==null){
                                                 throw new org.apache.axis2.databinding.ADBException("expectedRelationShipType cannot be null!!");
                                            }
                                           localExpectedRelationShipType.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","expectedRelationShipType"),
                                               xmlWriter);
                                        } if (localFatcaDetailsTracker){
                                            if (localFatcaDetails==null){
                                                 throw new org.apache.axis2.databinding.ADBException("fatcaDetails cannot be null!!");
                                            }
                                           localFatcaDetails.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","fatcaDetails"),
                                               xmlWriter);
                                        } if (localGeneralInfoTracker){
                                            if (localGeneralInfo==null){
                                                 throw new org.apache.axis2.databinding.ADBException("generalInfo cannot be null!!");
                                            }
                                           localGeneralInfo.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","generalInfo"),
                                               xmlWriter);
                                        } if (localInternalDetailsTracker){
                                            if (localInternalDetails==null){
                                                 throw new org.apache.axis2.databinding.ADBException("internalDetails cannot be null!!");
                                            }
                                           localInternalDetails.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","internalDetails"),
                                               xmlWriter);
                                        } if (localRiskAssessmentTracker){
                                            if (localRiskAssessment==null){
                                                 throw new org.apache.axis2.databinding.ADBException("riskAssessment cannot be null!!");
                                            }
                                           localRiskAssessment.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","riskAssessment"),
                                               xmlWriter);
                                        } if (localSignOffTracker){
                                            if (localSignOff==null){
                                                 throw new org.apache.axis2.databinding.ADBException("signOff cannot be null!!");
                                            }
                                           localSignOff.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","signOff"),
                                               xmlWriter);
                                        } if (localIKYCTracker){
                                            if (localIKYC==null){
                                                 throw new org.apache.axis2.databinding.ADBException("iKYC cannot be null!!");
                                            }
                                           localIKYC.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","iKYC"),
                                               xmlWriter);
                                        }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localBankingRelationTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "bankingRelation"));
                            
                            
                                    if (localBankingRelation==null){
                                         throw new org.apache.axis2.databinding.ADBException("bankingRelation cannot be null!!");
                                    }
                                    elementList.add(localBankingRelation);
                                } if (localCutomerPersonalInformationTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "cutomerPersonalInformation"));
                            
                            
                                    if (localCutomerPersonalInformation==null){
                                         throw new org.apache.axis2.databinding.ADBException("cutomerPersonalInformation cannot be null!!");
                                    }
                                    elementList.add(localCutomerPersonalInformation);
                                } if (localDocumentTracker){
                             if (localDocument!=null) {
                                 for (int i = 0;i < localDocument.length;i++){

                                    if (localDocument[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                          "document"));
                                         elementList.add(localDocument[i]);
                                    } else {
                                        
                                                // nothing to do
                                            
                                    }

                                 }
                             } else {
                                 
                                        throw new org.apache.axis2.databinding.ADBException("document cannot be null!!");
                                    
                             }

                        } if (localExpectedRelationShipTypeTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "expectedRelationShipType"));
                            
                            
                                    if (localExpectedRelationShipType==null){
                                         throw new org.apache.axis2.databinding.ADBException("expectedRelationShipType cannot be null!!");
                                    }
                                    elementList.add(localExpectedRelationShipType);
                                } if (localFatcaDetailsTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "fatcaDetails"));
                            
                            
                                    if (localFatcaDetails==null){
                                         throw new org.apache.axis2.databinding.ADBException("fatcaDetails cannot be null!!");
                                    }
                                    elementList.add(localFatcaDetails);
                                } if (localGeneralInfoTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "generalInfo"));
                            
                            
                                    if (localGeneralInfo==null){
                                         throw new org.apache.axis2.databinding.ADBException("generalInfo cannot be null!!");
                                    }
                                    elementList.add(localGeneralInfo);
                                } if (localInternalDetailsTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "internalDetails"));
                            
                            
                                    if (localInternalDetails==null){
                                         throw new org.apache.axis2.databinding.ADBException("internalDetails cannot be null!!");
                                    }
                                    elementList.add(localInternalDetails);
                                } if (localRiskAssessmentTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "riskAssessment"));
                            
                            
                                    if (localRiskAssessment==null){
                                         throw new org.apache.axis2.databinding.ADBException("riskAssessment cannot be null!!");
                                    }
                                    elementList.add(localRiskAssessment);
                                } if (localSignOffTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "signOff"));
                            
                            
                                    if (localSignOff==null){
                                         throw new org.apache.axis2.databinding.ADBException("signOff cannot be null!!");
                                    }
                                    elementList.add(localSignOff);
                                } if (localIKYCTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "iKYC"));
                            
                            
                                    if (localIKYC==null){
                                         throw new org.apache.axis2.databinding.ADBException("iKYC cannot be null!!");
                                    }
                                    elementList.add(localIKYC);
                                }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static CutomerInformation_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            CutomerInformation_type0 object =
                new CutomerInformation_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"cutomerInformation_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (CutomerInformation_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                        java.util.ArrayList list3 = new java.util.ArrayList();
                    
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","bankingRelation").equals(reader.getName())){
                                
                                                object.setBankingRelation(BankingRelation_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","cutomerPersonalInformation").equals(reader.getName())){
                                
                                                object.setCutomerPersonalInformation(CutomerPersonalInformation_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","document").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    list3.add(Document_type0.Factory.parse(reader));
                                                                
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone3 = false;
                                                        while(!loopDone3){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone3 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","document").equals(reader.getName())){
                                                                    list3.add(Document_type0.Factory.parse(reader));
                                                                        
                                                                }else{
                                                                    loopDone3 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array
                                                        
                                                        object.setDocument((Document_type0[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                Document_type0.class,
                                                                list3));
                                                            
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","expectedRelationShipType").equals(reader.getName())){
                                
                                                object.setExpectedRelationShipType(ExpectedRelationShipType_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","fatcaDetails").equals(reader.getName())){
                                
                                                object.setFatcaDetails(FatcaDetails_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","generalInfo").equals(reader.getName())){
                                
                                                object.setGeneralInfo(GeneralInfo_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","internalDetails").equals(reader.getName())){
                                
                                                object.setInternalDetails(InternalDetails_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","riskAssessment").equals(reader.getName())){
                                
                                                object.setRiskAssessment(RiskAssessment_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","signOff").equals(reader.getName())){
                                
                                                object.setSignOff(SignOff_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","iKYC").equals(reader.getName())){
                                
                                                object.setIKYC(IKYC_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class SweepInstructions_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = sweepInstructions_type0
                Namespace URI = http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for InAmt
                        */

                        
                                    protected java.lang.String localInAmt ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localInAmtTracker = false ;

                           public boolean isInAmtSpecified(){
                               return localInAmtTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getInAmt(){
                               return localInAmt;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param InAmt
                               */
                               public void setInAmt(java.lang.String param){
                            localInAmtTracker = param != null;
                                   
                                            this.localInAmt=param;
                                    

                               }
                            

                        /**
                        * field for InCreditAcc
                        */

                        
                                    protected java.lang.String localInCreditAcc ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localInCreditAccTracker = false ;

                           public boolean isInCreditAccSpecified(){
                               return localInCreditAccTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getInCreditAcc(){
                               return localInCreditAcc;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param InCreditAcc
                               */
                               public void setInCreditAcc(java.lang.String param){
                            localInCreditAccTracker = param != null;
                                   
                                            this.localInCreditAcc=param;
                                    

                               }
                            

                        /**
                        * field for InCurr
                        */

                        
                                    protected java.lang.String localInCurr ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localInCurrTracker = false ;

                           public boolean isInCurrSpecified(){
                               return localInCurrTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getInCurr(){
                               return localInCurr;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param InCurr
                               */
                               public void setInCurr(java.lang.String param){
                            localInCurrTracker = param != null;
                                   
                                            this.localInCurr=param;
                                    

                               }
                            

                        /**
                        * field for InDebitAcc
                        */

                        
                                    protected java.lang.String localInDebitAcc ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localInDebitAccTracker = false ;

                           public boolean isInDebitAccSpecified(){
                               return localInDebitAccTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getInDebitAcc(){
                               return localInDebitAcc;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param InDebitAcc
                               */
                               public void setInDebitAcc(java.lang.String param){
                            localInDebitAccTracker = param != null;
                                   
                                            this.localInDebitAcc=param;
                                    

                               }
                            

                        /**
                        * field for OutAboveACC
                        */

                        
                                    protected java.lang.String localOutAboveACC ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOutAboveACCTracker = false ;

                           public boolean isOutAboveACCSpecified(){
                               return localOutAboveACCTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOutAboveACC(){
                               return localOutAboveACC;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OutAboveACC
                               */
                               public void setOutAboveACC(java.lang.String param){
                            localOutAboveACCTracker = param != null;
                                   
                                            this.localOutAboveACC=param;
                                    

                               }
                            

                        /**
                        * field for OutAMT
                        */

                        
                                    protected java.lang.String localOutAMT ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOutAMTTracker = false ;

                           public boolean isOutAMTSpecified(){
                               return localOutAMTTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOutAMT(){
                               return localOutAMT;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OutAMT
                               */
                               public void setOutAMT(java.lang.String param){
                            localOutAMTTracker = param != null;
                                   
                                            this.localOutAMT=param;
                                    

                               }
                            

                        /**
                        * field for OutCurr
                        */

                        
                                    protected java.lang.String localOutCurr ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOutCurrTracker = false ;

                           public boolean isOutCurrSpecified(){
                               return localOutCurrTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOutCurr(){
                               return localOutCurr;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OutCurr
                               */
                               public void setOutCurr(java.lang.String param){
                            localOutCurrTracker = param != null;
                                   
                                            this.localOutCurr=param;
                                    

                               }
                            

                        /**
                        * field for OutDebAccNo
                        */

                        
                                    protected java.lang.String localOutDebAccNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOutDebAccNoTracker = false ;

                           public boolean isOutDebAccNoSpecified(){
                               return localOutDebAccNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOutDebAccNo(){
                               return localOutDebAccNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OutDebAccNo
                               */
                               public void setOutDebAccNo(java.lang.String param){
                            localOutDebAccNoTracker = param != null;
                                   
                                            this.localOutDebAccNo=param;
                                    

                               }
                            

                        /**
                        * field for SweepIn
                        */

                        
                                    protected java.lang.String localSweepIn ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSweepInTracker = false ;

                           public boolean isSweepInSpecified(){
                               return localSweepInTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSweepIn(){
                               return localSweepIn;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SweepIn
                               */
                               public void setSweepIn(java.lang.String param){
                            localSweepInTracker = param != null;
                                   
                                            this.localSweepIn=param;
                                    

                               }
                            

                        /**
                        * field for SweepOut
                        */

                        
                                    protected java.lang.String localSweepOut ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSweepOutTracker = false ;

                           public boolean isSweepOutSpecified(){
                               return localSweepOutTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSweepOut(){
                               return localSweepOut;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SweepOut
                               */
                               public void setSweepOut(java.lang.String param){
                            localSweepOutTracker = param != null;
                                   
                                            this.localSweepOut=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":sweepInstructions_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "sweepInstructions_type0",
                           xmlWriter);
                   }

               
                   }
                if (localInAmtTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "inAmt", xmlWriter);
                             

                                          if (localInAmt==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("inAmt cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localInAmt);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localInCreditAccTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "inCreditAcc", xmlWriter);
                             

                                          if (localInCreditAcc==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("inCreditAcc cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localInCreditAcc);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localInCurrTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "inCurr", xmlWriter);
                             

                                          if (localInCurr==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("inCurr cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localInCurr);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localInDebitAccTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "inDebitAcc", xmlWriter);
                             

                                          if (localInDebitAcc==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("inDebitAcc cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localInDebitAcc);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOutAboveACCTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "outAboveACC", xmlWriter);
                             

                                          if (localOutAboveACC==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("outAboveACC cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOutAboveACC);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOutAMTTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "outAMT", xmlWriter);
                             

                                          if (localOutAMT==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("outAMT cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOutAMT);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOutCurrTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "outCurr", xmlWriter);
                             

                                          if (localOutCurr==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("outCurr cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOutCurr);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOutDebAccNoTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "outDebAccNo", xmlWriter);
                             

                                          if (localOutDebAccNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("outDebAccNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOutDebAccNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSweepInTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "sweepIn", xmlWriter);
                             

                                          if (localSweepIn==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sweepIn cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSweepIn);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSweepOutTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "sweepOut", xmlWriter);
                             

                                          if (localSweepOut==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sweepOut cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSweepOut);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localInAmtTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "inAmt"));
                                 
                                        if (localInAmt != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localInAmt));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("inAmt cannot be null!!");
                                        }
                                    } if (localInCreditAccTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "inCreditAcc"));
                                 
                                        if (localInCreditAcc != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localInCreditAcc));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("inCreditAcc cannot be null!!");
                                        }
                                    } if (localInCurrTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "inCurr"));
                                 
                                        if (localInCurr != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localInCurr));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("inCurr cannot be null!!");
                                        }
                                    } if (localInDebitAccTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "inDebitAcc"));
                                 
                                        if (localInDebitAcc != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localInDebitAcc));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("inDebitAcc cannot be null!!");
                                        }
                                    } if (localOutAboveACCTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "outAboveACC"));
                                 
                                        if (localOutAboveACC != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOutAboveACC));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("outAboveACC cannot be null!!");
                                        }
                                    } if (localOutAMTTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "outAMT"));
                                 
                                        if (localOutAMT != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOutAMT));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("outAMT cannot be null!!");
                                        }
                                    } if (localOutCurrTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "outCurr"));
                                 
                                        if (localOutCurr != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOutCurr));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("outCurr cannot be null!!");
                                        }
                                    } if (localOutDebAccNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "outDebAccNo"));
                                 
                                        if (localOutDebAccNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOutDebAccNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("outDebAccNo cannot be null!!");
                                        }
                                    } if (localSweepInTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "sweepIn"));
                                 
                                        if (localSweepIn != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSweepIn));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sweepIn cannot be null!!");
                                        }
                                    } if (localSweepOutTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "sweepOut"));
                                 
                                        if (localSweepOut != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSweepOut));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sweepOut cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static SweepInstructions_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            SweepInstructions_type0 object =
                new SweepInstructions_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"sweepInstructions_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (SweepInstructions_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","inAmt").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"inAmt" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setInAmt(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","inCreditAcc").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"inCreditAcc" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setInCreditAcc(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","inCurr").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"inCurr" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setInCurr(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","inDebitAcc").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"inDebitAcc" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setInDebitAcc(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","outAboveACC").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"outAboveACC" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOutAboveACC(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","outAMT").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"outAMT" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOutAMT(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","outCurr").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"outCurr" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOutCurr(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","outDebAccNo").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"outDebAccNo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOutDebAccNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","sweepIn").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"sweepIn" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSweepIn(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","sweepOut").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"sweepOut" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSweepOut(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class ProductResDtls_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = productResDtls_type0
                Namespace URI = http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for ProductApps
                        * This was an Array!
                        */

                        
                                    protected ProductApps_type0[] localProductApps ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localProductAppsTracker = false ;

                           public boolean isProductAppsSpecified(){
                               return localProductAppsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return ProductApps_type0[]
                           */
                           public  ProductApps_type0[] getProductApps(){
                               return localProductApps;
                           }

                           
                        


                               
                              /**
                               * validate the array for ProductApps
                               */
                              protected void validateProductApps(ProductApps_type0[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param ProductApps
                              */
                              public void setProductApps(ProductApps_type0[] param){
                              
                                   validateProductApps(param);

                               localProductAppsTracker = param != null;
                                      
                                      this.localProductApps=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param ProductApps_type0
                             */
                             public void addProductApps(ProductApps_type0 param){
                                   if (localProductApps == null){
                                   localProductApps = new ProductApps_type0[]{};
                                   }

                            
                                 //update the setting tracker
                                localProductAppsTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localProductApps);
                               list.add(param);
                               this.localProductApps =
                             (ProductApps_type0[])list.toArray(
                            new ProductApps_type0[list.size()]);

                             }
                             

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":productResDtls_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "productResDtls_type0",
                           xmlWriter);
                   }

               
                   }
                if (localProductAppsTracker){
                                       if (localProductApps!=null){
                                            for (int i = 0;i < localProductApps.length;i++){
                                                if (localProductApps[i] != null){
                                                 localProductApps[i].serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","productApps"),
                                                           xmlWriter);
                                                } else {
                                                   
                                                        // we don't have to do any thing since minOccures is zero
                                                    
                                                }

                                            }
                                     } else {
                                        
                                               throw new org.apache.axis2.databinding.ADBException("productApps cannot be null!!");
                                        
                                    }
                                 }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localProductAppsTracker){
                             if (localProductApps!=null) {
                                 for (int i = 0;i < localProductApps.length;i++){

                                    if (localProductApps[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                          "productApps"));
                                         elementList.add(localProductApps[i]);
                                    } else {
                                        
                                                // nothing to do
                                            
                                    }

                                 }
                             } else {
                                 
                                        throw new org.apache.axis2.databinding.ADBException("productApps cannot be null!!");
                                    
                             }

                        }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static ProductResDtls_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            ProductResDtls_type0 object =
                new ProductResDtls_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"productResDtls_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (ProductResDtls_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                        java.util.ArrayList list1 = new java.util.ArrayList();
                    
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","productApps").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    list1.add(ProductApps_type0.Factory.parse(reader));
                                                                
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone1 = false;
                                                        while(!loopDone1){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone1 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","productApps").equals(reader.getName())){
                                                                    list1.add(ProductApps_type0.Factory.parse(reader));
                                                                        
                                                                }else{
                                                                    loopDone1 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array
                                                        
                                                        object.setProductApps((ProductApps_type0[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                ProductApps_type0.class,
                                                                list1));
                                                            
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class SignOff_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = signOff_type0
                Namespace URI = http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for StaffName
                        */

                        
                                    protected java.lang.String localStaffName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localStaffNameTracker = false ;

                           public boolean isStaffNameSpecified(){
                               return localStaffNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getStaffName(){
                               return localStaffName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param StaffName
                               */
                               public void setStaffName(java.lang.String param){
                            localStaffNameTracker = param != null;
                                   
                                            this.localStaffName=param;
                                    

                               }
                            

                        /**
                        * field for BghName
                        */

                        
                                    protected java.lang.String localBghName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBghNameTracker = false ;

                           public boolean isBghNameSpecified(){
                               return localBghNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBghName(){
                               return localBghName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BghName
                               */
                               public void setBghName(java.lang.String param){
                            localBghNameTracker = param != null;
                                   
                                            this.localBghName=param;
                                    

                               }
                            

                        /**
                        * field for BuhName
                        */

                        
                                    protected java.lang.String localBuhName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBuhNameTracker = false ;

                           public boolean isBuhNameSpecified(){
                               return localBuhNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBuhName(){
                               return localBuhName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BuhName
                               */
                               public void setBuhName(java.lang.String param){
                            localBuhNameTracker = param != null;
                                   
                                            this.localBuhName=param;
                                    

                               }
                            

                        /**
                        * field for ImName
                        */

                        
                                    protected java.lang.String localImName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localImNameTracker = false ;

                           public boolean isImNameSpecified(){
                               return localImNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getImName(){
                               return localImName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ImName
                               */
                               public void setImName(java.lang.String param){
                            localImNameTracker = param != null;
                                   
                                            this.localImName=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":signOff_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "signOff_type0",
                           xmlWriter);
                   }

               
                   }
                if (localStaffNameTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "staffName", xmlWriter);
                             

                                          if (localStaffName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("staffName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localStaffName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBghNameTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "bghName", xmlWriter);
                             

                                          if (localBghName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("bghName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBghName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBuhNameTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "buhName", xmlWriter);
                             

                                          if (localBuhName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("buhName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBuhName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localImNameTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "imName", xmlWriter);
                             

                                          if (localImName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("imName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localImName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localStaffNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "staffName"));
                                 
                                        if (localStaffName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localStaffName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("staffName cannot be null!!");
                                        }
                                    } if (localBghNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "bghName"));
                                 
                                        if (localBghName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBghName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("bghName cannot be null!!");
                                        }
                                    } if (localBuhNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "buhName"));
                                 
                                        if (localBuhName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBuhName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("buhName cannot be null!!");
                                        }
                                    } if (localImNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "imName"));
                                 
                                        if (localImName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localImName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("imName cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static SignOff_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            SignOff_type0 object =
                new SignOff_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"signOff_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (SignOff_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","staffName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"staffName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setStaffName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","bghName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"bghName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBghName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","buhName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"buhName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBuhName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","imName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"imName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setImName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class GeneralInfo_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = generalInfo_type0
                Namespace URI = http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for AccNoCovered
                        */

                        
                                    protected java.lang.String localAccNoCovered ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAccNoCoveredTracker = false ;

                           public boolean isAccNoCoveredSpecified(){
                               return localAccNoCoveredTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAccNoCovered(){
                               return localAccNoCovered;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AccNoCovered
                               */
                               public void setAccNoCovered(java.lang.String param){
                            localAccNoCoveredTracker = param != null;
                                   
                                            this.localAccNoCovered=param;
                                    

                               }
                            

                        /**
                        * field for ExistingSince
                        */

                        
                                    protected java.lang.String localExistingSince ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localExistingSinceTracker = false ;

                           public boolean isExistingSinceSpecified(){
                               return localExistingSinceTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getExistingSince(){
                               return localExistingSince;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ExistingSince
                               */
                               public void setExistingSince(java.lang.String param){
                            localExistingSinceTracker = param != null;
                                   
                                            this.localExistingSince=param;
                                    

                               }
                            

                        /**
                        * field for NumYearsUAE
                        */

                        
                                    protected java.lang.String localNumYearsUAE ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNumYearsUAETracker = false ;

                           public boolean isNumYearsUAESpecified(){
                               return localNumYearsUAETracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNumYearsUAE(){
                               return localNumYearsUAE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NumYearsUAE
                               */
                               public void setNumYearsUAE(java.lang.String param){
                            localNumYearsUAETracker = param != null;
                                   
                                            this.localNumYearsUAE=param;
                                    

                               }
                            

                        /**
                        * field for PuposeAccRelation
                        */

                        
                                    protected java.lang.String localPuposeAccRelation ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPuposeAccRelationTracker = false ;

                           public boolean isPuposeAccRelationSpecified(){
                               return localPuposeAccRelationTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPuposeAccRelation(){
                               return localPuposeAccRelation;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PuposeAccRelation
                               */
                               public void setPuposeAccRelation(java.lang.String param){
                            localPuposeAccRelationTracker = param != null;
                                   
                                            this.localPuposeAccRelation=param;
                                    

                               }
                            

                        /**
                        * field for KycDate
                        */

                        
                                    protected java.lang.String localKycDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localKycDateTracker = false ;

                           public boolean isKycDateSpecified(){
                               return localKycDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getKycDate(){
                               return localKycDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param KycDate
                               */
                               public void setKycDate(java.lang.String param){
                            localKycDateTracker = param != null;
                                   
                                            this.localKycDate=param;
                                    

                               }
                            

                        /**
                        * field for Vvip
                        */

                        
                                    protected java.lang.String localVvip ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localVvipTracker = false ;

                           public boolean isVvipSpecified(){
                               return localVvipTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getVvip(){
                               return localVvip;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Vvip
                               */
                               public void setVvip(java.lang.String param){
                            localVvipTracker = param != null;
                                   
                                            this.localVvip=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":generalInfo_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "generalInfo_type0",
                           xmlWriter);
                   }

               
                   }
                if (localAccNoCoveredTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "accNoCovered", xmlWriter);
                             

                                          if (localAccNoCovered==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("accNoCovered cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAccNoCovered);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localExistingSinceTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "existingSince", xmlWriter);
                             

                                          if (localExistingSince==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("existingSince cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localExistingSince);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNumYearsUAETracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "numYearsUAE", xmlWriter);
                             

                                          if (localNumYearsUAE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("numYearsUAE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNumYearsUAE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPuposeAccRelationTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "puposeAccRelation", xmlWriter);
                             

                                          if (localPuposeAccRelation==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("puposeAccRelation cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPuposeAccRelation);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localKycDateTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "kycDate", xmlWriter);
                             

                                          if (localKycDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("kycDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localKycDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localVvipTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "vvip", xmlWriter);
                             

                                          if (localVvip==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("vvip cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localVvip);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localAccNoCoveredTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "accNoCovered"));
                                 
                                        if (localAccNoCovered != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAccNoCovered));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("accNoCovered cannot be null!!");
                                        }
                                    } if (localExistingSinceTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "existingSince"));
                                 
                                        if (localExistingSince != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localExistingSince));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("existingSince cannot be null!!");
                                        }
                                    } if (localNumYearsUAETracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "numYearsUAE"));
                                 
                                        if (localNumYearsUAE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNumYearsUAE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("numYearsUAE cannot be null!!");
                                        }
                                    } if (localPuposeAccRelationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "puposeAccRelation"));
                                 
                                        if (localPuposeAccRelation != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPuposeAccRelation));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("puposeAccRelation cannot be null!!");
                                        }
                                    } if (localKycDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "kycDate"));
                                 
                                        if (localKycDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localKycDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("kycDate cannot be null!!");
                                        }
                                    } if (localVvipTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "vvip"));
                                 
                                        if (localVvip != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localVvip));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("vvip cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static GeneralInfo_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            GeneralInfo_type0 object =
                new GeneralInfo_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"generalInfo_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (GeneralInfo_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","accNoCovered").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"accNoCovered" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAccNoCovered(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","existingSince").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"existingSince" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setExistingSince(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","numYearsUAE").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"numYearsUAE" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNumYearsUAE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","puposeAccRelation").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"puposeAccRelation" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPuposeAccRelation(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","kycDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"kycDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setKycDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","vvip").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"vvip" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setVvip(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class RiskAssessment_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = riskAssessment_type0
                Namespace URI = http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for BusinessNature
                        */

                        
                                    protected java.lang.String localBusinessNature ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBusinessNatureTracker = false ;

                           public boolean isBusinessNatureSpecified(){
                               return localBusinessNatureTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBusinessNature(){
                               return localBusinessNature;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BusinessNature
                               */
                               public void setBusinessNature(java.lang.String param){
                            localBusinessNatureTracker = param != null;
                                   
                                            this.localBusinessNature=param;
                                    

                               }
                            

                        /**
                        * field for BusinessofNature
                        */

                        
                                    protected java.lang.String localBusinessofNature ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBusinessofNatureTracker = false ;

                           public boolean isBusinessofNatureSpecified(){
                               return localBusinessofNatureTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBusinessofNature(){
                               return localBusinessofNature;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BusinessofNature
                               */
                               public void setBusinessofNature(java.lang.String param){
                            localBusinessofNatureTracker = param != null;
                                   
                                            this.localBusinessofNature=param;
                                    

                               }
                            

                        /**
                        * field for CustDealArmanent
                        */

                        
                                    protected java.lang.String localCustDealArmanent ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustDealArmanentTracker = false ;

                           public boolean isCustDealArmanentSpecified(){
                               return localCustDealArmanentTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustDealArmanent(){
                               return localCustDealArmanent;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustDealArmanent
                               */
                               public void setCustDealArmanent(java.lang.String param){
                            localCustDealArmanentTracker = param != null;
                                   
                                            this.localCustDealArmanent=param;
                                    

                               }
                            

                        /**
                        * field for CustSrcWealth
                        */

                        
                                    protected java.lang.String localCustSrcWealth ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustSrcWealthTracker = false ;

                           public boolean isCustSrcWealthSpecified(){
                               return localCustSrcWealthTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustSrcWealth(){
                               return localCustSrcWealth;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustSrcWealth
                               */
                               public void setCustSrcWealth(java.lang.String param){
                            localCustSrcWealthTracker = param != null;
                                   
                                            this.localCustSrcWealth=param;
                                    

                               }
                            

                        /**
                        * field for CustomerWorkingNonUAERes
                        */

                        
                                    protected java.lang.String localCustomerWorkingNonUAERes ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustomerWorkingNonUAEResTracker = false ;

                           public boolean isCustomerWorkingNonUAEResSpecified(){
                               return localCustomerWorkingNonUAEResTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustomerWorkingNonUAERes(){
                               return localCustomerWorkingNonUAERes;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustomerWorkingNonUAERes
                               */
                               public void setCustomerWorkingNonUAERes(java.lang.String param){
                            localCustomerWorkingNonUAEResTracker = param != null;
                                   
                                            this.localCustomerWorkingNonUAERes=param;
                                    

                               }
                            

                        /**
                        * field for CustomerWorkingUAERes
                        */

                        
                                    protected java.lang.String localCustomerWorkingUAERes ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustomerWorkingUAEResTracker = false ;

                           public boolean isCustomerWorkingUAEResSpecified(){
                               return localCustomerWorkingUAEResTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustomerWorkingUAERes(){
                               return localCustomerWorkingUAERes;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustomerWorkingUAERes
                               */
                               public void setCustomerWorkingUAERes(java.lang.String param){
                            localCustomerWorkingUAEResTracker = param != null;
                                   
                                            this.localCustomerWorkingUAERes=param;
                                    

                               }
                            

                        /**
                        * field for EmployementStatus
                        */

                        
                                    protected java.lang.String localEmployementStatus ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmployementStatusTracker = false ;

                           public boolean isEmployementStatusSpecified(){
                               return localEmployementStatusTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEmployementStatus(){
                               return localEmployementStatus;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EmployementStatus
                               */
                               public void setEmployementStatus(java.lang.String param){
                            localEmployementStatusTracker = param != null;
                                   
                                            this.localEmployementStatus=param;
                                    

                               }
                            

                        /**
                        * field for IsHawalaDeal
                        */

                        
                                    protected java.lang.String localIsHawalaDeal ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIsHawalaDealTracker = false ;

                           public boolean isIsHawalaDealSpecified(){
                               return localIsHawalaDealTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getIsHawalaDeal(){
                               return localIsHawalaDeal;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param IsHawalaDeal
                               */
                               public void setIsHawalaDeal(java.lang.String param){
                            localIsHawalaDealTracker = param != null;
                                   
                                            this.localIsHawalaDeal=param;
                                    

                               }
                            

                        /**
                        * field for IsPEP
                        */

                        
                                    protected java.lang.String localIsPEP ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIsPEPTracker = false ;

                           public boolean isIsPEPSpecified(){
                               return localIsPEPTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getIsPEP(){
                               return localIsPEP;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param IsPEP
                               */
                               public void setIsPEP(java.lang.String param){
                            localIsPEPTracker = param != null;
                                   
                                            this.localIsPEP=param;
                                    

                               }
                            

                        /**
                        * field for IsUAERes
                        */

                        
                                    protected java.lang.String localIsUAERes ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIsUAEResTracker = false ;

                           public boolean isIsUAEResSpecified(){
                               return localIsUAEResTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getIsUAERes(){
                               return localIsUAERes;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param IsUAERes
                               */
                               public void setIsUAERes(java.lang.String param){
                            localIsUAEResTracker = param != null;
                                   
                                            this.localIsUAERes=param;
                                    

                               }
                            

                        /**
                        * field for ReasnForBanking
                        */

                        
                                    protected java.lang.String localReasnForBanking ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localReasnForBankingTracker = false ;

                           public boolean isReasnForBankingSpecified(){
                               return localReasnForBankingTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getReasnForBanking(){
                               return localReasnForBanking;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ReasnForBanking
                               */
                               public void setReasnForBanking(java.lang.String param){
                            localReasnForBankingTracker = param != null;
                                   
                                            this.localReasnForBanking=param;
                                    

                               }
                            

                        /**
                        * field for ReasonBankingInUAE
                        */

                        
                                    protected java.lang.String localReasonBankingInUAE ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localReasonBankingInUAETracker = false ;

                           public boolean isReasonBankingInUAESpecified(){
                               return localReasonBankingInUAETracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getReasonBankingInUAE(){
                               return localReasonBankingInUAE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ReasonBankingInUAE
                               */
                               public void setReasonBankingInUAE(java.lang.String param){
                            localReasonBankingInUAETracker = param != null;
                                   
                                            this.localReasonBankingInUAE=param;
                                    

                               }
                            

                        /**
                        * field for Signtype
                        */

                        
                                    protected java.lang.String localSigntype ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSigntypeTracker = false ;

                           public boolean isSigntypeSpecified(){
                               return localSigntypeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSigntype(){
                               return localSigntype;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Signtype
                               */
                               public void setSigntype(java.lang.String param){
                            localSigntypeTracker = param != null;
                                   
                                            this.localSigntype=param;
                                    

                               }
                            

                        /**
                        * field for SplCat
                        */

                        
                                    protected java.lang.String localSplCat ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSplCatTracker = false ;

                           public boolean isSplCatSpecified(){
                               return localSplCatTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSplCat(){
                               return localSplCat;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SplCat
                               */
                               public void setSplCat(java.lang.String param){
                            localSplCatTracker = param != null;
                                   
                                            this.localSplCat=param;
                                    

                               }
                            

                        /**
                        * field for TaxEvasion
                        */

                        
                                    protected java.lang.String localTaxEvasion ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTaxEvasionTracker = false ;

                           public boolean isTaxEvasionSpecified(){
                               return localTaxEvasionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTaxEvasion(){
                               return localTaxEvasion;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TaxEvasion
                               */
                               public void setTaxEvasion(java.lang.String param){
                            localTaxEvasionTracker = param != null;
                                   
                                            this.localTaxEvasion=param;
                                    

                               }
                            

                        /**
                        * field for UaeCustInvolvedInArmament
                        */

                        
                                    protected java.lang.String localUaeCustInvolvedInArmament ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUaeCustInvolvedInArmamentTracker = false ;

                           public boolean isUaeCustInvolvedInArmamentSpecified(){
                               return localUaeCustInvolvedInArmamentTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUaeCustInvolvedInArmament(){
                               return localUaeCustInvolvedInArmament;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param UaeCustInvolvedInArmament
                               */
                               public void setUaeCustInvolvedInArmament(java.lang.String param){
                            localUaeCustInvolvedInArmamentTracker = param != null;
                                   
                                            this.localUaeCustInvolvedInArmament=param;
                                    

                               }
                            

                        /**
                        * field for EidaCARDPresent
                        */

                        
                                    protected java.lang.String localEidaCARDPresent ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEidaCARDPresentTracker = false ;

                           public boolean isEidaCARDPresentSpecified(){
                               return localEidaCARDPresentTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEidaCARDPresent(){
                               return localEidaCARDPresent;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EidaCARDPresent
                               */
                               public void setEidaCARDPresent(java.lang.String param){
                            localEidaCARDPresentTracker = param != null;
                                   
                                            this.localEidaCARDPresent=param;
                                    

                               }
                            

                        /**
                        * field for PepList
                        */

                        
                                    protected java.lang.String localPepList ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPepListTracker = false ;

                           public boolean isPepListSpecified(){
                               return localPepListTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPepList(){
                               return localPepList;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PepList
                               */
                               public void setPepList(java.lang.String param){
                            localPepListTracker = param != null;
                                   
                                            this.localPepList=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":riskAssessment_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "riskAssessment_type0",
                           xmlWriter);
                   }

               
                   }
                if (localBusinessNatureTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "businessNature", xmlWriter);
                             

                                          if (localBusinessNature==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("businessNature cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBusinessNature);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBusinessofNatureTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "businessofNature", xmlWriter);
                             

                                          if (localBusinessofNature==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("businessofNature cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBusinessofNature);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustDealArmanentTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custDealArmanent", xmlWriter);
                             

                                          if (localCustDealArmanent==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custDealArmanent cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustDealArmanent);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustSrcWealthTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "custSrcWealth", xmlWriter);
                             

                                          if (localCustSrcWealth==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custSrcWealth cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustSrcWealth);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustomerWorkingNonUAEResTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "customerWorkingNonUAERes", xmlWriter);
                             

                                          if (localCustomerWorkingNonUAERes==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("customerWorkingNonUAERes cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustomerWorkingNonUAERes);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustomerWorkingUAEResTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "customerWorkingUAERes", xmlWriter);
                             

                                          if (localCustomerWorkingUAERes==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("customerWorkingUAERes cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustomerWorkingUAERes);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEmployementStatusTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "employementStatus", xmlWriter);
                             

                                          if (localEmployementStatus==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("employementStatus cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEmployementStatus);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localIsHawalaDealTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "isHawalaDeal", xmlWriter);
                             

                                          if (localIsHawalaDeal==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("isHawalaDeal cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localIsHawalaDeal);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localIsPEPTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "isPEP", xmlWriter);
                             

                                          if (localIsPEP==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("isPEP cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localIsPEP);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localIsUAEResTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "isUAERes", xmlWriter);
                             

                                          if (localIsUAERes==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("isUAERes cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localIsUAERes);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localReasnForBankingTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "reasnForBanking", xmlWriter);
                             

                                          if (localReasnForBanking==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("reasnForBanking cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localReasnForBanking);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localReasonBankingInUAETracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "reasonBankingInUAE", xmlWriter);
                             

                                          if (localReasonBankingInUAE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("reasonBankingInUAE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localReasonBankingInUAE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSigntypeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "signtype", xmlWriter);
                             

                                          if (localSigntype==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("signtype cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSigntype);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSplCatTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "splCat", xmlWriter);
                             

                                          if (localSplCat==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("splCat cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSplCat);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTaxEvasionTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "taxEvasion", xmlWriter);
                             

                                          if (localTaxEvasion==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("taxEvasion cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTaxEvasion);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUaeCustInvolvedInArmamentTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "uaeCustInvolvedInArmament", xmlWriter);
                             

                                          if (localUaeCustInvolvedInArmament==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("uaeCustInvolvedInArmament cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUaeCustInvolvedInArmament);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEidaCARDPresentTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "eidaCARDPresent", xmlWriter);
                             

                                          if (localEidaCARDPresent==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("eidaCARDPresent cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEidaCARDPresent);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPepListTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "pepList", xmlWriter);
                             

                                          if (localPepList==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("pepList cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPepList);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localBusinessNatureTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "businessNature"));
                                 
                                        if (localBusinessNature != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBusinessNature));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("businessNature cannot be null!!");
                                        }
                                    } if (localBusinessofNatureTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "businessofNature"));
                                 
                                        if (localBusinessofNature != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBusinessofNature));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("businessofNature cannot be null!!");
                                        }
                                    } if (localCustDealArmanentTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custDealArmanent"));
                                 
                                        if (localCustDealArmanent != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustDealArmanent));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custDealArmanent cannot be null!!");
                                        }
                                    } if (localCustSrcWealthTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "custSrcWealth"));
                                 
                                        if (localCustSrcWealth != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustSrcWealth));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custSrcWealth cannot be null!!");
                                        }
                                    } if (localCustomerWorkingNonUAEResTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "customerWorkingNonUAERes"));
                                 
                                        if (localCustomerWorkingNonUAERes != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustomerWorkingNonUAERes));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("customerWorkingNonUAERes cannot be null!!");
                                        }
                                    } if (localCustomerWorkingUAEResTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "customerWorkingUAERes"));
                                 
                                        if (localCustomerWorkingUAERes != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustomerWorkingUAERes));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("customerWorkingUAERes cannot be null!!");
                                        }
                                    } if (localEmployementStatusTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "employementStatus"));
                                 
                                        if (localEmployementStatus != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmployementStatus));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("employementStatus cannot be null!!");
                                        }
                                    } if (localIsHawalaDealTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "isHawalaDeal"));
                                 
                                        if (localIsHawalaDeal != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIsHawalaDeal));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("isHawalaDeal cannot be null!!");
                                        }
                                    } if (localIsPEPTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "isPEP"));
                                 
                                        if (localIsPEP != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIsPEP));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("isPEP cannot be null!!");
                                        }
                                    } if (localIsUAEResTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "isUAERes"));
                                 
                                        if (localIsUAERes != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIsUAERes));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("isUAERes cannot be null!!");
                                        }
                                    } if (localReasnForBankingTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "reasnForBanking"));
                                 
                                        if (localReasnForBanking != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReasnForBanking));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("reasnForBanking cannot be null!!");
                                        }
                                    } if (localReasonBankingInUAETracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "reasonBankingInUAE"));
                                 
                                        if (localReasonBankingInUAE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReasonBankingInUAE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("reasonBankingInUAE cannot be null!!");
                                        }
                                    } if (localSigntypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "signtype"));
                                 
                                        if (localSigntype != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSigntype));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("signtype cannot be null!!");
                                        }
                                    } if (localSplCatTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "splCat"));
                                 
                                        if (localSplCat != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSplCat));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("splCat cannot be null!!");
                                        }
                                    } if (localTaxEvasionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "taxEvasion"));
                                 
                                        if (localTaxEvasion != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTaxEvasion));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("taxEvasion cannot be null!!");
                                        }
                                    } if (localUaeCustInvolvedInArmamentTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "uaeCustInvolvedInArmament"));
                                 
                                        if (localUaeCustInvolvedInArmament != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUaeCustInvolvedInArmament));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("uaeCustInvolvedInArmament cannot be null!!");
                                        }
                                    } if (localEidaCARDPresentTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "eidaCARDPresent"));
                                 
                                        if (localEidaCARDPresent != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEidaCARDPresent));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("eidaCARDPresent cannot be null!!");
                                        }
                                    } if (localPepListTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "pepList"));
                                 
                                        if (localPepList != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPepList));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("pepList cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static RiskAssessment_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            RiskAssessment_type0 object =
                new RiskAssessment_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"riskAssessment_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (RiskAssessment_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","businessNature").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"businessNature" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBusinessNature(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","businessofNature").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"businessofNature" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBusinessofNature(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custDealArmanent").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custDealArmanent" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustDealArmanent(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","custSrcWealth").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custSrcWealth" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustSrcWealth(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","customerWorkingNonUAERes").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"customerWorkingNonUAERes" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustomerWorkingNonUAERes(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","customerWorkingUAERes").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"customerWorkingUAERes" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustomerWorkingUAERes(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","employementStatus").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"employementStatus" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEmployementStatus(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","isHawalaDeal").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"isHawalaDeal" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIsHawalaDeal(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","isPEP").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"isPEP" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIsPEP(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","isUAERes").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"isUAERes" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIsUAERes(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","reasnForBanking").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"reasnForBanking" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReasnForBanking(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","reasonBankingInUAE").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"reasonBankingInUAE" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReasonBankingInUAE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","signtype").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"signtype" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSigntype(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","splCat").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"splCat" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSplCat(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","taxEvasion").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"taxEvasion" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTaxEvasion(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","uaeCustInvolvedInArmament").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"uaeCustInvolvedInArmament" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUaeCustInvolvedInArmament(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","eidaCARDPresent").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"eidaCARDPresent" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEidaCARDPresent(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","pepList").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"pepList" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPepList(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class Products_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = products_type0
                Namespace URI = http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for ProductCode
                        */

                        
                                    protected java.lang.String localProductCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localProductCodeTracker = false ;

                           public boolean isProductCodeSpecified(){
                               return localProductCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getProductCode(){
                               return localProductCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ProductCode
                               */
                               public void setProductCode(java.lang.String param){
                            localProductCodeTracker = param != null;
                                   
                                            this.localProductCode=param;
                                    

                               }
                            

                        /**
                        * field for LoanAmount
                        */

                        
                                    protected java.lang.String localLoanAmount ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLoanAmountTracker = false ;

                           public boolean isLoanAmountSpecified(){
                               return localLoanAmountTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLoanAmount(){
                               return localLoanAmount;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LoanAmount
                               */
                               public void setLoanAmount(java.lang.String param){
                            localLoanAmountTracker = param != null;
                                   
                                            this.localLoanAmount=param;
                                    

                               }
                            

                        /**
                        * field for Tenor
                        */

                        
                                    protected java.lang.String localTenor ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTenorTracker = false ;

                           public boolean isTenorSpecified(){
                               return localTenorTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTenor(){
                               return localTenor;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Tenor
                               */
                               public void setTenor(java.lang.String param){
                            localTenorTracker = param != null;
                                   
                                            this.localTenor=param;
                                    

                               }
                            

                        /**
                        * field for DownPayment
                        */

                        
                                    protected java.lang.String localDownPayment ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDownPaymentTracker = false ;

                           public boolean isDownPaymentSpecified(){
                               return localDownPaymentTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDownPayment(){
                               return localDownPayment;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DownPayment
                               */
                               public void setDownPayment(java.lang.String param){
                            localDownPaymentTracker = param != null;
                                   
                                            this.localDownPayment=param;
                                    

                               }
                            

                        /**
                        * field for ApplicationRefNumber
                        */

                        
                                    protected java.lang.String localApplicationRefNumber ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localApplicationRefNumberTracker = false ;

                           public boolean isApplicationRefNumberSpecified(){
                               return localApplicationRefNumberTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getApplicationRefNumber(){
                               return localApplicationRefNumber;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ApplicationRefNumber
                               */
                               public void setApplicationRefNumber(java.lang.String param){
                            localApplicationRefNumberTracker = param != null;
                                   
                                            this.localApplicationRefNumber=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":products_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "products_type0",
                           xmlWriter);
                   }

               
                   }
                if (localProductCodeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "productCode", xmlWriter);
                             

                                          if (localProductCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("productCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localProductCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLoanAmountTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "loanAmount", xmlWriter);
                             

                                          if (localLoanAmount==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("loanAmount cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLoanAmount);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTenorTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "tenor", xmlWriter);
                             

                                          if (localTenor==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("tenor cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTenor);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDownPaymentTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "downPayment", xmlWriter);
                             

                                          if (localDownPayment==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("downPayment cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDownPayment);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localApplicationRefNumberTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "applicationRefNumber", xmlWriter);
                             

                                          if (localApplicationRefNumber==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("applicationRefNumber cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localApplicationRefNumber);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localProductCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "productCode"));
                                 
                                        if (localProductCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localProductCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("productCode cannot be null!!");
                                        }
                                    } if (localLoanAmountTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "loanAmount"));
                                 
                                        if (localLoanAmount != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLoanAmount));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("loanAmount cannot be null!!");
                                        }
                                    } if (localTenorTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "tenor"));
                                 
                                        if (localTenor != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTenor));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("tenor cannot be null!!");
                                        }
                                    } if (localDownPaymentTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "downPayment"));
                                 
                                        if (localDownPayment != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDownPayment));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("downPayment cannot be null!!");
                                        }
                                    } if (localApplicationRefNumberTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "applicationRefNumber"));
                                 
                                        if (localApplicationRefNumber != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localApplicationRefNumber));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("applicationRefNumber cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static Products_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            Products_type0 object =
                new Products_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"products_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (Products_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","productCode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"productCode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setProductCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","loanAmount").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"loanAmount" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLoanAmount(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","tenor").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"tenor" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTenor(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","downPayment").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"downPayment" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDownPayment(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","applicationRefNumber").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"applicationRefNumber" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setApplicationRefNumber(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class ExtensionMapper{

          public static java.lang.Object getTypeObject(java.lang.String namespaceURI,
                                                       java.lang.String typeName,
                                                       javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{

              
                  if (
                  "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd".equals(namespaceURI) &&
                  "internalDetails_type0".equals(typeName)){
                   
                            return  InternalDetails_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd".equals(namespaceURI) &&
                  "productResDtls_type0".equals(typeName)){
                   
                            return  ProductResDtls_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd".equals(namespaceURI) &&
                  "AddOnlineAppDataRes_type0".equals(typeName)){
                   
                            return  AddOnlineAppDataRes_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd".equals(namespaceURI) &&
                  "LAPSAppDetails_type0".equals(typeName)){
                   
                            return  LAPSAppDetails_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd".equals(namespaceURI) &&
                  "LAPSAppDetails_type1".equals(typeName)){
                   
                            return  LAPSAppDetails_type1.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd".equals(namespaceURI) &&
                  "standingInstructions_type0".equals(typeName)){
                   
                            return  StandingInstructions_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd".equals(namespaceURI) &&
                  "customers_type0".equals(typeName)){
                   
                            return  Customers_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd".equals(namespaceURI) &&
                  "AddOnlineAppDataReq_type0".equals(typeName)){
                   
                            return  AddOnlineAppDataReq_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd".equals(namespaceURI) &&
                  "riskAssessment_type0".equals(typeName)){
                   
                            return  RiskAssessment_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd".equals(namespaceURI) &&
                  "deliveryPreferences_type0".equals(typeName)){
                   
                            return  DeliveryPreferences_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd".equals(namespaceURI) &&
                  "products_type0".equals(typeName)){
                   
                            return  Products_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd".equals(namespaceURI) &&
                  "siForRegTransfer_type0".equals(typeName)){
                   
                            return  SiForRegTransfer_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd".equals(namespaceURI) &&
                  "document_type0".equals(typeName)){
                   
                            return  Document_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd".equals(namespaceURI) &&
                  "iKYC_type0".equals(typeName)){
                   
                            return  IKYC_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd".equals(namespaceURI) &&
                  "correspondenceAddress_type0".equals(typeName)){
                   
                            return  CorrespondenceAddress_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd".equals(namespaceURI) &&
                  "residentialAddress_type0".equals(typeName)){
                   
                            return  ResidentialAddress_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd".equals(namespaceURI) &&
                  "addOnlineLendingApplicationDtlsReq_type0".equals(typeName)){
                   
                            return  AddOnlineLendingApplicationDtlsReq_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd".equals(namespaceURI) &&
                  "signOff_type0".equals(typeName)){
                   
                            return  SignOff_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd".equals(namespaceURI) &&
                  "debitCard_type0".equals(typeName)){
                   
                            return  DebitCard_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd".equals(namespaceURI) &&
                  "generalInfo_type0".equals(typeName)){
                   
                            return  GeneralInfo_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd".equals(namespaceURI) &&
                  "fatcaDetails_type0".equals(typeName)){
                   
                            return  FatcaDetails_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd".equals(namespaceURI) &&
                  "productApps_type0".equals(typeName)){
                   
                            return  ProductApps_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd".equals(namespaceURI) &&
                  "cutomerPersonalInformation_type0".equals(typeName)){
                   
                            return  CutomerPersonalInformation_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd".equals(namespaceURI) &&
                  "sweepInstructions_type0".equals(typeName)){
                   
                            return  SweepInstructions_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd".equals(namespaceURI) &&
                  "accountDetails_type1".equals(typeName)){
                   
                            return  AccountDetails_type1.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd".equals(namespaceURI) &&
                  "accountDetails_type0".equals(typeName)){
                   
                            return  AccountDetails_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd".equals(namespaceURI) &&
                  "addOnlineLendingApplicationDtlsRes_type0".equals(typeName)){
                   
                            return  AddOnlineLendingApplicationDtlsRes_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd".equals(namespaceURI) &&
                  "accountInfo_type0".equals(typeName)){
                   
                            return  AccountInfo_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd".equals(namespaceURI) &&
                  "AddOnlineCardAppDataRes_type0".equals(typeName)){
                   
                            return  AddOnlineCardAppDataRes_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd".equals(namespaceURI) &&
                  "expectedRelationShipType_type0".equals(typeName)){
                   
                            return  ExpectedRelationShipType_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd".equals(namespaceURI) &&
                  "permanentAddress_type0".equals(typeName)){
                   
                            return  PermanentAddress_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd".equals(namespaceURI) &&
                  "applicationData_type0".equals(typeName)){
                   
                            return  ApplicationData_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/common/header.xsd".equals(namespaceURI) &&
                  "headerType".equals(typeName)){
                   
                            return  HeaderType.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd".equals(namespaceURI) &&
                  "cutomerInformation_type0".equals(typeName)){
                   
                            return  CutomerInformation_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd".equals(namespaceURI) &&
                  "AddOnlineCardAppDataReq_type0".equals(typeName)){
                   
                            return  AddOnlineCardAppDataReq_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd".equals(namespaceURI) &&
                  "bankingRelation_type0".equals(typeName)){
                   
                            return  BankingRelation_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd".equals(namespaceURI) &&
                  "productData_type0".equals(typeName)){
                   
                            return  ProductData_type0.Factory.parse(reader);
                        

                  }

              
             throw new org.apache.axis2.databinding.ADBException("Unsupported type " + namespaceURI + " " + typeName);
          }

        }
    
        public static class AddOnlineLendingApplicationDtlsResMsg
        implements org.apache.axis2.databinding.ADBBean{
        
                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                "addOnlineLendingApplicationDtlsResMsg",
                "ns2");

            

                        /**
                        * field for Header
                        */

                        
                                    protected HeaderType localHeader ;
                                

                           /**
                           * Auto generated getter method
                           * @return HeaderType
                           */
                           public  HeaderType getHeader(){
                               return localHeader;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Header
                               */
                               public void setHeader(HeaderType param){
                            
                                            this.localHeader=param;
                                    

                               }
                            

                        /**
                        * field for AddOnlineLendingApplicationDtlsRes
                        */

                        
                                    protected AddOnlineLendingApplicationDtlsRes_type0 localAddOnlineLendingApplicationDtlsRes ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAddOnlineLendingApplicationDtlsResTracker = false ;

                           public boolean isAddOnlineLendingApplicationDtlsResSpecified(){
                               return localAddOnlineLendingApplicationDtlsResTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return AddOnlineLendingApplicationDtlsRes_type0
                           */
                           public  AddOnlineLendingApplicationDtlsRes_type0 getAddOnlineLendingApplicationDtlsRes(){
                               return localAddOnlineLendingApplicationDtlsRes;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AddOnlineLendingApplicationDtlsRes
                               */
                               public void setAddOnlineLendingApplicationDtlsRes(AddOnlineLendingApplicationDtlsRes_type0 param){
                            localAddOnlineLendingApplicationDtlsResTracker = param != null;
                                   
                                            this.localAddOnlineLendingApplicationDtlsRes=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
               return factory.createOMElement(dataSource,MY_QNAME);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":addOnlineLendingApplicationDtlsResMsg",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "addOnlineLendingApplicationDtlsResMsg",
                           xmlWriter);
                   }

               
                   }
               
                                            if (localHeader==null){
                                                 throw new org.apache.axis2.databinding.ADBException("header cannot be null!!");
                                            }
                                           localHeader.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","header"),
                                               xmlWriter);
                                         if (localAddOnlineLendingApplicationDtlsResTracker){
                                            if (localAddOnlineLendingApplicationDtlsRes==null){
                                                 throw new org.apache.axis2.databinding.ADBException("addOnlineLendingApplicationDtlsRes cannot be null!!");
                                            }
                                           localAddOnlineLendingApplicationDtlsRes.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","addOnlineLendingApplicationDtlsRes"),
                                               xmlWriter);
                                        }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "header"));
                            
                            
                                    if (localHeader==null){
                                         throw new org.apache.axis2.databinding.ADBException("header cannot be null!!");
                                    }
                                    elementList.add(localHeader);
                                 if (localAddOnlineLendingApplicationDtlsResTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "addOnlineLendingApplicationDtlsRes"));
                            
                            
                                    if (localAddOnlineLendingApplicationDtlsRes==null){
                                         throw new org.apache.axis2.databinding.ADBException("addOnlineLendingApplicationDtlsRes cannot be null!!");
                                    }
                                    elementList.add(localAddOnlineLendingApplicationDtlsRes);
                                }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static AddOnlineLendingApplicationDtlsResMsg parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            AddOnlineLendingApplicationDtlsResMsg object =
                new AddOnlineLendingApplicationDtlsResMsg();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"addOnlineLendingApplicationDtlsResMsg".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (AddOnlineLendingApplicationDtlsResMsg)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","header").equals(reader.getName())){
                                
                                                object.setHeader(HeaderType.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                                }
                            
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","addOnlineLendingApplicationDtlsRes").equals(reader.getName())){
                                
                                                object.setAddOnlineLendingApplicationDtlsRes(AddOnlineLendingApplicationDtlsRes_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class AddOnlineLendingApplicationDtlsReqMsg
        implements org.apache.axis2.databinding.ADBBean{
        
                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                "addOnlineLendingApplicationDtlsReqMsg",
                "ns2");

            

                        /**
                        * field for Header
                        */

                        
                                    protected HeaderType localHeader ;
                                

                           /**
                           * Auto generated getter method
                           * @return HeaderType
                           */
                           public  HeaderType getHeader(){
                               return localHeader;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Header
                               */
                               public void setHeader(HeaderType param){
                            
                                            this.localHeader=param;
                                    

                               }
                            

                        /**
                        * field for AddOnlineLendingApplicationDtlsReq
                        */

                        
                                    protected AddOnlineLendingApplicationDtlsReq_type0 localAddOnlineLendingApplicationDtlsReq ;
                                

                           /**
                           * Auto generated getter method
                           * @return AddOnlineLendingApplicationDtlsReq_type0
                           */
                           public  AddOnlineLendingApplicationDtlsReq_type0 getAddOnlineLendingApplicationDtlsReq(){
                               return localAddOnlineLendingApplicationDtlsReq;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AddOnlineLendingApplicationDtlsReq
                               */
                               public void setAddOnlineLendingApplicationDtlsReq(AddOnlineLendingApplicationDtlsReq_type0 param){
                            
                                            this.localAddOnlineLendingApplicationDtlsReq=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
               return factory.createOMElement(dataSource,MY_QNAME);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":addOnlineLendingApplicationDtlsReqMsg",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "addOnlineLendingApplicationDtlsReqMsg",
                           xmlWriter);
                   }

               
                   }
               
                                            if (localHeader==null){
                                                 throw new org.apache.axis2.databinding.ADBException("header cannot be null!!");
                                            }
                                           localHeader.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","header"),
                                               xmlWriter);
                                        
                                            if (localAddOnlineLendingApplicationDtlsReq==null){
                                                 throw new org.apache.axis2.databinding.ADBException("addOnlineLendingApplicationDtlsReq cannot be null!!");
                                            }
                                           localAddOnlineLendingApplicationDtlsReq.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","addOnlineLendingApplicationDtlsReq"),
                                               xmlWriter);
                                        
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "header"));
                            
                            
                                    if (localHeader==null){
                                         throw new org.apache.axis2.databinding.ADBException("header cannot be null!!");
                                    }
                                    elementList.add(localHeader);
                                
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "addOnlineLendingApplicationDtlsReq"));
                            
                            
                                    if (localAddOnlineLendingApplicationDtlsReq==null){
                                         throw new org.apache.axis2.databinding.ADBException("addOnlineLendingApplicationDtlsReq cannot be null!!");
                                    }
                                    elementList.add(localAddOnlineLendingApplicationDtlsReq);
                                

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static AddOnlineLendingApplicationDtlsReqMsg parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            AddOnlineLendingApplicationDtlsReqMsg object =
                new AddOnlineLendingApplicationDtlsReqMsg();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"addOnlineLendingApplicationDtlsReqMsg".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (AddOnlineLendingApplicationDtlsReqMsg)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","header").equals(reader.getName())){
                                
                                                object.setHeader(HeaderType.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                                }
                            
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","addOnlineLendingApplicationDtlsReq").equals(reader.getName())){
                                
                                                object.setAddOnlineLendingApplicationDtlsReq(AddOnlineLendingApplicationDtlsReq_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                                }
                              
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class AddOnlineCardAppDataRes_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = AddOnlineCardAppDataRes_type0
                Namespace URI = http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for LAPSAppDetails
                        */

                        
                                    protected LAPSAppDetails_type0 localLAPSAppDetails ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLAPSAppDetailsTracker = false ;

                           public boolean isLAPSAppDetailsSpecified(){
                               return localLAPSAppDetailsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return LAPSAppDetails_type0
                           */
                           public  LAPSAppDetails_type0 getLAPSAppDetails(){
                               return localLAPSAppDetails;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LAPSAppDetails
                               */
                               public void setLAPSAppDetails(LAPSAppDetails_type0 param){
                            localLAPSAppDetailsTracker = param != null;
                                   
                                            this.localLAPSAppDetails=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":AddOnlineCardAppDataRes_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "AddOnlineCardAppDataRes_type0",
                           xmlWriter);
                   }

               
                   }
                if (localLAPSAppDetailsTracker){
                                            if (localLAPSAppDetails==null){
                                                 throw new org.apache.axis2.databinding.ADBException("LAPSAppDetails cannot be null!!");
                                            }
                                           localLAPSAppDetails.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","LAPSAppDetails"),
                                               xmlWriter);
                                        }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localLAPSAppDetailsTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "LAPSAppDetails"));
                            
                            
                                    if (localLAPSAppDetails==null){
                                         throw new org.apache.axis2.databinding.ADBException("LAPSAppDetails cannot be null!!");
                                    }
                                    elementList.add(localLAPSAppDetails);
                                }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static AddOnlineCardAppDataRes_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            AddOnlineCardAppDataRes_type0 object =
                new AddOnlineCardAppDataRes_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"AddOnlineCardAppDataRes_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (AddOnlineCardAppDataRes_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","LAPSAppDetails").equals(reader.getName())){
                                
                                                object.setLAPSAppDetails(LAPSAppDetails_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class CorrespondenceAddress_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = correspondenceAddress_type0
                Namespace URI = http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for City
                        */

                        
                                    protected java.lang.String localCity ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCityTracker = false ;

                           public boolean isCitySpecified(){
                               return localCityTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCity(){
                               return localCity;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param City
                               */
                               public void setCity(java.lang.String param){
                            localCityTracker = param != null;
                                   
                                            this.localCity=param;
                                    

                               }
                            

                        /**
                        * field for CityOthers
                        */

                        
                                    protected java.lang.String localCityOthers ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCityOthersTracker = false ;

                           public boolean isCityOthersSpecified(){
                               return localCityOthersTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCityOthers(){
                               return localCityOthers;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CityOthers
                               */
                               public void setCityOthers(java.lang.String param){
                            localCityOthersTracker = param != null;
                                   
                                            this.localCityOthers=param;
                                    

                               }
                            

                        /**
                        * field for Country
                        */

                        
                                    protected java.lang.String localCountry ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCountryTracker = false ;

                           public boolean isCountrySpecified(){
                               return localCountryTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCountry(){
                               return localCountry;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Country
                               */
                               public void setCountry(java.lang.String param){
                            localCountryTracker = param != null;
                                   
                                            this.localCountry=param;
                                    

                               }
                            

                        /**
                        * field for Floor
                        */

                        
                                    protected java.lang.String localFloor ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFloorTracker = false ;

                           public boolean isFloorSpecified(){
                               return localFloorTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFloor(){
                               return localFloor;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Floor
                               */
                               public void setFloor(java.lang.String param){
                            localFloorTracker = param != null;
                                   
                                            this.localFloor=param;
                                    

                               }
                            

                        /**
                        * field for State
                        */

                        
                                    protected java.lang.String localState ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localStateTracker = false ;

                           public boolean isStateSpecified(){
                               return localStateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getState(){
                               return localState;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param State
                               */
                               public void setState(java.lang.String param){
                            localStateTracker = param != null;
                                   
                                            this.localState=param;
                                    

                               }
                            

                        /**
                        * field for StateOthers
                        */

                        
                                    protected java.lang.String localStateOthers ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localStateOthersTracker = false ;

                           public boolean isStateOthersSpecified(){
                               return localStateOthersTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getStateOthers(){
                               return localStateOthers;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param StateOthers
                               */
                               public void setStateOthers(java.lang.String param){
                            localStateOthersTracker = param != null;
                                   
                                            this.localStateOthers=param;
                                    

                               }
                            

                        /**
                        * field for Street
                        */

                        
                                    protected java.lang.String localStreet ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localStreetTracker = false ;

                           public boolean isStreetSpecified(){
                               return localStreetTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getStreet(){
                               return localStreet;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Street
                               */
                               public void setStreet(java.lang.String param){
                            localStreetTracker = param != null;
                                   
                                            this.localStreet=param;
                                    

                               }
                            

                        /**
                        * field for PoBoxNo
                        */

                        
                                    protected java.lang.String localPoBoxNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPoBoxNoTracker = false ;

                           public boolean isPoBoxNoSpecified(){
                               return localPoBoxNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPoBoxNo(){
                               return localPoBoxNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PoBoxNo
                               */
                               public void setPoBoxNo(java.lang.String param){
                            localPoBoxNoTracker = param != null;
                                   
                                            this.localPoBoxNo=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":correspondenceAddress_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "correspondenceAddress_type0",
                           xmlWriter);
                   }

               
                   }
                if (localCityTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "city", xmlWriter);
                             

                                          if (localCity==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("city cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCity);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCityOthersTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "cityOthers", xmlWriter);
                             

                                          if (localCityOthers==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("cityOthers cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCityOthers);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCountryTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "country", xmlWriter);
                             

                                          if (localCountry==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("country cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCountry);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFloorTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "floor", xmlWriter);
                             

                                          if (localFloor==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("floor cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFloor);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localStateTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "state", xmlWriter);
                             

                                          if (localState==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("state cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localState);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localStateOthersTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "stateOthers", xmlWriter);
                             

                                          if (localStateOthers==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("stateOthers cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localStateOthers);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localStreetTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "street", xmlWriter);
                             

                                          if (localStreet==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("street cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localStreet);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPoBoxNoTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "poBoxNo", xmlWriter);
                             

                                          if (localPoBoxNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("poBoxNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPoBoxNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localCityTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "city"));
                                 
                                        if (localCity != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCity));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("city cannot be null!!");
                                        }
                                    } if (localCityOthersTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "cityOthers"));
                                 
                                        if (localCityOthers != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCityOthers));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("cityOthers cannot be null!!");
                                        }
                                    } if (localCountryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "country"));
                                 
                                        if (localCountry != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCountry));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("country cannot be null!!");
                                        }
                                    } if (localFloorTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "floor"));
                                 
                                        if (localFloor != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFloor));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("floor cannot be null!!");
                                        }
                                    } if (localStateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "state"));
                                 
                                        if (localState != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localState));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("state cannot be null!!");
                                        }
                                    } if (localStateOthersTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "stateOthers"));
                                 
                                        if (localStateOthers != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localStateOthers));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("stateOthers cannot be null!!");
                                        }
                                    } if (localStreetTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "street"));
                                 
                                        if (localStreet != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localStreet));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("street cannot be null!!");
                                        }
                                    } if (localPoBoxNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "poBoxNo"));
                                 
                                        if (localPoBoxNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPoBoxNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("poBoxNo cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static CorrespondenceAddress_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            CorrespondenceAddress_type0 object =
                new CorrespondenceAddress_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"correspondenceAddress_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (CorrespondenceAddress_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","city").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"city" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCity(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","cityOthers").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"cityOthers" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCityOthers(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","country").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"country" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCountry(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","floor").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"floor" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFloor(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","state").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"state" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setState(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","stateOthers").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"stateOthers" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setStateOthers(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","street").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"street" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setStreet(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","poBoxNo").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"poBoxNo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPoBoxNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class BankingRelation_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = bankingRelation_type0
                Namespace URI = http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for BankCntry1
                        */

                        
                                    protected java.lang.String localBankCntry1 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBankCntry1Tracker = false ;

                           public boolean isBankCntry1Specified(){
                               return localBankCntry1Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBankCntry1(){
                               return localBankCntry1;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BankCntry1
                               */
                               public void setBankCntry1(java.lang.String param){
                            localBankCntry1Tracker = param != null;
                                   
                                            this.localBankCntry1=param;
                                    

                               }
                            

                        /**
                        * field for BankCntry2
                        */

                        
                                    protected java.lang.String localBankCntry2 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBankCntry2Tracker = false ;

                           public boolean isBankCntry2Specified(){
                               return localBankCntry2Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBankCntry2(){
                               return localBankCntry2;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BankCntry2
                               */
                               public void setBankCntry2(java.lang.String param){
                            localBankCntry2Tracker = param != null;
                                   
                                            this.localBankCntry2=param;
                                    

                               }
                            

                        /**
                        * field for BankCntry3
                        */

                        
                                    protected java.lang.String localBankCntry3 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBankCntry3Tracker = false ;

                           public boolean isBankCntry3Specified(){
                               return localBankCntry3Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBankCntry3(){
                               return localBankCntry3;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BankCntry3
                               */
                               public void setBankCntry3(java.lang.String param){
                            localBankCntry3Tracker = param != null;
                                   
                                            this.localBankCntry3=param;
                                    

                               }
                            

                        /**
                        * field for BankName1
                        */

                        
                                    protected java.lang.String localBankName1 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBankName1Tracker = false ;

                           public boolean isBankName1Specified(){
                               return localBankName1Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBankName1(){
                               return localBankName1;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BankName1
                               */
                               public void setBankName1(java.lang.String param){
                            localBankName1Tracker = param != null;
                                   
                                            this.localBankName1=param;
                                    

                               }
                            

                        /**
                        * field for BankName2
                        */

                        
                                    protected java.lang.String localBankName2 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBankName2Tracker = false ;

                           public boolean isBankName2Specified(){
                               return localBankName2Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBankName2(){
                               return localBankName2;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BankName2
                               */
                               public void setBankName2(java.lang.String param){
                            localBankName2Tracker = param != null;
                                   
                                            this.localBankName2=param;
                                    

                               }
                            

                        /**
                        * field for BankName3
                        */

                        
                                    protected java.lang.String localBankName3 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBankName3Tracker = false ;

                           public boolean isBankName3Specified(){
                               return localBankName3Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBankName3(){
                               return localBankName3;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BankName3
                               */
                               public void setBankName3(java.lang.String param){
                            localBankName3Tracker = param != null;
                                   
                                            this.localBankName3=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":bankingRelation_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "bankingRelation_type0",
                           xmlWriter);
                   }

               
                   }
                if (localBankCntry1Tracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "bankCntry1", xmlWriter);
                             

                                          if (localBankCntry1==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("bankCntry1 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBankCntry1);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBankCntry2Tracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "bankCntry2", xmlWriter);
                             

                                          if (localBankCntry2==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("bankCntry2 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBankCntry2);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBankCntry3Tracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "bankCntry3", xmlWriter);
                             

                                          if (localBankCntry3==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("bankCntry3 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBankCntry3);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBankName1Tracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "bankName1", xmlWriter);
                             

                                          if (localBankName1==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("bankName1 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBankName1);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBankName2Tracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "bankName2", xmlWriter);
                             

                                          if (localBankName2==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("bankName2 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBankName2);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBankName3Tracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "bankName3", xmlWriter);
                             

                                          if (localBankName3==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("bankName3 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBankName3);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localBankCntry1Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "bankCntry1"));
                                 
                                        if (localBankCntry1 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBankCntry1));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("bankCntry1 cannot be null!!");
                                        }
                                    } if (localBankCntry2Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "bankCntry2"));
                                 
                                        if (localBankCntry2 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBankCntry2));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("bankCntry2 cannot be null!!");
                                        }
                                    } if (localBankCntry3Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "bankCntry3"));
                                 
                                        if (localBankCntry3 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBankCntry3));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("bankCntry3 cannot be null!!");
                                        }
                                    } if (localBankName1Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "bankName1"));
                                 
                                        if (localBankName1 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBankName1));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("bankName1 cannot be null!!");
                                        }
                                    } if (localBankName2Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "bankName2"));
                                 
                                        if (localBankName2 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBankName2));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("bankName2 cannot be null!!");
                                        }
                                    } if (localBankName3Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "bankName3"));
                                 
                                        if (localBankName3 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBankName3));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("bankName3 cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static BankingRelation_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            BankingRelation_type0 object =
                new BankingRelation_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"bankingRelation_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (BankingRelation_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","bankCntry1").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"bankCntry1" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBankCntry1(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","bankCntry2").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"bankCntry2" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBankCntry2(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","bankCntry3").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"bankCntry3" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBankCntry3(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","bankName1").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"bankName1" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBankName1(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","bankName2").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"bankName2" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBankName2(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","bankName3").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"bankName3" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBankName3(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class Customers_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = customers_type0
                Namespace URI = http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for CutomerInformation
                        * This was an Array!
                        */

                        
                                    protected CutomerInformation_type0[] localCutomerInformation ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCutomerInformationTracker = false ;

                           public boolean isCutomerInformationSpecified(){
                               return localCutomerInformationTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return CutomerInformation_type0[]
                           */
                           public  CutomerInformation_type0[] getCutomerInformation(){
                               return localCutomerInformation;
                           }

                           
                        


                               
                              /**
                               * validate the array for CutomerInformation
                               */
                              protected void validateCutomerInformation(CutomerInformation_type0[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param CutomerInformation
                              */
                              public void setCutomerInformation(CutomerInformation_type0[] param){
                              
                                   validateCutomerInformation(param);

                               localCutomerInformationTracker = param != null;
                                      
                                      this.localCutomerInformation=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param CutomerInformation_type0
                             */
                             public void addCutomerInformation(CutomerInformation_type0 param){
                                   if (localCutomerInformation == null){
                                   localCutomerInformation = new CutomerInformation_type0[]{};
                                   }

                            
                                 //update the setting tracker
                                localCutomerInformationTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localCutomerInformation);
                               list.add(param);
                               this.localCutomerInformation =
                             (CutomerInformation_type0[])list.toArray(
                            new CutomerInformation_type0[list.size()]);

                             }
                             

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":customers_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "customers_type0",
                           xmlWriter);
                   }

               
                   }
                if (localCutomerInformationTracker){
                                       if (localCutomerInformation!=null){
                                            for (int i = 0;i < localCutomerInformation.length;i++){
                                                if (localCutomerInformation[i] != null){
                                                 localCutomerInformation[i].serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","cutomerInformation"),
                                                           xmlWriter);
                                                } else {
                                                   
                                                        // we don't have to do any thing since minOccures is zero
                                                    
                                                }

                                            }
                                     } else {
                                        
                                               throw new org.apache.axis2.databinding.ADBException("cutomerInformation cannot be null!!");
                                        
                                    }
                                 }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localCutomerInformationTracker){
                             if (localCutomerInformation!=null) {
                                 for (int i = 0;i < localCutomerInformation.length;i++){

                                    if (localCutomerInformation[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                          "cutomerInformation"));
                                         elementList.add(localCutomerInformation[i]);
                                    } else {
                                        
                                                // nothing to do
                                            
                                    }

                                 }
                             } else {
                                 
                                        throw new org.apache.axis2.databinding.ADBException("cutomerInformation cannot be null!!");
                                    
                             }

                        }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static Customers_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            Customers_type0 object =
                new Customers_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"customers_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (Customers_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                        java.util.ArrayList list1 = new java.util.ArrayList();
                    
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","cutomerInformation").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    list1.add(CutomerInformation_type0.Factory.parse(reader));
                                                                
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone1 = false;
                                                        while(!loopDone1){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone1 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","cutomerInformation").equals(reader.getName())){
                                                                    list1.add(CutomerInformation_type0.Factory.parse(reader));
                                                                        
                                                                }else{
                                                                    loopDone1 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array
                                                        
                                                        object.setCutomerInformation((CutomerInformation_type0[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                CutomerInformation_type0.class,
                                                                list1));
                                                            
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class AccountInfo_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = accountInfo_type0
                Namespace URI = http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for AccBranch
                        */

                        
                                    protected java.lang.String localAccBranch ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAccBranchTracker = false ;

                           public boolean isAccBranchSpecified(){
                               return localAccBranchTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAccBranch(){
                               return localAccBranch;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AccBranch
                               */
                               public void setAccBranch(java.lang.String param){
                            localAccBranchTracker = param != null;
                                   
                                            this.localAccBranch=param;
                                    

                               }
                            

                        /**
                        * field for AvBal
                        */

                        
                                    protected java.lang.String localAvBal ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAvBalTracker = false ;

                           public boolean isAvBalSpecified(){
                               return localAvBalTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAvBal(){
                               return localAvBal;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AvBal
                               */
                               public void setAvBal(java.lang.String param){
                            localAvBalTracker = param != null;
                                   
                                            this.localAvBal=param;
                                    

                               }
                            

                        /**
                        * field for CheckerCode
                        */

                        
                                    protected java.lang.String localCheckerCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCheckerCodeTracker = false ;

                           public boolean isCheckerCodeSpecified(){
                               return localCheckerCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCheckerCode(){
                               return localCheckerCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CheckerCode
                               */
                               public void setCheckerCode(java.lang.String param){
                            localCheckerCodeTracker = param != null;
                                   
                                            this.localCheckerCode=param;
                                    

                               }
                            

                        /**
                        * field for CheckerDept
                        */

                        
                                    protected java.lang.String localCheckerDept ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCheckerDeptTracker = false ;

                           public boolean isCheckerDeptSpecified(){
                               return localCheckerDeptTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCheckerDept(){
                               return localCheckerDept;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CheckerDept
                               */
                               public void setCheckerDept(java.lang.String param){
                            localCheckerDeptTracker = param != null;
                                   
                                            this.localCheckerDept=param;
                                    

                               }
                            

                        /**
                        * field for CheckerName
                        */

                        
                                    protected java.lang.String localCheckerName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCheckerNameTracker = false ;

                           public boolean isCheckerNameSpecified(){
                               return localCheckerNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCheckerName(){
                               return localCheckerName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CheckerName
                               */
                               public void setCheckerName(java.lang.String param){
                            localCheckerNameTracker = param != null;
                                   
                                            this.localCheckerName=param;
                                    

                               }
                            

                        /**
                        * field for ChequeReq
                        */

                        
                                    protected java.lang.String localChequeReq ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localChequeReqTracker = false ;

                           public boolean isChequeReqSpecified(){
                               return localChequeReqTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getChequeReq(){
                               return localChequeReq;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ChequeReq
                               */
                               public void setChequeReq(java.lang.String param){
                            localChequeReqTracker = param != null;
                                   
                                            this.localChequeReq=param;
                                    

                               }
                            

                        /**
                        * field for DebitAccNo
                        */

                        
                                    protected java.lang.String localDebitAccNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDebitAccNoTracker = false ;

                           public boolean isDebitAccNoSpecified(){
                               return localDebitAccNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDebitAccNo(){
                               return localDebitAccNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DebitAccNo
                               */
                               public void setDebitAccNo(java.lang.String param){
                            localDebitAccNoTracker = param != null;
                                   
                                            this.localDebitAccNo=param;
                                    

                               }
                            

                        /**
                        * field for DebitAmt
                        */

                        
                                    protected java.lang.String localDebitAmt ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDebitAmtTracker = false ;

                           public boolean isDebitAmtSpecified(){
                               return localDebitAmtTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDebitAmt(){
                               return localDebitAmt;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DebitAmt
                               */
                               public void setDebitAmt(java.lang.String param){
                            localDebitAmtTracker = param != null;
                                   
                                            this.localDebitAmt=param;
                                    

                               }
                            

                        /**
                        * field for DebitCard
                        * This was an Array!
                        */

                        
                                    protected DebitCard_type0[] localDebitCard ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDebitCardTracker = false ;

                           public boolean isDebitCardSpecified(){
                               return localDebitCardTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return DebitCard_type0[]
                           */
                           public  DebitCard_type0[] getDebitCard(){
                               return localDebitCard;
                           }

                           
                        


                               
                              /**
                               * validate the array for DebitCard
                               */
                              protected void validateDebitCard(DebitCard_type0[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param DebitCard
                              */
                              public void setDebitCard(DebitCard_type0[] param){
                              
                                   validateDebitCard(param);

                               localDebitCardTracker = param != null;
                                      
                                      this.localDebitCard=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param DebitCard_type0
                             */
                             public void addDebitCard(DebitCard_type0 param){
                                   if (localDebitCard == null){
                                   localDebitCard = new DebitCard_type0[]{};
                                   }

                            
                                 //update the setting tracker
                                localDebitCardTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localDebitCard);
                               list.add(param);
                               this.localDebitCard =
                             (DebitCard_type0[])list.toArray(
                            new DebitCard_type0[list.size()]);

                             }
                             

                        /**
                        * field for DebitCurr
                        */

                        
                                    protected java.lang.String localDebitCurr ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDebitCurrTracker = false ;

                           public boolean isDebitCurrSpecified(){
                               return localDebitCurrTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDebitCurr(){
                               return localDebitCurr;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DebitCurr
                               */
                               public void setDebitCurr(java.lang.String param){
                            localDebitCurrTracker = param != null;
                                   
                                            this.localDebitCurr=param;
                                    

                               }
                            

                        /**
                        * field for EithadGuestNo
                        */

                        
                                    protected java.lang.String localEithadGuestNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEithadGuestNoTracker = false ;

                           public boolean isEithadGuestNoSpecified(){
                               return localEithadGuestNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEithadGuestNo(){
                               return localEithadGuestNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EithadGuestNo
                               */
                               public void setEithadGuestNo(java.lang.String param){
                            localEithadGuestNoTracker = param != null;
                                   
                                            this.localEithadGuestNo=param;
                                    

                               }
                            

                        /**
                        * field for ExistingEithadCust
                        */

                        
                                    protected java.lang.String localExistingEithadCust ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localExistingEithadCustTracker = false ;

                           public boolean isExistingEithadCustSpecified(){
                               return localExistingEithadCustTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getExistingEithadCust(){
                               return localExistingEithadCust;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ExistingEithadCust
                               */
                               public void setExistingEithadCust(java.lang.String param){
                            localExistingEithadCustTracker = param != null;
                                   
                                            this.localExistingEithadCust=param;
                                    

                               }
                            

                        /**
                        * field for MakerCode
                        */

                        
                                    protected java.lang.String localMakerCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMakerCodeTracker = false ;

                           public boolean isMakerCodeSpecified(){
                               return localMakerCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMakerCode(){
                               return localMakerCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MakerCode
                               */
                               public void setMakerCode(java.lang.String param){
                            localMakerCodeTracker = param != null;
                                   
                                            this.localMakerCode=param;
                                    

                               }
                            

                        /**
                        * field for MakerDept
                        */

                        
                                    protected java.lang.String localMakerDept ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMakerDeptTracker = false ;

                           public boolean isMakerDeptSpecified(){
                               return localMakerDeptTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMakerDept(){
                               return localMakerDept;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MakerDept
                               */
                               public void setMakerDept(java.lang.String param){
                            localMakerDeptTracker = param != null;
                                   
                                            this.localMakerDept=param;
                                    

                               }
                            

                        /**
                        * field for MakerName
                        */

                        
                                    protected java.lang.String localMakerName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMakerNameTracker = false ;

                           public boolean isMakerNameSpecified(){
                               return localMakerNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMakerName(){
                               return localMakerName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MakerName
                               */
                               public void setMakerName(java.lang.String param){
                            localMakerNameTracker = param != null;
                                   
                                            this.localMakerName=param;
                                    

                               }
                            

                        /**
                        * field for ModeFunding
                        */

                        
                                    protected java.lang.String localModeFunding ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localModeFundingTracker = false ;

                           public boolean isModeFundingSpecified(){
                               return localModeFundingTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getModeFunding(){
                               return localModeFunding;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ModeFunding
                               */
                               public void setModeFunding(java.lang.String param){
                            localModeFundingTracker = param != null;
                                   
                                            this.localModeFunding=param;
                                    

                               }
                            

                        /**
                        * field for ProdCode
                        */

                        
                                    protected java.lang.String localProdCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localProdCodeTracker = false ;

                           public boolean isProdCodeSpecified(){
                               return localProdCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getProdCode(){
                               return localProdCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ProdCode
                               */
                               public void setProdCode(java.lang.String param){
                            localProdCodeTracker = param != null;
                                   
                                            this.localProdCode=param;
                                    

                               }
                            

                        /**
                        * field for ProdCurr
                        */

                        
                                    protected java.lang.String localProdCurr ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localProdCurrTracker = false ;

                           public boolean isProdCurrSpecified(){
                               return localProdCurrTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getProdCurr(){
                               return localProdCurr;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ProdCurr
                               */
                               public void setProdCurr(java.lang.String param){
                            localProdCurrTracker = param != null;
                                   
                                            this.localProdCurr=param;
                                    

                               }
                            

                        /**
                        * field for ReferredByFamily
                        */

                        
                                    protected java.lang.String localReferredByFamily ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localReferredByFamilyTracker = false ;

                           public boolean isReferredByFamilySpecified(){
                               return localReferredByFamilyTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getReferredByFamily(){
                               return localReferredByFamily;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ReferredByFamily
                               */
                               public void setReferredByFamily(java.lang.String param){
                            localReferredByFamilyTracker = param != null;
                                   
                                            this.localReferredByFamily=param;
                                    

                               }
                            

                        /**
                        * field for SrcCode
                        */

                        
                                    protected java.lang.String localSrcCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSrcCodeTracker = false ;

                           public boolean isSrcCodeSpecified(){
                               return localSrcCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSrcCode(){
                               return localSrcCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SrcCode
                               */
                               public void setSrcCode(java.lang.String param){
                            localSrcCodeTracker = param != null;
                                   
                                            this.localSrcCode=param;
                                    

                               }
                            

                        /**
                        * field for SrcName
                        */

                        
                                    protected java.lang.String localSrcName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSrcNameTracker = false ;

                           public boolean isSrcNameSpecified(){
                               return localSrcNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSrcName(){
                               return localSrcName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SrcName
                               */
                               public void setSrcName(java.lang.String param){
                            localSrcNameTracker = param != null;
                                   
                                            this.localSrcName=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":accountInfo_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "accountInfo_type0",
                           xmlWriter);
                   }

               
                   }
                if (localAccBranchTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "accBranch", xmlWriter);
                             

                                          if (localAccBranch==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("accBranch cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAccBranch);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAvBalTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "avBal", xmlWriter);
                             

                                          if (localAvBal==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("avBal cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAvBal);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCheckerCodeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "checkerCode", xmlWriter);
                             

                                          if (localCheckerCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("checkerCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCheckerCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCheckerDeptTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "checkerDept", xmlWriter);
                             

                                          if (localCheckerDept==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("checkerDept cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCheckerDept);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCheckerNameTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "checkerName", xmlWriter);
                             

                                          if (localCheckerName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("checkerName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCheckerName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localChequeReqTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "chequeReq", xmlWriter);
                             

                                          if (localChequeReq==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("chequeReq cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localChequeReq);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDebitAccNoTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "debitAccNo", xmlWriter);
                             

                                          if (localDebitAccNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("debitAccNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDebitAccNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDebitAmtTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "debitAmt", xmlWriter);
                             

                                          if (localDebitAmt==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("debitAmt cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDebitAmt);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDebitCardTracker){
                                       if (localDebitCard!=null){
                                            for (int i = 0;i < localDebitCard.length;i++){
                                                if (localDebitCard[i] != null){
                                                 localDebitCard[i].serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","debitCard"),
                                                           xmlWriter);
                                                } else {
                                                   
                                                        // we don't have to do any thing since minOccures is zero
                                                    
                                                }

                                            }
                                     } else {
                                        
                                               throw new org.apache.axis2.databinding.ADBException("debitCard cannot be null!!");
                                        
                                    }
                                 } if (localDebitCurrTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "debitCurr", xmlWriter);
                             

                                          if (localDebitCurr==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("debitCurr cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDebitCurr);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEithadGuestNoTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "eithadGuestNo", xmlWriter);
                             

                                          if (localEithadGuestNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("eithadGuestNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEithadGuestNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localExistingEithadCustTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "existingEithadCust", xmlWriter);
                             

                                          if (localExistingEithadCust==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("existingEithadCust cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localExistingEithadCust);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMakerCodeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "makerCode", xmlWriter);
                             

                                          if (localMakerCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("makerCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMakerCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMakerDeptTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "makerDept", xmlWriter);
                             

                                          if (localMakerDept==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("makerDept cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMakerDept);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMakerNameTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "makerName", xmlWriter);
                             

                                          if (localMakerName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("makerName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMakerName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localModeFundingTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "modeFunding", xmlWriter);
                             

                                          if (localModeFunding==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("modeFunding cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localModeFunding);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localProdCodeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "prodCode", xmlWriter);
                             

                                          if (localProdCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("prodCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localProdCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localProdCurrTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "prodCurr", xmlWriter);
                             

                                          if (localProdCurr==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("prodCurr cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localProdCurr);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localReferredByFamilyTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "referredByFamily", xmlWriter);
                             

                                          if (localReferredByFamily==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("referredByFamily cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localReferredByFamily);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSrcCodeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "srcCode", xmlWriter);
                             

                                          if (localSrcCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("srcCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSrcCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSrcNameTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "srcName", xmlWriter);
                             

                                          if (localSrcName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("srcName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSrcName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localAccBranchTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "accBranch"));
                                 
                                        if (localAccBranch != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAccBranch));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("accBranch cannot be null!!");
                                        }
                                    } if (localAvBalTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "avBal"));
                                 
                                        if (localAvBal != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAvBal));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("avBal cannot be null!!");
                                        }
                                    } if (localCheckerCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "checkerCode"));
                                 
                                        if (localCheckerCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCheckerCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("checkerCode cannot be null!!");
                                        }
                                    } if (localCheckerDeptTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "checkerDept"));
                                 
                                        if (localCheckerDept != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCheckerDept));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("checkerDept cannot be null!!");
                                        }
                                    } if (localCheckerNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "checkerName"));
                                 
                                        if (localCheckerName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCheckerName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("checkerName cannot be null!!");
                                        }
                                    } if (localChequeReqTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "chequeReq"));
                                 
                                        if (localChequeReq != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localChequeReq));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("chequeReq cannot be null!!");
                                        }
                                    } if (localDebitAccNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "debitAccNo"));
                                 
                                        if (localDebitAccNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDebitAccNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("debitAccNo cannot be null!!");
                                        }
                                    } if (localDebitAmtTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "debitAmt"));
                                 
                                        if (localDebitAmt != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDebitAmt));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("debitAmt cannot be null!!");
                                        }
                                    } if (localDebitCardTracker){
                             if (localDebitCard!=null) {
                                 for (int i = 0;i < localDebitCard.length;i++){

                                    if (localDebitCard[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                          "debitCard"));
                                         elementList.add(localDebitCard[i]);
                                    } else {
                                        
                                                // nothing to do
                                            
                                    }

                                 }
                             } else {
                                 
                                        throw new org.apache.axis2.databinding.ADBException("debitCard cannot be null!!");
                                    
                             }

                        } if (localDebitCurrTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "debitCurr"));
                                 
                                        if (localDebitCurr != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDebitCurr));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("debitCurr cannot be null!!");
                                        }
                                    } if (localEithadGuestNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "eithadGuestNo"));
                                 
                                        if (localEithadGuestNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEithadGuestNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("eithadGuestNo cannot be null!!");
                                        }
                                    } if (localExistingEithadCustTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "existingEithadCust"));
                                 
                                        if (localExistingEithadCust != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localExistingEithadCust));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("existingEithadCust cannot be null!!");
                                        }
                                    } if (localMakerCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "makerCode"));
                                 
                                        if (localMakerCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMakerCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("makerCode cannot be null!!");
                                        }
                                    } if (localMakerDeptTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "makerDept"));
                                 
                                        if (localMakerDept != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMakerDept));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("makerDept cannot be null!!");
                                        }
                                    } if (localMakerNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "makerName"));
                                 
                                        if (localMakerName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMakerName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("makerName cannot be null!!");
                                        }
                                    } if (localModeFundingTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "modeFunding"));
                                 
                                        if (localModeFunding != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localModeFunding));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("modeFunding cannot be null!!");
                                        }
                                    } if (localProdCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "prodCode"));
                                 
                                        if (localProdCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localProdCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("prodCode cannot be null!!");
                                        }
                                    } if (localProdCurrTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "prodCurr"));
                                 
                                        if (localProdCurr != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localProdCurr));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("prodCurr cannot be null!!");
                                        }
                                    } if (localReferredByFamilyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "referredByFamily"));
                                 
                                        if (localReferredByFamily != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReferredByFamily));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("referredByFamily cannot be null!!");
                                        }
                                    } if (localSrcCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "srcCode"));
                                 
                                        if (localSrcCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSrcCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("srcCode cannot be null!!");
                                        }
                                    } if (localSrcNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "srcName"));
                                 
                                        if (localSrcName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSrcName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("srcName cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static AccountInfo_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            AccountInfo_type0 object =
                new AccountInfo_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"accountInfo_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (AccountInfo_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                        java.util.ArrayList list9 = new java.util.ArrayList();
                    
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","accBranch").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"accBranch" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAccBranch(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","avBal").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"avBal" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAvBal(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","checkerCode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"checkerCode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCheckerCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","checkerDept").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"checkerDept" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCheckerDept(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","checkerName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"checkerName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCheckerName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","chequeReq").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"chequeReq" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setChequeReq(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","debitAccNo").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"debitAccNo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDebitAccNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","debitAmt").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"debitAmt" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDebitAmt(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","debitCard").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    list9.add(DebitCard_type0.Factory.parse(reader));
                                                                
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone9 = false;
                                                        while(!loopDone9){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone9 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","debitCard").equals(reader.getName())){
                                                                    list9.add(DebitCard_type0.Factory.parse(reader));
                                                                        
                                                                }else{
                                                                    loopDone9 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array
                                                        
                                                        object.setDebitCard((DebitCard_type0[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                DebitCard_type0.class,
                                                                list9));
                                                            
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","debitCurr").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"debitCurr" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDebitCurr(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","eithadGuestNo").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"eithadGuestNo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEithadGuestNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","existingEithadCust").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"existingEithadCust" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setExistingEithadCust(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","makerCode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"makerCode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMakerCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","makerDept").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"makerDept" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMakerDept(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","makerName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"makerName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMakerName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","modeFunding").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"modeFunding" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setModeFunding(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","prodCode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"prodCode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setProdCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","prodCurr").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"prodCurr" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setProdCurr(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","referredByFamily").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"referredByFamily" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReferredByFamily(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","srcCode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"srcCode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSrcCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","srcName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"srcName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSrcName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class AddOnlineLendingApplicationDtlsReq_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = addOnlineLendingApplicationDtlsReq_type0
                Namespace URI = http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for RMCode
                        */

                        
                                    protected java.lang.String localRMCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRMCodeTracker = false ;

                           public boolean isRMCodeSpecified(){
                               return localRMCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRMCode(){
                               return localRMCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RMCode
                               */
                               public void setRMCode(java.lang.String param){
                            localRMCodeTracker = param != null;
                                   
                                            this.localRMCode=param;
                                    

                               }
                            

                        /**
                        * field for ApplicationData
                        */

                        
                                    protected ApplicationData_type0 localApplicationData ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localApplicationDataTracker = false ;

                           public boolean isApplicationDataSpecified(){
                               return localApplicationDataTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return ApplicationData_type0
                           */
                           public  ApplicationData_type0 getApplicationData(){
                               return localApplicationData;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ApplicationData
                               */
                               public void setApplicationData(ApplicationData_type0 param){
                            localApplicationDataTracker = param != null;
                                   
                                            this.localApplicationData=param;
                                    

                               }
                            

                        /**
                        * field for ProductData
                        */

                        
                                    protected ProductData_type0 localProductData ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localProductDataTracker = false ;

                           public boolean isProductDataSpecified(){
                               return localProductDataTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return ProductData_type0
                           */
                           public  ProductData_type0 getProductData(){
                               return localProductData;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ProductData
                               */
                               public void setProductData(ProductData_type0 param){
                            localProductDataTracker = param != null;
                                   
                                            this.localProductData=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":addOnlineLendingApplicationDtlsReq_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "addOnlineLendingApplicationDtlsReq_type0",
                           xmlWriter);
                   }

               
                   }
                if (localRMCodeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "RMCode", xmlWriter);
                             

                                          if (localRMCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("RMCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRMCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localApplicationDataTracker){
                                            if (localApplicationData==null){
                                                 throw new org.apache.axis2.databinding.ADBException("applicationData cannot be null!!");
                                            }
                                           localApplicationData.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","applicationData"),
                                               xmlWriter);
                                        } if (localProductDataTracker){
                                            if (localProductData==null){
                                                 throw new org.apache.axis2.databinding.ADBException("productData cannot be null!!");
                                            }
                                           localProductData.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","productData"),
                                               xmlWriter);
                                        }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localRMCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "RMCode"));
                                 
                                        if (localRMCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRMCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("RMCode cannot be null!!");
                                        }
                                    } if (localApplicationDataTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "applicationData"));
                            
                            
                                    if (localApplicationData==null){
                                         throw new org.apache.axis2.databinding.ADBException("applicationData cannot be null!!");
                                    }
                                    elementList.add(localApplicationData);
                                } if (localProductDataTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "productData"));
                            
                            
                                    if (localProductData==null){
                                         throw new org.apache.axis2.databinding.ADBException("productData cannot be null!!");
                                    }
                                    elementList.add(localProductData);
                                }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static AddOnlineLendingApplicationDtlsReq_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            AddOnlineLendingApplicationDtlsReq_type0 object =
                new AddOnlineLendingApplicationDtlsReq_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"addOnlineLendingApplicationDtlsReq_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (AddOnlineLendingApplicationDtlsReq_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","RMCode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"RMCode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRMCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","applicationData").equals(reader.getName())){
                                
                                                object.setApplicationData(ApplicationData_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","productData").equals(reader.getName())){
                                
                                                object.setProductData(ProductData_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class AddOnlineCardAppDataResMsg
        implements org.apache.axis2.databinding.ADBBean{
        
                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                "AddOnlineCardAppDataResMsg",
                "ns2");

            

                        /**
                        * field for Header
                        */

                        
                                    protected HeaderType localHeader ;
                                

                           /**
                           * Auto generated getter method
                           * @return HeaderType
                           */
                           public  HeaderType getHeader(){
                               return localHeader;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Header
                               */
                               public void setHeader(HeaderType param){
                            
                                            this.localHeader=param;
                                    

                               }
                            

                        /**
                        * field for AddOnlineCardAppDataRes
                        */

                        
                                    protected AddOnlineCardAppDataRes_type0 localAddOnlineCardAppDataRes ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAddOnlineCardAppDataResTracker = false ;

                           public boolean isAddOnlineCardAppDataResSpecified(){
                               return localAddOnlineCardAppDataResTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return AddOnlineCardAppDataRes_type0
                           */
                           public  AddOnlineCardAppDataRes_type0 getAddOnlineCardAppDataRes(){
                               return localAddOnlineCardAppDataRes;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AddOnlineCardAppDataRes
                               */
                               public void setAddOnlineCardAppDataRes(AddOnlineCardAppDataRes_type0 param){
                            localAddOnlineCardAppDataResTracker = param != null;
                                   
                                            this.localAddOnlineCardAppDataRes=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
               return factory.createOMElement(dataSource,MY_QNAME);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":AddOnlineCardAppDataResMsg",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "AddOnlineCardAppDataResMsg",
                           xmlWriter);
                   }

               
                   }
               
                                            if (localHeader==null){
                                                 throw new org.apache.axis2.databinding.ADBException("header cannot be null!!");
                                            }
                                           localHeader.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","header"),
                                               xmlWriter);
                                         if (localAddOnlineCardAppDataResTracker){
                                            if (localAddOnlineCardAppDataRes==null){
                                                 throw new org.apache.axis2.databinding.ADBException("AddOnlineCardAppDataRes cannot be null!!");
                                            }
                                           localAddOnlineCardAppDataRes.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","AddOnlineCardAppDataRes"),
                                               xmlWriter);
                                        }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "header"));
                            
                            
                                    if (localHeader==null){
                                         throw new org.apache.axis2.databinding.ADBException("header cannot be null!!");
                                    }
                                    elementList.add(localHeader);
                                 if (localAddOnlineCardAppDataResTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "AddOnlineCardAppDataRes"));
                            
                            
                                    if (localAddOnlineCardAppDataRes==null){
                                         throw new org.apache.axis2.databinding.ADBException("AddOnlineCardAppDataRes cannot be null!!");
                                    }
                                    elementList.add(localAddOnlineCardAppDataRes);
                                }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static AddOnlineCardAppDataResMsg parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            AddOnlineCardAppDataResMsg object =
                new AddOnlineCardAppDataResMsg();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"AddOnlineCardAppDataResMsg".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (AddOnlineCardAppDataResMsg)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","header").equals(reader.getName())){
                                
                                                object.setHeader(HeaderType.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                                }
                            
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","AddOnlineCardAppDataRes").equals(reader.getName())){
                                
                                                object.setAddOnlineCardAppDataRes(AddOnlineCardAppDataRes_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class SiForRegTransfer_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = siForRegTransfer_type0
                Namespace URI = http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for CreditToProd
                        */

                        
                                    protected java.lang.String localCreditToProd ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCreditToProdTracker = false ;

                           public boolean isCreditToProdSpecified(){
                               return localCreditToProdTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCreditToProd(){
                               return localCreditToProd;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CreditToProd
                               */
                               public void setCreditToProd(java.lang.String param){
                            localCreditToProdTracker = param != null;
                                   
                                            this.localCreditToProd=param;
                                    

                               }
                            

                        /**
                        * field for Curr
                        */

                        
                                    protected java.lang.String localCurr ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCurrTracker = false ;

                           public boolean isCurrSpecified(){
                               return localCurrTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCurr(){
                               return localCurr;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Curr
                               */
                               public void setCurr(java.lang.String param){
                            localCurrTracker = param != null;
                                   
                                            this.localCurr=param;
                                    

                               }
                            

                        /**
                        * field for DebAcc
                        */

                        
                                    protected java.lang.String localDebAcc ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDebAccTracker = false ;

                           public boolean isDebAccSpecified(){
                               return localDebAccTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDebAcc(){
                               return localDebAcc;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DebAcc
                               */
                               public void setDebAcc(java.lang.String param){
                            localDebAccTracker = param != null;
                                   
                                            this.localDebAcc=param;
                                    

                               }
                            

                        /**
                        * field for FirstPayDate
                        */

                        
                                    protected java.lang.String localFirstPayDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFirstPayDateTracker = false ;

                           public boolean isFirstPayDateSpecified(){
                               return localFirstPayDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFirstPayDate(){
                               return localFirstPayDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FirstPayDate
                               */
                               public void setFirstPayDate(java.lang.String param){
                            localFirstPayDateTracker = param != null;
                                   
                                            this.localFirstPayDate=param;
                                    

                               }
                            

                        /**
                        * field for LastPayDate
                        */

                        
                                    protected java.lang.String localLastPayDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLastPayDateTracker = false ;

                           public boolean isLastPayDateSpecified(){
                               return localLastPayDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLastPayDate(){
                               return localLastPayDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LastPayDate
                               */
                               public void setLastPayDate(java.lang.String param){
                            localLastPayDateTracker = param != null;
                                   
                                            this.localLastPayDate=param;
                                    

                               }
                            

                        /**
                        * field for Period
                        */

                        
                                    protected java.lang.String localPeriod ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPeriodTracker = false ;

                           public boolean isPeriodSpecified(){
                               return localPeriodTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPeriod(){
                               return localPeriod;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Period
                               */
                               public void setPeriod(java.lang.String param){
                            localPeriodTracker = param != null;
                                   
                                            this.localPeriod=param;
                                    

                               }
                            

                        /**
                        * field for TransferAmt
                        */

                        
                                    protected java.lang.String localTransferAmt ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTransferAmtTracker = false ;

                           public boolean isTransferAmtSpecified(){
                               return localTransferAmtTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTransferAmt(){
                               return localTransferAmt;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TransferAmt
                               */
                               public void setTransferAmt(java.lang.String param){
                            localTransferAmtTracker = param != null;
                                   
                                            this.localTransferAmt=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":siForRegTransfer_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "siForRegTransfer_type0",
                           xmlWriter);
                   }

               
                   }
                if (localCreditToProdTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "creditToProd", xmlWriter);
                             

                                          if (localCreditToProd==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("creditToProd cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCreditToProd);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCurrTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "curr", xmlWriter);
                             

                                          if (localCurr==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("curr cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCurr);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDebAccTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "debAcc", xmlWriter);
                             

                                          if (localDebAcc==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("debAcc cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDebAcc);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFirstPayDateTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "firstPayDate", xmlWriter);
                             

                                          if (localFirstPayDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("firstPayDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFirstPayDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLastPayDateTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "lastPayDate", xmlWriter);
                             

                                          if (localLastPayDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("lastPayDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLastPayDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPeriodTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "period", xmlWriter);
                             

                                          if (localPeriod==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("period cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPeriod);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTransferAmtTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "transferAmt", xmlWriter);
                             

                                          if (localTransferAmt==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("transferAmt cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTransferAmt);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localCreditToProdTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "creditToProd"));
                                 
                                        if (localCreditToProd != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCreditToProd));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("creditToProd cannot be null!!");
                                        }
                                    } if (localCurrTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "curr"));
                                 
                                        if (localCurr != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCurr));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("curr cannot be null!!");
                                        }
                                    } if (localDebAccTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "debAcc"));
                                 
                                        if (localDebAcc != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDebAcc));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("debAcc cannot be null!!");
                                        }
                                    } if (localFirstPayDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "firstPayDate"));
                                 
                                        if (localFirstPayDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFirstPayDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("firstPayDate cannot be null!!");
                                        }
                                    } if (localLastPayDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "lastPayDate"));
                                 
                                        if (localLastPayDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLastPayDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("lastPayDate cannot be null!!");
                                        }
                                    } if (localPeriodTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "period"));
                                 
                                        if (localPeriod != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPeriod));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("period cannot be null!!");
                                        }
                                    } if (localTransferAmtTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "transferAmt"));
                                 
                                        if (localTransferAmt != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTransferAmt));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("transferAmt cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static SiForRegTransfer_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            SiForRegTransfer_type0 object =
                new SiForRegTransfer_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"siForRegTransfer_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (SiForRegTransfer_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","creditToProd").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"creditToProd" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCreditToProd(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","curr").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"curr" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCurr(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","debAcc").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"debAcc" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDebAcc(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","firstPayDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"firstPayDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFirstPayDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","lastPayDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"lastPayDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLastPayDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","period").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"period" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPeriod(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","transferAmt").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"transferAmt" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTransferAmt(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class ApplicationData_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = applicationData_type0
                Namespace URI = http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for TypeOfCustomer
                        */

                        
                                    protected java.lang.String localTypeOfCustomer ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTypeOfCustomerTracker = false ;

                           public boolean isTypeOfCustomerSpecified(){
                               return localTypeOfCustomerTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTypeOfCustomer(){
                               return localTypeOfCustomer;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TypeOfCustomer
                               */
                               public void setTypeOfCustomer(java.lang.String param){
                            localTypeOfCustomerTracker = param != null;
                                   
                                            this.localTypeOfCustomer=param;
                                    

                               }
                            

                        /**
                        * field for GrossIncome
                        */

                        
                                    protected java.lang.String localGrossIncome ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localGrossIncomeTracker = false ;

                           public boolean isGrossIncomeSpecified(){
                               return localGrossIncomeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getGrossIncome(){
                               return localGrossIncome;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param GrossIncome
                               */
                               public void setGrossIncome(java.lang.String param){
                            localGrossIncomeTracker = param != null;
                                   
                                            this.localGrossIncome=param;
                                    

                               }
                            

                        /**
                        * field for MonthlyBalInAc
                        */

                        
                                    protected java.lang.String localMonthlyBalInAc ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMonthlyBalInAcTracker = false ;

                           public boolean isMonthlyBalInAcSpecified(){
                               return localMonthlyBalInAcTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMonthlyBalInAc(){
                               return localMonthlyBalInAc;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MonthlyBalInAc
                               */
                               public void setMonthlyBalInAc(java.lang.String param){
                            localMonthlyBalInAcTracker = param != null;
                                   
                                            this.localMonthlyBalInAc=param;
                                    

                               }
                            

                        /**
                        * field for NationalityCode
                        */

                        
                                    protected java.lang.String localNationalityCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNationalityCodeTracker = false ;

                           public boolean isNationalityCodeSpecified(){
                               return localNationalityCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNationalityCode(){
                               return localNationalityCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NationalityCode
                               */
                               public void setNationalityCode(java.lang.String param){
                            localNationalityCodeTracker = param != null;
                                   
                                            this.localNationalityCode=param;
                                    

                               }
                            

                        /**
                        * field for CompanyName
                        */

                        
                                    protected java.lang.String localCompanyName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCompanyNameTracker = false ;

                           public boolean isCompanyNameSpecified(){
                               return localCompanyNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCompanyName(){
                               return localCompanyName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CompanyName
                               */
                               public void setCompanyName(java.lang.String param){
                            localCompanyNameTracker = param != null;
                                   
                                            this.localCompanyName=param;
                                    

                               }
                            

                        /**
                        * field for ResidenceAddr1
                        */

                        
                                    protected java.lang.String localResidenceAddr1 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localResidenceAddr1Tracker = false ;

                           public boolean isResidenceAddr1Specified(){
                               return localResidenceAddr1Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getResidenceAddr1(){
                               return localResidenceAddr1;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ResidenceAddr1
                               */
                               public void setResidenceAddr1(java.lang.String param){
                            localResidenceAddr1Tracker = param != null;
                                   
                                            this.localResidenceAddr1=param;
                                    

                               }
                            

                        /**
                        * field for ResidenceAddr2
                        */

                        
                                    protected java.lang.String localResidenceAddr2 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localResidenceAddr2Tracker = false ;

                           public boolean isResidenceAddr2Specified(){
                               return localResidenceAddr2Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getResidenceAddr2(){
                               return localResidenceAddr2;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ResidenceAddr2
                               */
                               public void setResidenceAddr2(java.lang.String param){
                            localResidenceAddr2Tracker = param != null;
                                   
                                            this.localResidenceAddr2=param;
                                    

                               }
                            

                        /**
                        * field for ResidenceAddr3
                        */

                        
                                    protected java.lang.String localResidenceAddr3 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localResidenceAddr3Tracker = false ;

                           public boolean isResidenceAddr3Specified(){
                               return localResidenceAddr3Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getResidenceAddr3(){
                               return localResidenceAddr3;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ResidenceAddr3
                               */
                               public void setResidenceAddr3(java.lang.String param){
                            localResidenceAddr3Tracker = param != null;
                                   
                                            this.localResidenceAddr3=param;
                                    

                               }
                            

                        /**
                        * field for ResidenceCity
                        */

                        
                                    protected java.lang.String localResidenceCity ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localResidenceCityTracker = false ;

                           public boolean isResidenceCitySpecified(){
                               return localResidenceCityTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getResidenceCity(){
                               return localResidenceCity;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ResidenceCity
                               */
                               public void setResidenceCity(java.lang.String param){
                            localResidenceCityTracker = param != null;
                                   
                                            this.localResidenceCity=param;
                                    

                               }
                            

                        /**
                        * field for ResidenceState
                        */

                        
                                    protected java.lang.String localResidenceState ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localResidenceStateTracker = false ;

                           public boolean isResidenceStateSpecified(){
                               return localResidenceStateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getResidenceState(){
                               return localResidenceState;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ResidenceState
                               */
                               public void setResidenceState(java.lang.String param){
                            localResidenceStateTracker = param != null;
                                   
                                            this.localResidenceState=param;
                                    

                               }
                            

                        /**
                        * field for OfficeVillaNumber
                        */

                        
                                    protected java.lang.String localOfficeVillaNumber ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOfficeVillaNumberTracker = false ;

                           public boolean isOfficeVillaNumberSpecified(){
                               return localOfficeVillaNumberTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOfficeVillaNumber(){
                               return localOfficeVillaNumber;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OfficeVillaNumber
                               */
                               public void setOfficeVillaNumber(java.lang.String param){
                            localOfficeVillaNumberTracker = param != null;
                                   
                                            this.localOfficeVillaNumber=param;
                                    

                               }
                            

                        /**
                        * field for OfficeBuildingName
                        */

                        
                                    protected java.lang.String localOfficeBuildingName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOfficeBuildingNameTracker = false ;

                           public boolean isOfficeBuildingNameSpecified(){
                               return localOfficeBuildingNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOfficeBuildingName(){
                               return localOfficeBuildingName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OfficeBuildingName
                               */
                               public void setOfficeBuildingName(java.lang.String param){
                            localOfficeBuildingNameTracker = param != null;
                                   
                                            this.localOfficeBuildingName=param;
                                    

                               }
                            

                        /**
                        * field for OfficeStreet
                        */

                        
                                    protected java.lang.String localOfficeStreet ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOfficeStreetTracker = false ;

                           public boolean isOfficeStreetSpecified(){
                               return localOfficeStreetTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOfficeStreet(){
                               return localOfficeStreet;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OfficeStreet
                               */
                               public void setOfficeStreet(java.lang.String param){
                            localOfficeStreetTracker = param != null;
                                   
                                            this.localOfficeStreet=param;
                                    

                               }
                            

                        /**
                        * field for OfficeCity
                        */

                        
                                    protected java.lang.String localOfficeCity ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOfficeCityTracker = false ;

                           public boolean isOfficeCitySpecified(){
                               return localOfficeCityTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOfficeCity(){
                               return localOfficeCity;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OfficeCity
                               */
                               public void setOfficeCity(java.lang.String param){
                            localOfficeCityTracker = param != null;
                                   
                                            this.localOfficeCity=param;
                                    

                               }
                            

                        /**
                        * field for OfficeEmirate
                        */

                        
                                    protected java.lang.String localOfficeEmirate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOfficeEmirateTracker = false ;

                           public boolean isOfficeEmirateSpecified(){
                               return localOfficeEmirateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOfficeEmirate(){
                               return localOfficeEmirate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OfficeEmirate
                               */
                               public void setOfficeEmirate(java.lang.String param){
                            localOfficeEmirateTracker = param != null;
                                   
                                            this.localOfficeEmirate=param;
                                    

                               }
                            

                        /**
                        * field for HomeAddress1
                        */

                        
                                    protected java.lang.String localHomeAddress1 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHomeAddress1Tracker = false ;

                           public boolean isHomeAddress1Specified(){
                               return localHomeAddress1Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHomeAddress1(){
                               return localHomeAddress1;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HomeAddress1
                               */
                               public void setHomeAddress1(java.lang.String param){
                            localHomeAddress1Tracker = param != null;
                                   
                                            this.localHomeAddress1=param;
                                    

                               }
                            

                        /**
                        * field for HomeAddress2
                        */

                        
                                    protected java.lang.String localHomeAddress2 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHomeAddress2Tracker = false ;

                           public boolean isHomeAddress2Specified(){
                               return localHomeAddress2Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHomeAddress2(){
                               return localHomeAddress2;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HomeAddress2
                               */
                               public void setHomeAddress2(java.lang.String param){
                            localHomeAddress2Tracker = param != null;
                                   
                                            this.localHomeAddress2=param;
                                    

                               }
                            

                        /**
                        * field for HomeAddress3
                        */

                        
                                    protected java.lang.String localHomeAddress3 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHomeAddress3Tracker = false ;

                           public boolean isHomeAddress3Specified(){
                               return localHomeAddress3Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHomeAddress3(){
                               return localHomeAddress3;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HomeAddress3
                               */
                               public void setHomeAddress3(java.lang.String param){
                            localHomeAddress3Tracker = param != null;
                                   
                                            this.localHomeAddress3=param;
                                    

                               }
                            

                        /**
                        * field for HomeCountry
                        */

                        
                                    protected java.lang.String localHomeCountry ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHomeCountryTracker = false ;

                           public boolean isHomeCountrySpecified(){
                               return localHomeCountryTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHomeCountry(){
                               return localHomeCountry;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HomeCountry
                               */
                               public void setHomeCountry(java.lang.String param){
                            localHomeCountryTracker = param != null;
                                   
                                            this.localHomeCountry=param;
                                    

                               }
                            

                        /**
                        * field for HomePoBox
                        */

                        
                                    protected java.lang.String localHomePoBox ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHomePoBoxTracker = false ;

                           public boolean isHomePoBoxSpecified(){
                               return localHomePoBoxTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHomePoBox(){
                               return localHomePoBox;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HomePoBox
                               */
                               public void setHomePoBox(java.lang.String param){
                            localHomePoBoxTracker = param != null;
                                   
                                            this.localHomePoBox=param;
                                    

                               }
                            

                        /**
                        * field for PoBox
                        */

                        
                                    protected java.lang.String localPoBox ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPoBoxTracker = false ;

                           public boolean isPoBoxSpecified(){
                               return localPoBoxTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPoBox(){
                               return localPoBox;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PoBox
                               */
                               public void setPoBox(java.lang.String param){
                            localPoBoxTracker = param != null;
                                   
                                            this.localPoBox=param;
                                    

                               }
                            

                        /**
                        * field for Emirate
                        */

                        
                                    protected java.lang.String localEmirate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmirateTracker = false ;

                           public boolean isEmirateSpecified(){
                               return localEmirateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEmirate(){
                               return localEmirate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Emirate
                               */
                               public void setEmirate(java.lang.String param){
                            localEmirateTracker = param != null;
                                   
                                            this.localEmirate=param;
                                    

                               }
                            

                        /**
                        * field for Country
                        */

                        
                                    protected java.lang.String localCountry ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCountryTracker = false ;

                           public boolean isCountrySpecified(){
                               return localCountryTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCountry(){
                               return localCountry;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Country
                               */
                               public void setCountry(java.lang.String param){
                            localCountryTracker = param != null;
                                   
                                            this.localCountry=param;
                                    

                               }
                            

                        /**
                        * field for HomePhone
                        */

                        
                                    protected java.lang.String localHomePhone ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHomePhoneTracker = false ;

                           public boolean isHomePhoneSpecified(){
                               return localHomePhoneTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHomePhone(){
                               return localHomePhone;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HomePhone
                               */
                               public void setHomePhone(java.lang.String param){
                            localHomePhoneTracker = param != null;
                                   
                                            this.localHomePhone=param;
                                    

                               }
                            

                        /**
                        * field for HomeCity
                        */

                        
                                    protected java.lang.String localHomeCity ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHomeCityTracker = false ;

                           public boolean isHomeCitySpecified(){
                               return localHomeCityTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHomeCity(){
                               return localHomeCity;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HomeCity
                               */
                               public void setHomeCity(java.lang.String param){
                            localHomeCityTracker = param != null;
                                   
                                            this.localHomeCity=param;
                                    

                               }
                            

                        /**
                        * field for HomeEmirate
                        */

                        
                                    protected java.lang.String localHomeEmirate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHomeEmirateTracker = false ;

                           public boolean isHomeEmirateSpecified(){
                               return localHomeEmirateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHomeEmirate(){
                               return localHomeEmirate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HomeEmirate
                               */
                               public void setHomeEmirate(java.lang.String param){
                            localHomeEmirateTracker = param != null;
                                   
                                            this.localHomeEmirate=param;
                                    

                               }
                            

                        /**
                        * field for OfficePoBox
                        */

                        
                                    protected java.lang.String localOfficePoBox ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOfficePoBoxTracker = false ;

                           public boolean isOfficePoBoxSpecified(){
                               return localOfficePoBoxTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOfficePoBox(){
                               return localOfficePoBox;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OfficePoBox
                               */
                               public void setOfficePoBox(java.lang.String param){
                            localOfficePoBoxTracker = param != null;
                                   
                                            this.localOfficePoBox=param;
                                    

                               }
                            

                        /**
                        * field for OfficePhoneNumber
                        */

                        
                                    protected java.lang.String localOfficePhoneNumber ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOfficePhoneNumberTracker = false ;

                           public boolean isOfficePhoneNumberSpecified(){
                               return localOfficePhoneNumberTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOfficePhoneNumber(){
                               return localOfficePhoneNumber;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OfficePhoneNumber
                               */
                               public void setOfficePhoneNumber(java.lang.String param){
                            localOfficePhoneNumberTracker = param != null;
                                   
                                            this.localOfficePhoneNumber=param;
                                    

                               }
                            

                        /**
                        * field for CustomerTitle
                        */

                        
                                    protected java.lang.String localCustomerTitle ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustomerTitleTracker = false ;

                           public boolean isCustomerTitleSpecified(){
                               return localCustomerTitleTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustomerTitle(){
                               return localCustomerTitle;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustomerTitle
                               */
                               public void setCustomerTitle(java.lang.String param){
                            localCustomerTitleTracker = param != null;
                                   
                                            this.localCustomerTitle=param;
                                    

                               }
                            

                        /**
                        * field for CustomerName
                        */

                        
                                    protected java.lang.String localCustomerName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustomerNameTracker = false ;

                           public boolean isCustomerNameSpecified(){
                               return localCustomerNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustomerName(){
                               return localCustomerName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustomerName
                               */
                               public void setCustomerName(java.lang.String param){
                            localCustomerNameTracker = param != null;
                                   
                                            this.localCustomerName=param;
                                    

                               }
                            

                        /**
                        * field for MobileNo
                        */

                        
                                    protected java.lang.String localMobileNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMobileNoTracker = false ;

                           public boolean isMobileNoSpecified(){
                               return localMobileNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMobileNo(){
                               return localMobileNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MobileNo
                               */
                               public void setMobileNo(java.lang.String param){
                            localMobileNoTracker = param != null;
                                   
                                            this.localMobileNo=param;
                                    

                               }
                            

                        /**
                        * field for CustomerId
                        */

                        
                                    protected java.lang.String localCustomerId ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustomerIdTracker = false ;

                           public boolean isCustomerIdSpecified(){
                               return localCustomerIdTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustomerId(){
                               return localCustomerId;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustomerId
                               */
                               public void setCustomerId(java.lang.String param){
                            localCustomerIdTracker = param != null;
                                   
                                            this.localCustomerId=param;
                                    

                               }
                            

                        /**
                        * field for EmailId
                        */

                        
                                    protected java.lang.String localEmailId ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmailIdTracker = false ;

                           public boolean isEmailIdSpecified(){
                               return localEmailIdTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEmailId(){
                               return localEmailId;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EmailId
                               */
                               public void setEmailId(java.lang.String param){
                            localEmailIdTracker = param != null;
                                   
                                            this.localEmailId=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":applicationData_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "applicationData_type0",
                           xmlWriter);
                   }

               
                   }
                if (localTypeOfCustomerTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "typeOfCustomer", xmlWriter);
                             

                                          if (localTypeOfCustomer==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("typeOfCustomer cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTypeOfCustomer);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localGrossIncomeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "grossIncome", xmlWriter);
                             

                                          if (localGrossIncome==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("grossIncome cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localGrossIncome);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMonthlyBalInAcTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "monthlyBalInAc", xmlWriter);
                             

                                          if (localMonthlyBalInAc==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("monthlyBalInAc cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMonthlyBalInAc);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNationalityCodeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "nationalityCode", xmlWriter);
                             

                                          if (localNationalityCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("nationalityCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNationalityCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCompanyNameTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "companyName", xmlWriter);
                             

                                          if (localCompanyName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("companyName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCompanyName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localResidenceAddr1Tracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "residenceAddr1", xmlWriter);
                             

                                          if (localResidenceAddr1==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("residenceAddr1 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localResidenceAddr1);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localResidenceAddr2Tracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "residenceAddr2", xmlWriter);
                             

                                          if (localResidenceAddr2==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("residenceAddr2 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localResidenceAddr2);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localResidenceAddr3Tracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "residenceAddr3", xmlWriter);
                             

                                          if (localResidenceAddr3==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("residenceAddr3 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localResidenceAddr3);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localResidenceCityTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "residenceCity", xmlWriter);
                             

                                          if (localResidenceCity==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("residenceCity cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localResidenceCity);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localResidenceStateTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "residenceState", xmlWriter);
                             

                                          if (localResidenceState==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("residenceState cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localResidenceState);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOfficeVillaNumberTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "officeVillaNumber", xmlWriter);
                             

                                          if (localOfficeVillaNumber==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("officeVillaNumber cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOfficeVillaNumber);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOfficeBuildingNameTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "officeBuildingName", xmlWriter);
                             

                                          if (localOfficeBuildingName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("officeBuildingName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOfficeBuildingName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOfficeStreetTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "officeStreet", xmlWriter);
                             

                                          if (localOfficeStreet==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("officeStreet cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOfficeStreet);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOfficeCityTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "officeCity", xmlWriter);
                             

                                          if (localOfficeCity==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("officeCity cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOfficeCity);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOfficeEmirateTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "officeEmirate", xmlWriter);
                             

                                          if (localOfficeEmirate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("officeEmirate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOfficeEmirate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHomeAddress1Tracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "homeAddress1", xmlWriter);
                             

                                          if (localHomeAddress1==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("homeAddress1 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHomeAddress1);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHomeAddress2Tracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "homeAddress2", xmlWriter);
                             

                                          if (localHomeAddress2==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("homeAddress2 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHomeAddress2);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHomeAddress3Tracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "homeAddress3", xmlWriter);
                             

                                          if (localHomeAddress3==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("homeAddress3 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHomeAddress3);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHomeCountryTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "homeCountry", xmlWriter);
                             

                                          if (localHomeCountry==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("homeCountry cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHomeCountry);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHomePoBoxTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "homePoBox", xmlWriter);
                             

                                          if (localHomePoBox==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("homePoBox cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHomePoBox);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPoBoxTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "poBox", xmlWriter);
                             

                                          if (localPoBox==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("poBox cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPoBox);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEmirateTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "emirate", xmlWriter);
                             

                                          if (localEmirate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("emirate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEmirate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCountryTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "country", xmlWriter);
                             

                                          if (localCountry==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("country cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCountry);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHomePhoneTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "homePhone", xmlWriter);
                             

                                          if (localHomePhone==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("homePhone cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHomePhone);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHomeCityTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "homeCity", xmlWriter);
                             

                                          if (localHomeCity==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("homeCity cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHomeCity);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHomeEmirateTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "homeEmirate", xmlWriter);
                             

                                          if (localHomeEmirate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("homeEmirate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHomeEmirate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOfficePoBoxTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "officePoBox", xmlWriter);
                             

                                          if (localOfficePoBox==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("officePoBox cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOfficePoBox);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOfficePhoneNumberTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "officePhoneNumber", xmlWriter);
                             

                                          if (localOfficePhoneNumber==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("officePhoneNumber cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOfficePhoneNumber);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustomerTitleTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "customerTitle", xmlWriter);
                             

                                          if (localCustomerTitle==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("customerTitle cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustomerTitle);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustomerNameTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "customerName", xmlWriter);
                             

                                          if (localCustomerName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("customerName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustomerName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMobileNoTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "mobileNo", xmlWriter);
                             

                                          if (localMobileNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("mobileNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMobileNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustomerIdTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "customerId", xmlWriter);
                             

                                          if (localCustomerId==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("customerId cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustomerId);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEmailIdTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "emailId", xmlWriter);
                             

                                          if (localEmailId==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("emailId cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEmailId);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localTypeOfCustomerTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "typeOfCustomer"));
                                 
                                        if (localTypeOfCustomer != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTypeOfCustomer));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("typeOfCustomer cannot be null!!");
                                        }
                                    } if (localGrossIncomeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "grossIncome"));
                                 
                                        if (localGrossIncome != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localGrossIncome));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("grossIncome cannot be null!!");
                                        }
                                    } if (localMonthlyBalInAcTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "monthlyBalInAc"));
                                 
                                        if (localMonthlyBalInAc != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMonthlyBalInAc));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("monthlyBalInAc cannot be null!!");
                                        }
                                    } if (localNationalityCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "nationalityCode"));
                                 
                                        if (localNationalityCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNationalityCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("nationalityCode cannot be null!!");
                                        }
                                    } if (localCompanyNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "companyName"));
                                 
                                        if (localCompanyName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCompanyName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("companyName cannot be null!!");
                                        }
                                    } if (localResidenceAddr1Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "residenceAddr1"));
                                 
                                        if (localResidenceAddr1 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localResidenceAddr1));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("residenceAddr1 cannot be null!!");
                                        }
                                    } if (localResidenceAddr2Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "residenceAddr2"));
                                 
                                        if (localResidenceAddr2 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localResidenceAddr2));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("residenceAddr2 cannot be null!!");
                                        }
                                    } if (localResidenceAddr3Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "residenceAddr3"));
                                 
                                        if (localResidenceAddr3 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localResidenceAddr3));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("residenceAddr3 cannot be null!!");
                                        }
                                    } if (localResidenceCityTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "residenceCity"));
                                 
                                        if (localResidenceCity != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localResidenceCity));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("residenceCity cannot be null!!");
                                        }
                                    } if (localResidenceStateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "residenceState"));
                                 
                                        if (localResidenceState != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localResidenceState));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("residenceState cannot be null!!");
                                        }
                                    } if (localOfficeVillaNumberTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "officeVillaNumber"));
                                 
                                        if (localOfficeVillaNumber != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOfficeVillaNumber));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("officeVillaNumber cannot be null!!");
                                        }
                                    } if (localOfficeBuildingNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "officeBuildingName"));
                                 
                                        if (localOfficeBuildingName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOfficeBuildingName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("officeBuildingName cannot be null!!");
                                        }
                                    } if (localOfficeStreetTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "officeStreet"));
                                 
                                        if (localOfficeStreet != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOfficeStreet));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("officeStreet cannot be null!!");
                                        }
                                    } if (localOfficeCityTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "officeCity"));
                                 
                                        if (localOfficeCity != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOfficeCity));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("officeCity cannot be null!!");
                                        }
                                    } if (localOfficeEmirateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "officeEmirate"));
                                 
                                        if (localOfficeEmirate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOfficeEmirate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("officeEmirate cannot be null!!");
                                        }
                                    } if (localHomeAddress1Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "homeAddress1"));
                                 
                                        if (localHomeAddress1 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHomeAddress1));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("homeAddress1 cannot be null!!");
                                        }
                                    } if (localHomeAddress2Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "homeAddress2"));
                                 
                                        if (localHomeAddress2 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHomeAddress2));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("homeAddress2 cannot be null!!");
                                        }
                                    } if (localHomeAddress3Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "homeAddress3"));
                                 
                                        if (localHomeAddress3 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHomeAddress3));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("homeAddress3 cannot be null!!");
                                        }
                                    } if (localHomeCountryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "homeCountry"));
                                 
                                        if (localHomeCountry != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHomeCountry));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("homeCountry cannot be null!!");
                                        }
                                    } if (localHomePoBoxTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "homePoBox"));
                                 
                                        if (localHomePoBox != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHomePoBox));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("homePoBox cannot be null!!");
                                        }
                                    } if (localPoBoxTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "poBox"));
                                 
                                        if (localPoBox != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPoBox));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("poBox cannot be null!!");
                                        }
                                    } if (localEmirateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "emirate"));
                                 
                                        if (localEmirate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmirate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("emirate cannot be null!!");
                                        }
                                    } if (localCountryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "country"));
                                 
                                        if (localCountry != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCountry));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("country cannot be null!!");
                                        }
                                    } if (localHomePhoneTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "homePhone"));
                                 
                                        if (localHomePhone != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHomePhone));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("homePhone cannot be null!!");
                                        }
                                    } if (localHomeCityTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "homeCity"));
                                 
                                        if (localHomeCity != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHomeCity));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("homeCity cannot be null!!");
                                        }
                                    } if (localHomeEmirateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "homeEmirate"));
                                 
                                        if (localHomeEmirate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHomeEmirate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("homeEmirate cannot be null!!");
                                        }
                                    } if (localOfficePoBoxTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "officePoBox"));
                                 
                                        if (localOfficePoBox != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOfficePoBox));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("officePoBox cannot be null!!");
                                        }
                                    } if (localOfficePhoneNumberTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "officePhoneNumber"));
                                 
                                        if (localOfficePhoneNumber != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOfficePhoneNumber));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("officePhoneNumber cannot be null!!");
                                        }
                                    } if (localCustomerTitleTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "customerTitle"));
                                 
                                        if (localCustomerTitle != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustomerTitle));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("customerTitle cannot be null!!");
                                        }
                                    } if (localCustomerNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "customerName"));
                                 
                                        if (localCustomerName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustomerName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("customerName cannot be null!!");
                                        }
                                    } if (localMobileNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "mobileNo"));
                                 
                                        if (localMobileNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMobileNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("mobileNo cannot be null!!");
                                        }
                                    } if (localCustomerIdTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "customerId"));
                                 
                                        if (localCustomerId != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustomerId));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("customerId cannot be null!!");
                                        }
                                    } if (localEmailIdTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "emailId"));
                                 
                                        if (localEmailId != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmailId));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("emailId cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static ApplicationData_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            ApplicationData_type0 object =
                new ApplicationData_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"applicationData_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (ApplicationData_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","typeOfCustomer").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"typeOfCustomer" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTypeOfCustomer(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","grossIncome").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"grossIncome" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setGrossIncome(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","monthlyBalInAc").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"monthlyBalInAc" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMonthlyBalInAc(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","nationalityCode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"nationalityCode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNationalityCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","companyName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"companyName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCompanyName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","residenceAddr1").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"residenceAddr1" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setResidenceAddr1(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","residenceAddr2").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"residenceAddr2" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setResidenceAddr2(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","residenceAddr3").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"residenceAddr3" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setResidenceAddr3(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","residenceCity").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"residenceCity" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setResidenceCity(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","residenceState").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"residenceState" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setResidenceState(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","officeVillaNumber").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"officeVillaNumber" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOfficeVillaNumber(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","officeBuildingName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"officeBuildingName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOfficeBuildingName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","officeStreet").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"officeStreet" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOfficeStreet(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","officeCity").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"officeCity" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOfficeCity(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","officeEmirate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"officeEmirate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOfficeEmirate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","homeAddress1").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"homeAddress1" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHomeAddress1(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","homeAddress2").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"homeAddress2" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHomeAddress2(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","homeAddress3").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"homeAddress3" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHomeAddress3(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","homeCountry").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"homeCountry" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHomeCountry(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","homePoBox").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"homePoBox" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHomePoBox(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","poBox").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"poBox" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPoBox(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","emirate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"emirate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEmirate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","country").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"country" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCountry(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","homePhone").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"homePhone" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHomePhone(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","homeCity").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"homeCity" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHomeCity(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","homeEmirate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"homeEmirate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHomeEmirate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","officePoBox").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"officePoBox" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOfficePoBox(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","officePhoneNumber").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"officePhoneNumber" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOfficePhoneNumber(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","customerTitle").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"customerTitle" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustomerTitle(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","customerName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"customerName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustomerName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","mobileNo").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"mobileNo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMobileNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","customerId").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"customerId" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustomerId(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","emailId").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"emailId" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEmailId(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class AddOnlineCardAppDataReqMsg
        implements org.apache.axis2.databinding.ADBBean{
        
                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                "AddOnlineCardAppDataReqMsg",
                "ns2");

            

                        /**
                        * field for Header
                        */

                        
                                    protected HeaderType localHeader ;
                                

                           /**
                           * Auto generated getter method
                           * @return HeaderType
                           */
                           public  HeaderType getHeader(){
                               return localHeader;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Header
                               */
                               public void setHeader(HeaderType param){
                            
                                            this.localHeader=param;
                                    

                               }
                            

                        /**
                        * field for AddOnlineCardAppDataReq
                        */

                        
                                    protected AddOnlineCardAppDataReq_type0 localAddOnlineCardAppDataReq ;
                                

                           /**
                           * Auto generated getter method
                           * @return AddOnlineCardAppDataReq_type0
                           */
                           public  AddOnlineCardAppDataReq_type0 getAddOnlineCardAppDataReq(){
                               return localAddOnlineCardAppDataReq;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AddOnlineCardAppDataReq
                               */
                               public void setAddOnlineCardAppDataReq(AddOnlineCardAppDataReq_type0 param){
                            
                                            this.localAddOnlineCardAppDataReq=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
               return factory.createOMElement(dataSource,MY_QNAME);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":AddOnlineCardAppDataReqMsg",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "AddOnlineCardAppDataReqMsg",
                           xmlWriter);
                   }

               
                   }
               
                                            if (localHeader==null){
                                                 throw new org.apache.axis2.databinding.ADBException("header cannot be null!!");
                                            }
                                           localHeader.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","header"),
                                               xmlWriter);
                                        
                                            if (localAddOnlineCardAppDataReq==null){
                                                 throw new org.apache.axis2.databinding.ADBException("AddOnlineCardAppDataReq cannot be null!!");
                                            }
                                           localAddOnlineCardAppDataReq.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","AddOnlineCardAppDataReq"),
                                               xmlWriter);
                                        
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "header"));
                            
                            
                                    if (localHeader==null){
                                         throw new org.apache.axis2.databinding.ADBException("header cannot be null!!");
                                    }
                                    elementList.add(localHeader);
                                
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "AddOnlineCardAppDataReq"));
                            
                            
                                    if (localAddOnlineCardAppDataReq==null){
                                         throw new org.apache.axis2.databinding.ADBException("AddOnlineCardAppDataReq cannot be null!!");
                                    }
                                    elementList.add(localAddOnlineCardAppDataReq);
                                

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static AddOnlineCardAppDataReqMsg parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            AddOnlineCardAppDataReqMsg object =
                new AddOnlineCardAppDataReqMsg();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"AddOnlineCardAppDataReqMsg".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (AddOnlineCardAppDataReqMsg)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","header").equals(reader.getName())){
                                
                                                object.setHeader(HeaderType.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                                }
                            
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","AddOnlineCardAppDataReq").equals(reader.getName())){
                                
                                                object.setAddOnlineCardAppDataReq(AddOnlineCardAppDataReq_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                                }
                              
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class HeaderType
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = headerType
                Namespace URI = http://www.adcb.com/esb/common/header.xsd
                Namespace Prefix = ns1
                */
            

                        /**
                        * field for UsecaseID
                        */

                        
                                    protected java.lang.String localUsecaseID ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUsecaseIDTracker = false ;

                           public boolean isUsecaseIDSpecified(){
                               return localUsecaseIDTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUsecaseID(){
                               return localUsecaseID;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param UsecaseID
                               */
                               public void setUsecaseID(java.lang.String param){
                            localUsecaseIDTracker = param != null;
                                   
                                            this.localUsecaseID=param;
                                    

                               }
                            

                        /**
                        * field for ServiceName
                        */

                        
                                    protected java.lang.String localServiceName ;
                                

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getServiceName(){
                               return localServiceName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ServiceName
                               */
                               public void setServiceName(java.lang.String param){
                            
                                            this.localServiceName=param;
                                    

                               }
                            

                        /**
                        * field for VersionNo
                        */

                        
                                    protected java.lang.String localVersionNo ;
                                

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getVersionNo(){
                               return localVersionNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param VersionNo
                               */
                               public void setVersionNo(java.lang.String param){
                            
                                            this.localVersionNo=param;
                                    

                               }
                            

                        /**
                        * field for ServiceAction
                        */

                        
                                    protected java.lang.String localServiceAction ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localServiceActionTracker = false ;

                           public boolean isServiceActionSpecified(){
                               return localServiceActionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getServiceAction(){
                               return localServiceAction;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ServiceAction
                               */
                               public void setServiceAction(java.lang.String param){
                            localServiceActionTracker = param != null;
                                   
                                            this.localServiceAction=param;
                                    

                               }
                            

                        /**
                        * field for CorrelationID
                        */

                        
                                    protected java.lang.String localCorrelationID ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCorrelationIDTracker = false ;

                           public boolean isCorrelationIDSpecified(){
                               return localCorrelationIDTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCorrelationID(){
                               return localCorrelationID;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CorrelationID
                               */
                               public void setCorrelationID(java.lang.String param){
                            localCorrelationIDTracker = param != null;
                                   
                                            this.localCorrelationID=param;
                                    

                               }
                            

                        /**
                        * field for SysRefNumber
                        */

                        
                                    protected java.lang.String localSysRefNumber ;
                                

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSysRefNumber(){
                               return localSysRefNumber;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SysRefNumber
                               */
                               public void setSysRefNumber(java.lang.String param){
                            
                                            this.localSysRefNumber=param;
                                    

                               }
                            

                        /**
                        * field for SenderID
                        */

                        
                                    protected java.lang.String localSenderID ;
                                

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSenderID(){
                               return localSenderID;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SenderID
                               */
                               public void setSenderID(java.lang.String param){
                            
                                            this.localSenderID=param;
                                    

                               }
                            

                        /**
                        * field for Consumer
                        */

                        
                                    protected java.lang.String localConsumer ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localConsumerTracker = false ;

                           public boolean isConsumerSpecified(){
                               return localConsumerTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getConsumer(){
                               return localConsumer;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Consumer
                               */
                               public void setConsumer(java.lang.String param){
                            localConsumerTracker = param != null;
                                   
                                            this.localConsumer=param;
                                    

                               }
                            

                        /**
                        * field for ReqTimeStamp
                        */

                        
                                    protected java.lang.String localReqTimeStamp ;
                                

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getReqTimeStamp(){
                               return localReqTimeStamp;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ReqTimeStamp
                               */
                               public void setReqTimeStamp(java.lang.String param){
                            
                                            this.localReqTimeStamp=param;
                                    

                               }
                            

                        /**
                        * field for RepTimeStamp
                        */

                        
                                    protected java.lang.String localRepTimeStamp ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRepTimeStampTracker = false ;

                           public boolean isRepTimeStampSpecified(){
                               return localRepTimeStampTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRepTimeStamp(){
                               return localRepTimeStamp;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RepTimeStamp
                               */
                               public void setRepTimeStamp(java.lang.String param){
                            localRepTimeStampTracker = param != null;
                                   
                                            this.localRepTimeStamp=param;
                                    

                               }
                            

                        /**
                        * field for Username
                        */

                        
                                    protected java.lang.String localUsername ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUsernameTracker = false ;

                           public boolean isUsernameSpecified(){
                               return localUsernameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUsername(){
                               return localUsername;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Username
                               */
                               public void setUsername(java.lang.String param){
                            localUsernameTracker = param != null;
                                   
                                            this.localUsername=param;
                                    

                               }
                            

                        /**
                        * field for Credentials
                        */

                        
                                    protected java.lang.String localCredentials ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCredentialsTracker = false ;

                           public boolean isCredentialsSpecified(){
                               return localCredentialsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCredentials(){
                               return localCredentials;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Credentials
                               */
                               public void setCredentials(java.lang.String param){
                            localCredentialsTracker = param != null;
                                   
                                            this.localCredentials=param;
                                    

                               }
                            

                        /**
                        * field for ReturnCode
                        */

                        
                                    protected java.lang.String localReturnCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localReturnCodeTracker = false ;

                           public boolean isReturnCodeSpecified(){
                               return localReturnCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getReturnCode(){
                               return localReturnCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ReturnCode
                               */
                               public void setReturnCode(java.lang.String param){
                            localReturnCodeTracker = param != null;
                                   
                                            this.localReturnCode=param;
                                    

                               }
                            

                        /**
                        * field for ErrorDescription
                        */

                        
                                    protected java.lang.String localErrorDescription ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localErrorDescriptionTracker = false ;

                           public boolean isErrorDescriptionSpecified(){
                               return localErrorDescriptionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getErrorDescription(){
                               return localErrorDescription;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ErrorDescription
                               */
                               public void setErrorDescription(java.lang.String param){
                            localErrorDescriptionTracker = param != null;
                                   
                                            this.localErrorDescription=param;
                                    

                               }
                            

                        /**
                        * field for ErrorDetail
                        */

                        
                                    protected java.lang.String localErrorDetail ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localErrorDetailTracker = false ;

                           public boolean isErrorDetailSpecified(){
                               return localErrorDetailTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getErrorDetail(){
                               return localErrorDetail;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ErrorDetail
                               */
                               public void setErrorDetail(java.lang.String param){
                            localErrorDetailTracker = param != null;
                                   
                                            this.localErrorDetail=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/common/header.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":headerType",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "headerType",
                           xmlWriter);
                   }

               
                   }
                if (localUsecaseIDTracker){
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "usecaseID", xmlWriter);
                             

                                          if (localUsecaseID==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("usecaseID cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUsecaseID);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "serviceName", xmlWriter);
                             

                                          if (localServiceName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("serviceName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localServiceName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "versionNo", xmlWriter);
                             

                                          if (localVersionNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("versionNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localVersionNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                              if (localServiceActionTracker){
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "serviceAction", xmlWriter);
                             

                                          if (localServiceAction==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("serviceAction cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localServiceAction);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCorrelationIDTracker){
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "correlationID", xmlWriter);
                             

                                          if (localCorrelationID==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("correlationID cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCorrelationID);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "sysRefNumber", xmlWriter);
                             

                                          if (localSysRefNumber==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sysRefNumber cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSysRefNumber);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "senderID", xmlWriter);
                             

                                          if (localSenderID==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("senderID cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSenderID);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                              if (localConsumerTracker){
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "consumer", xmlWriter);
                             

                                          if (localConsumer==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("consumer cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localConsumer);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "reqTimeStamp", xmlWriter);
                             

                                          if (localReqTimeStamp==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("reqTimeStamp cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localReqTimeStamp);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                              if (localRepTimeStampTracker){
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "repTimeStamp", xmlWriter);
                             

                                          if (localRepTimeStamp==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("repTimeStamp cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRepTimeStamp);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUsernameTracker){
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "username", xmlWriter);
                             

                                          if (localUsername==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("username cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUsername);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCredentialsTracker){
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "credentials", xmlWriter);
                             

                                          if (localCredentials==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("credentials cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCredentials);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localReturnCodeTracker){
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "returnCode", xmlWriter);
                             

                                          if (localReturnCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("returnCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localReturnCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localErrorDescriptionTracker){
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "errorDescription", xmlWriter);
                             

                                          if (localErrorDescription==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("errorDescription cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localErrorDescription);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localErrorDetailTracker){
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "errorDetail", xmlWriter);
                             

                                          if (localErrorDetail==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("errorDetail cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localErrorDetail);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/common/header.xsd")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localUsecaseIDTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "usecaseID"));
                                 
                                        if (localUsecaseID != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUsecaseID));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("usecaseID cannot be null!!");
                                        }
                                    }
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "serviceName"));
                                 
                                        if (localServiceName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localServiceName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("serviceName cannot be null!!");
                                        }
                                    
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "versionNo"));
                                 
                                        if (localVersionNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localVersionNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("versionNo cannot be null!!");
                                        }
                                     if (localServiceActionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "serviceAction"));
                                 
                                        if (localServiceAction != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localServiceAction));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("serviceAction cannot be null!!");
                                        }
                                    } if (localCorrelationIDTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "correlationID"));
                                 
                                        if (localCorrelationID != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCorrelationID));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("correlationID cannot be null!!");
                                        }
                                    }
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "sysRefNumber"));
                                 
                                        if (localSysRefNumber != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSysRefNumber));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sysRefNumber cannot be null!!");
                                        }
                                    
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "senderID"));
                                 
                                        if (localSenderID != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSenderID));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("senderID cannot be null!!");
                                        }
                                     if (localConsumerTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "consumer"));
                                 
                                        if (localConsumer != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localConsumer));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("consumer cannot be null!!");
                                        }
                                    }
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "reqTimeStamp"));
                                 
                                        if (localReqTimeStamp != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReqTimeStamp));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("reqTimeStamp cannot be null!!");
                                        }
                                     if (localRepTimeStampTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "repTimeStamp"));
                                 
                                        if (localRepTimeStamp != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRepTimeStamp));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("repTimeStamp cannot be null!!");
                                        }
                                    } if (localUsernameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "username"));
                                 
                                        if (localUsername != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUsername));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("username cannot be null!!");
                                        }
                                    } if (localCredentialsTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "credentials"));
                                 
                                        if (localCredentials != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCredentials));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("credentials cannot be null!!");
                                        }
                                    } if (localReturnCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "returnCode"));
                                 
                                        if (localReturnCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReturnCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("returnCode cannot be null!!");
                                        }
                                    } if (localErrorDescriptionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "errorDescription"));
                                 
                                        if (localErrorDescription != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localErrorDescription));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("errorDescription cannot be null!!");
                                        }
                                    } if (localErrorDetailTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "errorDetail"));
                                 
                                        if (localErrorDetail != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localErrorDetail));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("errorDetail cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static HeaderType parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            HeaderType object =
                new HeaderType();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"headerType".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (HeaderType)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","usecaseID").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"usecaseID" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUsecaseID(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","serviceName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"serviceName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setServiceName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                                }
                            
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","versionNo").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"versionNo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setVersionNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                                }
                            
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","serviceAction").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"serviceAction" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setServiceAction(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","correlationID").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"correlationID" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCorrelationID(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","sysRefNumber").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"sysRefNumber" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSysRefNumber(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                                }
                            
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","senderID").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"senderID" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSenderID(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                                }
                            
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","consumer").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"consumer" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setConsumer(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","reqTimeStamp").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"reqTimeStamp" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReqTimeStamp(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                                }
                            
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","repTimeStamp").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"repTimeStamp" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRepTimeStamp(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","username").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"username" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUsername(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","credentials").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"credentials" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCredentials(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","returnCode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"returnCode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReturnCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","errorDescription").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"errorDescription" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setErrorDescription(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","errorDetail").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"errorDetail" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setErrorDetail(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class ResidentialAddress_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = residentialAddress_type0
                Namespace URI = http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for BuildingName
                        */

                        
                                    protected java.lang.String localBuildingName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBuildingNameTracker = false ;

                           public boolean isBuildingNameSpecified(){
                               return localBuildingNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBuildingName(){
                               return localBuildingName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BuildingName
                               */
                               public void setBuildingName(java.lang.String param){
                            localBuildingNameTracker = param != null;
                                   
                                            this.localBuildingName=param;
                                    

                               }
                            

                        /**
                        * field for City
                        */

                        
                                    protected java.lang.String localCity ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCityTracker = false ;

                           public boolean isCitySpecified(){
                               return localCityTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCity(){
                               return localCity;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param City
                               */
                               public void setCity(java.lang.String param){
                            localCityTracker = param != null;
                                   
                                            this.localCity=param;
                                    

                               }
                            

                        /**
                        * field for CityOthers
                        */

                        
                                    protected java.lang.String localCityOthers ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCityOthersTracker = false ;

                           public boolean isCityOthersSpecified(){
                               return localCityOthersTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCityOthers(){
                               return localCityOthers;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CityOthers
                               */
                               public void setCityOthers(java.lang.String param){
                            localCityOthersTracker = param != null;
                                   
                                            this.localCityOthers=param;
                                    

                               }
                            

                        /**
                        * field for Country
                        */

                        
                                    protected java.lang.String localCountry ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCountryTracker = false ;

                           public boolean isCountrySpecified(){
                               return localCountryTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCountry(){
                               return localCountry;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Country
                               */
                               public void setCountry(java.lang.String param){
                            localCountryTracker = param != null;
                                   
                                            this.localCountry=param;
                                    

                               }
                            

                        /**
                        * field for FlatNo
                        */

                        
                                    protected java.lang.String localFlatNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFlatNoTracker = false ;

                           public boolean isFlatNoSpecified(){
                               return localFlatNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFlatNo(){
                               return localFlatNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FlatNo
                               */
                               public void setFlatNo(java.lang.String param){
                            localFlatNoTracker = param != null;
                                   
                                            this.localFlatNo=param;
                                    

                               }
                            

                        /**
                        * field for SameAS
                        */

                        
                                    protected java.lang.String localSameAS ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSameASTracker = false ;

                           public boolean isSameASSpecified(){
                               return localSameASTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSameAS(){
                               return localSameAS;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SameAS
                               */
                               public void setSameAS(java.lang.String param){
                            localSameASTracker = param != null;
                                   
                                            this.localSameAS=param;
                                    

                               }
                            

                        /**
                        * field for State
                        */

                        
                                    protected java.lang.String localState ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localStateTracker = false ;

                           public boolean isStateSpecified(){
                               return localStateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getState(){
                               return localState;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param State
                               */
                               public void setState(java.lang.String param){
                            localStateTracker = param != null;
                                   
                                            this.localState=param;
                                    

                               }
                            

                        /**
                        * field for StateOther
                        */

                        
                                    protected java.lang.String localStateOther ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localStateOtherTracker = false ;

                           public boolean isStateOtherSpecified(){
                               return localStateOtherTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getStateOther(){
                               return localStateOther;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param StateOther
                               */
                               public void setStateOther(java.lang.String param){
                            localStateOtherTracker = param != null;
                                   
                                            this.localStateOther=param;
                                    

                               }
                            

                        /**
                        * field for Street
                        */

                        
                                    protected java.lang.String localStreet ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localStreetTracker = false ;

                           public boolean isStreetSpecified(){
                               return localStreetTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getStreet(){
                               return localStreet;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Street
                               */
                               public void setStreet(java.lang.String param){
                            localStreetTracker = param != null;
                                   
                                            this.localStreet=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":residentialAddress_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "residentialAddress_type0",
                           xmlWriter);
                   }

               
                   }
                if (localBuildingNameTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "buildingName", xmlWriter);
                             

                                          if (localBuildingName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("buildingName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBuildingName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCityTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "city", xmlWriter);
                             

                                          if (localCity==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("city cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCity);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCityOthersTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "cityOthers", xmlWriter);
                             

                                          if (localCityOthers==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("cityOthers cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCityOthers);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCountryTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "country", xmlWriter);
                             

                                          if (localCountry==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("country cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCountry);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFlatNoTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "flatNo", xmlWriter);
                             

                                          if (localFlatNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("flatNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFlatNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSameASTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "sameAS", xmlWriter);
                             

                                          if (localSameAS==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sameAS cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSameAS);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localStateTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "state", xmlWriter);
                             

                                          if (localState==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("state cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localState);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localStateOtherTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "stateOther", xmlWriter);
                             

                                          if (localStateOther==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("stateOther cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localStateOther);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localStreetTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "street", xmlWriter);
                             

                                          if (localStreet==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("street cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localStreet);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localBuildingNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "buildingName"));
                                 
                                        if (localBuildingName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBuildingName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("buildingName cannot be null!!");
                                        }
                                    } if (localCityTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "city"));
                                 
                                        if (localCity != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCity));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("city cannot be null!!");
                                        }
                                    } if (localCityOthersTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "cityOthers"));
                                 
                                        if (localCityOthers != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCityOthers));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("cityOthers cannot be null!!");
                                        }
                                    } if (localCountryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "country"));
                                 
                                        if (localCountry != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCountry));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("country cannot be null!!");
                                        }
                                    } if (localFlatNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "flatNo"));
                                 
                                        if (localFlatNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFlatNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("flatNo cannot be null!!");
                                        }
                                    } if (localSameASTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "sameAS"));
                                 
                                        if (localSameAS != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSameAS));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sameAS cannot be null!!");
                                        }
                                    } if (localStateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "state"));
                                 
                                        if (localState != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localState));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("state cannot be null!!");
                                        }
                                    } if (localStateOtherTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "stateOther"));
                                 
                                        if (localStateOther != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localStateOther));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("stateOther cannot be null!!");
                                        }
                                    } if (localStreetTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "street"));
                                 
                                        if (localStreet != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localStreet));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("street cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static ResidentialAddress_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            ResidentialAddress_type0 object =
                new ResidentialAddress_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"residentialAddress_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (ResidentialAddress_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","buildingName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"buildingName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBuildingName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","city").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"city" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCity(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","cityOthers").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"cityOthers" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCityOthers(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","country").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"country" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCountry(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","flatNo").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"flatNo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFlatNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","sameAS").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"sameAS" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSameAS(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","state").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"state" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setState(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","stateOther").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"stateOther" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setStateOther(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","street").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"street" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setStreet(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class ExpectedRelationShipType_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = expectedRelationShipType_type0
                Namespace URI = http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for CashDeposit
                        */

                        
                                    protected java.lang.String localCashDeposit ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCashDepositTracker = false ;

                           public boolean isCashDepositSpecified(){
                               return localCashDepositTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCashDeposit(){
                               return localCashDeposit;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CashDeposit
                               */
                               public void setCashDeposit(java.lang.String param){
                            localCashDepositTracker = param != null;
                                   
                                            this.localCashDeposit=param;
                                    

                               }
                            

                        /**
                        * field for CashWithdrawl
                        */

                        
                                    protected java.lang.String localCashWithdrawl ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCashWithdrawlTracker = false ;

                           public boolean isCashWithdrawlSpecified(){
                               return localCashWithdrawlTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCashWithdrawl(){
                               return localCashWithdrawl;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CashWithdrawl
                               */
                               public void setCashWithdrawl(java.lang.String param){
                            localCashWithdrawlTracker = param != null;
                                   
                                            this.localCashWithdrawl=param;
                                    

                               }
                            

                        /**
                        * field for ChequeDeposit
                        */

                        
                                    protected java.lang.String localChequeDeposit ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localChequeDepositTracker = false ;

                           public boolean isChequeDepositSpecified(){
                               return localChequeDepositTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getChequeDeposit(){
                               return localChequeDeposit;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ChequeDeposit
                               */
                               public void setChequeDeposit(java.lang.String param){
                            localChequeDepositTracker = param != null;
                                   
                                            this.localChequeDeposit=param;
                                    

                               }
                            

                        /**
                        * field for ChequeWithdrawl
                        */

                        
                                    protected java.lang.String localChequeWithdrawl ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localChequeWithdrawlTracker = false ;

                           public boolean isChequeWithdrawlSpecified(){
                               return localChequeWithdrawlTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getChequeWithdrawl(){
                               return localChequeWithdrawl;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ChequeWithdrawl
                               */
                               public void setChequeWithdrawl(java.lang.String param){
                            localChequeWithdrawlTracker = param != null;
                                   
                                            this.localChequeWithdrawl=param;
                                    

                               }
                            

                        /**
                        * field for GeographicCountries
                        */

                        
                                    protected java.lang.String localGeographicCountries ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localGeographicCountriesTracker = false ;

                           public boolean isGeographicCountriesSpecified(){
                               return localGeographicCountriesTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getGeographicCountries(){
                               return localGeographicCountries;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param GeographicCountries
                               */
                               public void setGeographicCountries(java.lang.String param){
                            localGeographicCountriesTracker = param != null;
                                   
                                            this.localGeographicCountries=param;
                                    

                               }
                            

                        /**
                        * field for NatureOfActivity
                        */

                        
                                    protected java.lang.String localNatureOfActivity ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNatureOfActivityTracker = false ;

                           public boolean isNatureOfActivitySpecified(){
                               return localNatureOfActivityTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNatureOfActivity(){
                               return localNatureOfActivity;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NatureOfActivity
                               */
                               public void setNatureOfActivity(java.lang.String param){
                            localNatureOfActivityTracker = param != null;
                                   
                                            this.localNatureOfActivity=param;
                                    

                               }
                            

                        /**
                        * field for TransferDeposit
                        */

                        
                                    protected java.lang.String localTransferDeposit ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTransferDepositTracker = false ;

                           public boolean isTransferDepositSpecified(){
                               return localTransferDepositTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTransferDeposit(){
                               return localTransferDeposit;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TransferDeposit
                               */
                               public void setTransferDeposit(java.lang.String param){
                            localTransferDepositTracker = param != null;
                                   
                                            this.localTransferDeposit=param;
                                    

                               }
                            

                        /**
                        * field for TransferWithdrawl
                        */

                        
                                    protected java.lang.String localTransferWithdrawl ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTransferWithdrawlTracker = false ;

                           public boolean isTransferWithdrawlSpecified(){
                               return localTransferWithdrawlTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTransferWithdrawl(){
                               return localTransferWithdrawl;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TransferWithdrawl
                               */
                               public void setTransferWithdrawl(java.lang.String param){
                            localTransferWithdrawlTracker = param != null;
                                   
                                            this.localTransferWithdrawl=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":expectedRelationShipType_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "expectedRelationShipType_type0",
                           xmlWriter);
                   }

               
                   }
                if (localCashDepositTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "cashDeposit", xmlWriter);
                             

                                          if (localCashDeposit==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("cashDeposit cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCashDeposit);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCashWithdrawlTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "cashWithdrawl", xmlWriter);
                             

                                          if (localCashWithdrawl==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("cashWithdrawl cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCashWithdrawl);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localChequeDepositTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "chequeDeposit", xmlWriter);
                             

                                          if (localChequeDeposit==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("chequeDeposit cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localChequeDeposit);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localChequeWithdrawlTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "chequeWithdrawl", xmlWriter);
                             

                                          if (localChequeWithdrawl==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("chequeWithdrawl cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localChequeWithdrawl);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localGeographicCountriesTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "geographicCountries", xmlWriter);
                             

                                          if (localGeographicCountries==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("geographicCountries cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localGeographicCountries);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNatureOfActivityTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "natureOfActivity", xmlWriter);
                             

                                          if (localNatureOfActivity==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("natureOfActivity cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNatureOfActivity);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTransferDepositTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "transferDeposit", xmlWriter);
                             

                                          if (localTransferDeposit==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("transferDeposit cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTransferDeposit);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTransferWithdrawlTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "transferWithdrawl", xmlWriter);
                             

                                          if (localTransferWithdrawl==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("transferWithdrawl cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTransferWithdrawl);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localCashDepositTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "cashDeposit"));
                                 
                                        if (localCashDeposit != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCashDeposit));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("cashDeposit cannot be null!!");
                                        }
                                    } if (localCashWithdrawlTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "cashWithdrawl"));
                                 
                                        if (localCashWithdrawl != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCashWithdrawl));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("cashWithdrawl cannot be null!!");
                                        }
                                    } if (localChequeDepositTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "chequeDeposit"));
                                 
                                        if (localChequeDeposit != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localChequeDeposit));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("chequeDeposit cannot be null!!");
                                        }
                                    } if (localChequeWithdrawlTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "chequeWithdrawl"));
                                 
                                        if (localChequeWithdrawl != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localChequeWithdrawl));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("chequeWithdrawl cannot be null!!");
                                        }
                                    } if (localGeographicCountriesTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "geographicCountries"));
                                 
                                        if (localGeographicCountries != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localGeographicCountries));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("geographicCountries cannot be null!!");
                                        }
                                    } if (localNatureOfActivityTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "natureOfActivity"));
                                 
                                        if (localNatureOfActivity != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNatureOfActivity));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("natureOfActivity cannot be null!!");
                                        }
                                    } if (localTransferDepositTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "transferDeposit"));
                                 
                                        if (localTransferDeposit != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTransferDeposit));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("transferDeposit cannot be null!!");
                                        }
                                    } if (localTransferWithdrawlTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "transferWithdrawl"));
                                 
                                        if (localTransferWithdrawl != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTransferWithdrawl));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("transferWithdrawl cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static ExpectedRelationShipType_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            ExpectedRelationShipType_type0 object =
                new ExpectedRelationShipType_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"expectedRelationShipType_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (ExpectedRelationShipType_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","cashDeposit").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"cashDeposit" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCashDeposit(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","cashWithdrawl").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"cashWithdrawl" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCashWithdrawl(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","chequeDeposit").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"chequeDeposit" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setChequeDeposit(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","chequeWithdrawl").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"chequeWithdrawl" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setChequeWithdrawl(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","geographicCountries").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"geographicCountries" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setGeographicCountries(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","natureOfActivity").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"natureOfActivity" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNatureOfActivity(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","transferDeposit").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"transferDeposit" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTransferDeposit(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","transferWithdrawl").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"transferWithdrawl" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTransferWithdrawl(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class Header
        implements org.apache.axis2.databinding.ADBBean{
        
                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://www.adcb.com/esb/common/header.xsd",
                "header",
                "ns1");

            

                        /**
                        * field for Header
                        */

                        
                                    protected HeaderType localHeader ;
                                

                           /**
                           * Auto generated getter method
                           * @return HeaderType
                           */
                           public  HeaderType getHeader(){
                               return localHeader;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Header
                               */
                               public void setHeader(HeaderType param){
                            
                                            this.localHeader=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
               return factory.createOMElement(dataSource,MY_QNAME);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                
                //We can safely assume an element has only one type associated with it
                
                                 if (localHeader==null){
                                   throw new org.apache.axis2.databinding.ADBException("header cannot be null!");
                                 }
                                 localHeader.serialize(MY_QNAME,xmlWriter);
                            

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/common/header.xsd")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                
                //We can safely assume an element has only one type associated with it
                return localHeader.getPullParser(MY_QNAME);

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static Header parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            Header object =
                new Header();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                   
                while(!reader.isEndElement()) {
                    if (reader.isStartElement() ){
                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","header").equals(reader.getName())){
                                
                                                object.setHeader(HeaderType.Factory.parse(reader));
                                            
                              }  // End of if for expected property start element
                                
                             else{
                                        // A start element we are not expecting indicates an invalid parameter was passed
                                        throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                             }
                          
                             } else {
                                reader.next();
                             }  
                           }  // end of while loop
                        



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class AddOnlineCardAppDataReq_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = AddOnlineCardAppDataReq_type0
                Namespace URI = http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for LAPSAppDetails
                        */

                        
                                    protected LAPSAppDetails_type1 localLAPSAppDetails ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLAPSAppDetailsTracker = false ;

                           public boolean isLAPSAppDetailsSpecified(){
                               return localLAPSAppDetailsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return LAPSAppDetails_type1
                           */
                           public  LAPSAppDetails_type1 getLAPSAppDetails(){
                               return localLAPSAppDetails;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LAPSAppDetails
                               */
                               public void setLAPSAppDetails(LAPSAppDetails_type1 param){
                            localLAPSAppDetailsTracker = param != null;
                                   
                                            this.localLAPSAppDetails=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":AddOnlineCardAppDataReq_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "AddOnlineCardAppDataReq_type0",
                           xmlWriter);
                   }

               
                   }
                if (localLAPSAppDetailsTracker){
                                            if (localLAPSAppDetails==null){
                                                 throw new org.apache.axis2.databinding.ADBException("LAPSAppDetails cannot be null!!");
                                            }
                                           localLAPSAppDetails.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","LAPSAppDetails"),
                                               xmlWriter);
                                        }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localLAPSAppDetailsTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "LAPSAppDetails"));
                            
                            
                                    if (localLAPSAppDetails==null){
                                         throw new org.apache.axis2.databinding.ADBException("LAPSAppDetails cannot be null!!");
                                    }
                                    elementList.add(localLAPSAppDetails);
                                }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static AddOnlineCardAppDataReq_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            AddOnlineCardAppDataReq_type0 object =
                new AddOnlineCardAppDataReq_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"AddOnlineCardAppDataReq_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (AddOnlineCardAppDataReq_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","LAPSAppDetails").equals(reader.getName())){
                                
                                                object.setLAPSAppDetails(LAPSAppDetails_type1.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class ProductApps_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = productApps_type0
                Namespace URI = http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for AppId
                        */

                        
                                    protected java.lang.String localAppId ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAppIdTracker = false ;

                           public boolean isAppIdSpecified(){
                               return localAppIdTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAppId(){
                               return localAppId;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AppId
                               */
                               public void setAppId(java.lang.String param){
                            localAppIdTracker = param != null;
                                   
                                            this.localAppId=param;
                                    

                               }
                            

                        /**
                        * field for Status
                        */

                        
                                    protected java.lang.String localStatus ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localStatusTracker = false ;

                           public boolean isStatusSpecified(){
                               return localStatusTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getStatus(){
                               return localStatus;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Status
                               */
                               public void setStatus(java.lang.String param){
                            localStatusTracker = param != null;
                                   
                                            this.localStatus=param;
                                    

                               }
                            

                        /**
                        * field for ApplicationRefNumber
                        */

                        
                                    protected java.lang.String localApplicationRefNumber ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localApplicationRefNumberTracker = false ;

                           public boolean isApplicationRefNumberSpecified(){
                               return localApplicationRefNumberTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getApplicationRefNumber(){
                               return localApplicationRefNumber;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ApplicationRefNumber
                               */
                               public void setApplicationRefNumber(java.lang.String param){
                            localApplicationRefNumberTracker = param != null;
                                   
                                            this.localApplicationRefNumber=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":productApps_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "productApps_type0",
                           xmlWriter);
                   }

               
                   }
                if (localAppIdTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "appId", xmlWriter);
                             

                                          if (localAppId==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("appId cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAppId);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localStatusTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "status", xmlWriter);
                             

                                          if (localStatus==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("status cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localStatus);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localApplicationRefNumberTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "applicationRefNumber", xmlWriter);
                             

                                          if (localApplicationRefNumber==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("applicationRefNumber cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localApplicationRefNumber);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localAppIdTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "appId"));
                                 
                                        if (localAppId != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAppId));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("appId cannot be null!!");
                                        }
                                    } if (localStatusTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "status"));
                                 
                                        if (localStatus != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localStatus));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("status cannot be null!!");
                                        }
                                    } if (localApplicationRefNumberTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "applicationRefNumber"));
                                 
                                        if (localApplicationRefNumber != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localApplicationRefNumber));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("applicationRefNumber cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static ProductApps_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            ProductApps_type0 object =
                new ProductApps_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"productApps_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (ProductApps_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","appId").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"appId" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAppId(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","status").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"status" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setStatus(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","applicationRefNumber").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"applicationRefNumber" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setApplicationRefNumber(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class IKYC_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = iKYC_type0
                Namespace URI = http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for AnnualIncome
                        */

                        
                                    protected java.lang.String localAnnualIncome ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAnnualIncomeTracker = false ;

                           public boolean isAnnualIncomeSpecified(){
                               return localAnnualIncomeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAnnualIncome(){
                               return localAnnualIncome;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AnnualIncome
                               */
                               public void setAnnualIncome(java.lang.String param){
                            localAnnualIncomeTracker = param != null;
                                   
                                            this.localAnnualIncome=param;
                                    

                               }
                            

                        /**
                        * field for CompanyWebsite
                        */

                        
                                    protected java.lang.String localCompanyWebsite ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCompanyWebsiteTracker = false ;

                           public boolean isCompanyWebsiteSpecified(){
                               return localCompanyWebsiteTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCompanyWebsite(){
                               return localCompanyWebsite;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CompanyWebsite
                               */
                               public void setCompanyWebsite(java.lang.String param){
                            localCompanyWebsiteTracker = param != null;
                                   
                                            this.localCompanyWebsite=param;
                                    

                               }
                            

                        /**
                        * field for CrossBorderPaymntReq
                        */

                        
                                    protected java.lang.String localCrossBorderPaymntReq ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCrossBorderPaymntReqTracker = false ;

                           public boolean isCrossBorderPaymntReqSpecified(){
                               return localCrossBorderPaymntReqTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCrossBorderPaymntReq(){
                               return localCrossBorderPaymntReq;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CrossBorderPaymntReq
                               */
                               public void setCrossBorderPaymntReq(java.lang.String param){
                            localCrossBorderPaymntReqTracker = param != null;
                                   
                                            this.localCrossBorderPaymntReq=param;
                                    

                               }
                            

                        /**
                        * field for CrossMonthlyValue
                        */

                        
                                    protected java.lang.String localCrossMonthlyValue ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCrossMonthlyValueTracker = false ;

                           public boolean isCrossMonthlyValueSpecified(){
                               return localCrossMonthlyValueTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCrossMonthlyValue(){
                               return localCrossMonthlyValue;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CrossMonthlyValue
                               */
                               public void setCrossMonthlyValue(java.lang.String param){
                            localCrossMonthlyValueTracker = param != null;
                                   
                                            this.localCrossMonthlyValue=param;
                                    

                               }
                            

                        /**
                        * field for CrossPurpose
                        */

                        
                                    protected java.lang.String localCrossPurpose ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCrossPurposeTracker = false ;

                           public boolean isCrossPurposeSpecified(){
                               return localCrossPurposeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCrossPurpose(){
                               return localCrossPurpose;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CrossPurpose
                               */
                               public void setCrossPurpose(java.lang.String param){
                            localCrossPurposeTracker = param != null;
                                   
                                            this.localCrossPurpose=param;
                                    

                               }
                            

                        /**
                        * field for Designation
                        */

                        
                                    protected java.lang.String localDesignation ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDesignationTracker = false ;

                           public boolean isDesignationSpecified(){
                               return localDesignationTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDesignation(){
                               return localDesignation;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Designation
                               */
                               public void setDesignation(java.lang.String param){
                            localDesignationTracker = param != null;
                                   
                                            this.localDesignation=param;
                                    

                               }
                            

                        /**
                        * field for EmployeeID
                        */

                        
                                    protected java.lang.String localEmployeeID ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmployeeIDTracker = false ;

                           public boolean isEmployeeIDSpecified(){
                               return localEmployeeIDTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEmployeeID(){
                               return localEmployeeID;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EmployeeID
                               */
                               public void setEmployeeID(java.lang.String param){
                            localEmployeeIDTracker = param != null;
                                   
                                            this.localEmployeeID=param;
                                    

                               }
                            

                        /**
                        * field for EmployerType
                        */

                        
                                    protected java.lang.String localEmployerType ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmployerTypeTracker = false ;

                           public boolean isEmployerTypeSpecified(){
                               return localEmployerTypeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEmployerType(){
                               return localEmployerType;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EmployerType
                               */
                               public void setEmployerType(java.lang.String param){
                            localEmployerTypeTracker = param != null;
                                   
                                            this.localEmployerType=param;
                                    

                               }
                            

                        /**
                        * field for EmploymntPhone
                        */

                        
                                    protected java.lang.String localEmploymntPhone ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmploymntPhoneTracker = false ;

                           public boolean isEmploymntPhoneSpecified(){
                               return localEmploymntPhoneTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEmploymntPhone(){
                               return localEmploymntPhone;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EmploymntPhone
                               */
                               public void setEmploymntPhone(java.lang.String param){
                            localEmploymntPhoneTracker = param != null;
                                   
                                            this.localEmploymntPhone=param;
                                    

                               }
                            

                        /**
                        * field for InheritanceAed
                        */

                        
                                    protected java.lang.String localInheritanceAed ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localInheritanceAedTracker = false ;

                           public boolean isInheritanceAedSpecified(){
                               return localInheritanceAedTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getInheritanceAed(){
                               return localInheritanceAed;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param InheritanceAed
                               */
                               public void setInheritanceAed(java.lang.String param){
                            localInheritanceAedTracker = param != null;
                                   
                                            this.localInheritanceAed=param;
                                    

                               }
                            

                        /**
                        * field for InvestmentReturn
                        */

                        
                                    protected java.lang.String localInvestmentReturn ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localInvestmentReturnTracker = false ;

                           public boolean isInvestmentReturnSpecified(){
                               return localInvestmentReturnTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getInvestmentReturn(){
                               return localInvestmentReturn;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param InvestmentReturn
                               */
                               public void setInvestmentReturn(java.lang.String param){
                            localInvestmentReturnTracker = param != null;
                                   
                                            this.localInvestmentReturn=param;
                                    

                               }
                            

                        /**
                        * field for LengthOfService
                        */

                        
                                    protected java.lang.String localLengthOfService ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLengthOfServiceTracker = false ;

                           public boolean isLengthOfServiceSpecified(){
                               return localLengthOfServiceTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLengthOfService(){
                               return localLengthOfService;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LengthOfService
                               */
                               public void setLengthOfService(java.lang.String param){
                            localLengthOfServiceTracker = param != null;
                                   
                                            this.localLengthOfService=param;
                                    

                               }
                            

                        /**
                        * field for MonthlyIncome
                        */

                        
                                    protected java.lang.String localMonthlyIncome ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMonthlyIncomeTracker = false ;

                           public boolean isMonthlyIncomeSpecified(){
                               return localMonthlyIncomeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMonthlyIncome(){
                               return localMonthlyIncome;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MonthlyIncome
                               */
                               public void setMonthlyIncome(java.lang.String param){
                            localMonthlyIncomeTracker = param != null;
                                   
                                            this.localMonthlyIncome=param;
                                    

                               }
                            

                        /**
                        * field for NameOfEmployer
                        */

                        
                                    protected java.lang.String localNameOfEmployer ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNameOfEmployerTracker = false ;

                           public boolean isNameOfEmployerSpecified(){
                               return localNameOfEmployerTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNameOfEmployer(){
                               return localNameOfEmployer;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NameOfEmployer
                               */
                               public void setNameOfEmployer(java.lang.String param){
                            localNameOfEmployerTracker = param != null;
                                   
                                            this.localNameOfEmployer=param;
                                    

                               }
                            

                        /**
                        * field for NatureOfBusiness
                        */

                        
                                    protected java.lang.String localNatureOfBusiness ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNatureOfBusinessTracker = false ;

                           public boolean isNatureOfBusinessSpecified(){
                               return localNatureOfBusinessTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNatureOfBusiness(){
                               return localNatureOfBusiness;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NatureOfBusiness
                               */
                               public void setNatureOfBusiness(java.lang.String param){
                            localNatureOfBusinessTracker = param != null;
                                   
                                            this.localNatureOfBusiness=param;
                                    

                               }
                            

                        /**
                        * field for NoCrossPerMonth
                        */

                        
                                    protected java.lang.String localNoCrossPerMonth ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNoCrossPerMonthTracker = false ;

                           public boolean isNoCrossPerMonthSpecified(){
                               return localNoCrossPerMonthTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNoCrossPerMonth(){
                               return localNoCrossPerMonth;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NoCrossPerMonth
                               */
                               public void setNoCrossPerMonth(java.lang.String param){
                            localNoCrossPerMonthTracker = param != null;
                                   
                                            this.localNoCrossPerMonth=param;
                                    

                               }
                            

                        /**
                        * field for NoOfUaeBranches
                        */

                        
                                    protected java.lang.String localNoOfUaeBranches ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNoOfUaeBranchesTracker = false ;

                           public boolean isNoOfUaeBranchesSpecified(){
                               return localNoOfUaeBranchesTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNoOfUaeBranches(){
                               return localNoOfUaeBranches;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NoOfUaeBranches
                               */
                               public void setNoOfUaeBranches(java.lang.String param){
                            localNoOfUaeBranchesTracker = param != null;
                                   
                                            this.localNoOfUaeBranches=param;
                                    

                               }
                            

                        /**
                        * field for Others
                        */

                        
                                    protected java.lang.String localOthers ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOthersTracker = false ;

                           public boolean isOthersSpecified(){
                               return localOthersTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOthers(){
                               return localOthers;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Others
                               */
                               public void setOthers(java.lang.String param){
                            localOthersTracker = param != null;
                                   
                                            this.localOthers=param;
                                    

                               }
                            

                        /**
                        * field for OwnershipPerc
                        */

                        
                                    protected java.lang.String localOwnershipPerc ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOwnershipPercTracker = false ;

                           public boolean isOwnershipPercSpecified(){
                               return localOwnershipPercTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOwnershipPerc(){
                               return localOwnershipPerc;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OwnershipPerc
                               */
                               public void setOwnershipPerc(java.lang.String param){
                            localOwnershipPercTracker = param != null;
                                   
                                            this.localOwnershipPerc=param;
                                    

                               }
                            

                        /**
                        * field for PayRecFromCountries
                        */

                        
                                    protected java.lang.String localPayRecFromCountries ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPayRecFromCountriesTracker = false ;

                           public boolean isPayRecFromCountriesSpecified(){
                               return localPayRecFromCountriesTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPayRecFromCountries(){
                               return localPayRecFromCountries;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PayRecFromCountries
                               */
                               public void setPayRecFromCountries(java.lang.String param){
                            localPayRecFromCountriesTracker = param != null;
                                   
                                            this.localPayRecFromCountries=param;
                                    

                               }
                            

                        /**
                        * field for PrimSrcIncome
                        */

                        
                                    protected java.lang.String localPrimSrcIncome ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPrimSrcIncomeTracker = false ;

                           public boolean isPrimSrcIncomeSpecified(){
                               return localPrimSrcIncomeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPrimSrcIncome(){
                               return localPrimSrcIncome;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PrimSrcIncome
                               */
                               public void setPrimSrcIncome(java.lang.String param){
                            localPrimSrcIncomeTracker = param != null;
                                   
                                            this.localPrimSrcIncome=param;
                                    

                               }
                            

                        /**
                        * field for RealIncomeAed
                        */

                        
                                    protected java.lang.String localRealIncomeAed ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRealIncomeAedTracker = false ;

                           public boolean isRealIncomeAedSpecified(){
                               return localRealIncomeAedTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRealIncomeAed(){
                               return localRealIncomeAed;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RealIncomeAed
                               */
                               public void setRealIncomeAed(java.lang.String param){
                            localRealIncomeAedTracker = param != null;
                                   
                                            this.localRealIncomeAed=param;
                                    

                               }
                            

                        /**
                        * field for SalAed
                        */

                        
                                    protected java.lang.String localSalAed ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSalAedTracker = false ;

                           public boolean isSalAedSpecified(){
                               return localSalAedTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSalAed(){
                               return localSalAed;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SalAed
                               */
                               public void setSalAed(java.lang.String param){
                            localSalAedTracker = param != null;
                                   
                                            this.localSalAed=param;
                                    

                               }
                            

                        /**
                        * field for SaleofAsset
                        */

                        
                                    protected java.lang.String localSaleofAsset ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSaleofAssetTracker = false ;

                           public boolean isSaleofAssetSpecified(){
                               return localSaleofAssetTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSaleofAsset(){
                               return localSaleofAsset;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SaleofAsset
                               */
                               public void setSaleofAsset(java.lang.String param){
                            localSaleofAssetTracker = param != null;
                                   
                                            this.localSaleofAsset=param;
                                    

                               }
                            

                        /**
                        * field for StaffFlag
                        */

                        
                                    protected java.lang.String localStaffFlag ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localStaffFlagTracker = false ;

                           public boolean isStaffFlagSpecified(){
                               return localStaffFlagTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getStaffFlag(){
                               return localStaffFlag;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param StaffFlag
                               */
                               public void setStaffFlag(java.lang.String param){
                            localStaffFlagTracker = param != null;
                                   
                                            this.localStaffFlag=param;
                                    

                               }
                            

                        /**
                        * field for DateOfJoining
                        */

                        
                                    protected java.lang.String localDateOfJoining ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDateOfJoiningTracker = false ;

                           public boolean isDateOfJoiningSpecified(){
                               return localDateOfJoiningTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDateOfJoining(){
                               return localDateOfJoining;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DateOfJoining
                               */
                               public void setDateOfJoining(java.lang.String param){
                            localDateOfJoiningTracker = param != null;
                                   
                                            this.localDateOfJoining=param;
                                    

                               }
                            

                        /**
                        * field for TmlType
                        */

                        
                                    protected java.lang.String localTmlType ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTmlTypeTracker = false ;

                           public boolean isTmlTypeSpecified(){
                               return localTmlTypeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTmlType(){
                               return localTmlType;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TmlType
                               */
                               public void setTmlType(java.lang.String param){
                            localTmlTypeTracker = param != null;
                                   
                                            this.localTmlType=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":iKYC_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "iKYC_type0",
                           xmlWriter);
                   }

               
                   }
                if (localAnnualIncomeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "annualIncome", xmlWriter);
                             

                                          if (localAnnualIncome==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("annualIncome cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAnnualIncome);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCompanyWebsiteTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "companyWebsite", xmlWriter);
                             

                                          if (localCompanyWebsite==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("companyWebsite cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCompanyWebsite);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCrossBorderPaymntReqTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "crossBorderPaymntReq", xmlWriter);
                             

                                          if (localCrossBorderPaymntReq==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("crossBorderPaymntReq cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCrossBorderPaymntReq);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCrossMonthlyValueTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "crossMonthlyValue", xmlWriter);
                             

                                          if (localCrossMonthlyValue==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("crossMonthlyValue cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCrossMonthlyValue);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCrossPurposeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "crossPurpose", xmlWriter);
                             

                                          if (localCrossPurpose==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("crossPurpose cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCrossPurpose);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDesignationTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "designation", xmlWriter);
                             

                                          if (localDesignation==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("designation cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDesignation);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEmployeeIDTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "employeeID", xmlWriter);
                             

                                          if (localEmployeeID==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("employeeID cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEmployeeID);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEmployerTypeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "employerType", xmlWriter);
                             

                                          if (localEmployerType==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("employerType cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEmployerType);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEmploymntPhoneTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "employmntPhone", xmlWriter);
                             

                                          if (localEmploymntPhone==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("employmntPhone cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEmploymntPhone);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localInheritanceAedTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "inheritanceAed", xmlWriter);
                             

                                          if (localInheritanceAed==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("inheritanceAed cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localInheritanceAed);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localInvestmentReturnTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "investmentReturn", xmlWriter);
                             

                                          if (localInvestmentReturn==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("investmentReturn cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localInvestmentReturn);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLengthOfServiceTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "lengthOfService", xmlWriter);
                             

                                          if (localLengthOfService==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("lengthOfService cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLengthOfService);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMonthlyIncomeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "monthlyIncome", xmlWriter);
                             

                                          if (localMonthlyIncome==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("monthlyIncome cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMonthlyIncome);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNameOfEmployerTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "nameOfEmployer", xmlWriter);
                             

                                          if (localNameOfEmployer==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("nameOfEmployer cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNameOfEmployer);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNatureOfBusinessTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "natureOfBusiness", xmlWriter);
                             

                                          if (localNatureOfBusiness==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("natureOfBusiness cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNatureOfBusiness);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNoCrossPerMonthTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "noCrossPerMonth", xmlWriter);
                             

                                          if (localNoCrossPerMonth==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("noCrossPerMonth cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNoCrossPerMonth);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNoOfUaeBranchesTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "noOfUaeBranches", xmlWriter);
                             

                                          if (localNoOfUaeBranches==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("noOfUaeBranches cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNoOfUaeBranches);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOthersTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "others", xmlWriter);
                             

                                          if (localOthers==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("others cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOthers);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOwnershipPercTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "ownershipPerc", xmlWriter);
                             

                                          if (localOwnershipPerc==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ownershipPerc cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOwnershipPerc);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPayRecFromCountriesTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "payRecFromCountries", xmlWriter);
                             

                                          if (localPayRecFromCountries==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("payRecFromCountries cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPayRecFromCountries);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPrimSrcIncomeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "primSrcIncome", xmlWriter);
                             

                                          if (localPrimSrcIncome==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("primSrcIncome cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPrimSrcIncome);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRealIncomeAedTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "realIncomeAed", xmlWriter);
                             

                                          if (localRealIncomeAed==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("realIncomeAed cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRealIncomeAed);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSalAedTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "salAed", xmlWriter);
                             

                                          if (localSalAed==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("salAed cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSalAed);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSaleofAssetTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "saleofAsset", xmlWriter);
                             

                                          if (localSaleofAsset==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("saleofAsset cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSaleofAsset);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localStaffFlagTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "staffFlag", xmlWriter);
                             

                                          if (localStaffFlag==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("staffFlag cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localStaffFlag);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDateOfJoiningTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "dateOfJoining", xmlWriter);
                             

                                          if (localDateOfJoining==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("dateOfJoining cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDateOfJoining);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTmlTypeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "tmlType", xmlWriter);
                             

                                          if (localTmlType==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("tmlType cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTmlType);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localAnnualIncomeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "annualIncome"));
                                 
                                        if (localAnnualIncome != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAnnualIncome));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("annualIncome cannot be null!!");
                                        }
                                    } if (localCompanyWebsiteTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "companyWebsite"));
                                 
                                        if (localCompanyWebsite != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCompanyWebsite));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("companyWebsite cannot be null!!");
                                        }
                                    } if (localCrossBorderPaymntReqTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "crossBorderPaymntReq"));
                                 
                                        if (localCrossBorderPaymntReq != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCrossBorderPaymntReq));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("crossBorderPaymntReq cannot be null!!");
                                        }
                                    } if (localCrossMonthlyValueTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "crossMonthlyValue"));
                                 
                                        if (localCrossMonthlyValue != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCrossMonthlyValue));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("crossMonthlyValue cannot be null!!");
                                        }
                                    } if (localCrossPurposeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "crossPurpose"));
                                 
                                        if (localCrossPurpose != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCrossPurpose));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("crossPurpose cannot be null!!");
                                        }
                                    } if (localDesignationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "designation"));
                                 
                                        if (localDesignation != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDesignation));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("designation cannot be null!!");
                                        }
                                    } if (localEmployeeIDTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "employeeID"));
                                 
                                        if (localEmployeeID != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmployeeID));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("employeeID cannot be null!!");
                                        }
                                    } if (localEmployerTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "employerType"));
                                 
                                        if (localEmployerType != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmployerType));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("employerType cannot be null!!");
                                        }
                                    } if (localEmploymntPhoneTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "employmntPhone"));
                                 
                                        if (localEmploymntPhone != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmploymntPhone));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("employmntPhone cannot be null!!");
                                        }
                                    } if (localInheritanceAedTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "inheritanceAed"));
                                 
                                        if (localInheritanceAed != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localInheritanceAed));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("inheritanceAed cannot be null!!");
                                        }
                                    } if (localInvestmentReturnTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "investmentReturn"));
                                 
                                        if (localInvestmentReturn != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localInvestmentReturn));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("investmentReturn cannot be null!!");
                                        }
                                    } if (localLengthOfServiceTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "lengthOfService"));
                                 
                                        if (localLengthOfService != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLengthOfService));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("lengthOfService cannot be null!!");
                                        }
                                    } if (localMonthlyIncomeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "monthlyIncome"));
                                 
                                        if (localMonthlyIncome != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMonthlyIncome));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("monthlyIncome cannot be null!!");
                                        }
                                    } if (localNameOfEmployerTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "nameOfEmployer"));
                                 
                                        if (localNameOfEmployer != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNameOfEmployer));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("nameOfEmployer cannot be null!!");
                                        }
                                    } if (localNatureOfBusinessTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "natureOfBusiness"));
                                 
                                        if (localNatureOfBusiness != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNatureOfBusiness));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("natureOfBusiness cannot be null!!");
                                        }
                                    } if (localNoCrossPerMonthTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "noCrossPerMonth"));
                                 
                                        if (localNoCrossPerMonth != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNoCrossPerMonth));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("noCrossPerMonth cannot be null!!");
                                        }
                                    } if (localNoOfUaeBranchesTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "noOfUaeBranches"));
                                 
                                        if (localNoOfUaeBranches != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNoOfUaeBranches));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("noOfUaeBranches cannot be null!!");
                                        }
                                    } if (localOthersTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "others"));
                                 
                                        if (localOthers != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOthers));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("others cannot be null!!");
                                        }
                                    } if (localOwnershipPercTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "ownershipPerc"));
                                 
                                        if (localOwnershipPerc != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOwnershipPerc));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ownershipPerc cannot be null!!");
                                        }
                                    } if (localPayRecFromCountriesTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "payRecFromCountries"));
                                 
                                        if (localPayRecFromCountries != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPayRecFromCountries));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("payRecFromCountries cannot be null!!");
                                        }
                                    } if (localPrimSrcIncomeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "primSrcIncome"));
                                 
                                        if (localPrimSrcIncome != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPrimSrcIncome));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("primSrcIncome cannot be null!!");
                                        }
                                    } if (localRealIncomeAedTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "realIncomeAed"));
                                 
                                        if (localRealIncomeAed != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRealIncomeAed));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("realIncomeAed cannot be null!!");
                                        }
                                    } if (localSalAedTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "salAed"));
                                 
                                        if (localSalAed != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSalAed));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("salAed cannot be null!!");
                                        }
                                    } if (localSaleofAssetTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "saleofAsset"));
                                 
                                        if (localSaleofAsset != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSaleofAsset));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("saleofAsset cannot be null!!");
                                        }
                                    } if (localStaffFlagTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "staffFlag"));
                                 
                                        if (localStaffFlag != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localStaffFlag));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("staffFlag cannot be null!!");
                                        }
                                    } if (localDateOfJoiningTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "dateOfJoining"));
                                 
                                        if (localDateOfJoining != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDateOfJoining));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("dateOfJoining cannot be null!!");
                                        }
                                    } if (localTmlTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "tmlType"));
                                 
                                        if (localTmlType != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTmlType));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("tmlType cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static IKYC_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            IKYC_type0 object =
                new IKYC_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"iKYC_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (IKYC_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","annualIncome").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"annualIncome" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAnnualIncome(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","companyWebsite").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"companyWebsite" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCompanyWebsite(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","crossBorderPaymntReq").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"crossBorderPaymntReq" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCrossBorderPaymntReq(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","crossMonthlyValue").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"crossMonthlyValue" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCrossMonthlyValue(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","crossPurpose").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"crossPurpose" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCrossPurpose(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","designation").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"designation" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDesignation(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","employeeID").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"employeeID" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEmployeeID(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","employerType").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"employerType" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEmployerType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","employmntPhone").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"employmntPhone" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEmploymntPhone(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","inheritanceAed").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"inheritanceAed" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setInheritanceAed(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","investmentReturn").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"investmentReturn" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setInvestmentReturn(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","lengthOfService").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"lengthOfService" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLengthOfService(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","monthlyIncome").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"monthlyIncome" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMonthlyIncome(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","nameOfEmployer").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"nameOfEmployer" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNameOfEmployer(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","natureOfBusiness").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"natureOfBusiness" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNatureOfBusiness(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","noCrossPerMonth").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"noCrossPerMonth" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNoCrossPerMonth(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","noOfUaeBranches").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"noOfUaeBranches" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNoOfUaeBranches(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","others").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"others" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOthers(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","ownershipPerc").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ownershipPerc" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOwnershipPerc(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","payRecFromCountries").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"payRecFromCountries" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPayRecFromCountries(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","primSrcIncome").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"primSrcIncome" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPrimSrcIncome(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","realIncomeAed").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"realIncomeAed" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRealIncomeAed(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","salAed").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"salAed" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSalAed(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","saleofAsset").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"saleofAsset" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSaleofAsset(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","staffFlag").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"staffFlag" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setStaffFlag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","dateOfJoining").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"dateOfJoining" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDateOfJoining(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","tmlType").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"tmlType" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTmlType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class DeliveryPreferences_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = deliveryPreferences_type0
                Namespace URI = http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for Address
                        */

                        
                                    protected java.lang.String localAddress ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAddressTracker = false ;

                           public boolean isAddressSpecified(){
                               return localAddressTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAddress(){
                               return localAddress;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Address
                               */
                               public void setAddress(java.lang.String param){
                            localAddressTracker = param != null;
                                   
                                            this.localAddress=param;
                                    

                               }
                            

                        /**
                        * field for BranchInstantIssuance
                        */

                        
                                    protected java.lang.String localBranchInstantIssuance ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBranchInstantIssuanceTracker = false ;

                           public boolean isBranchInstantIssuanceSpecified(){
                               return localBranchInstantIssuanceTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBranchInstantIssuance(){
                               return localBranchInstantIssuance;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BranchInstantIssuance
                               */
                               public void setBranchInstantIssuance(java.lang.String param){
                            localBranchInstantIssuanceTracker = param != null;
                                   
                                            this.localBranchInstantIssuance=param;
                                    

                               }
                            

                        /**
                        * field for City
                        */

                        
                                    protected java.lang.String localCity ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCityTracker = false ;

                           public boolean isCitySpecified(){
                               return localCityTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCity(){
                               return localCity;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param City
                               */
                               public void setCity(java.lang.String param){
                            localCityTracker = param != null;
                                   
                                            this.localCity=param;
                                    

                               }
                            

                        /**
                        * field for Cntry
                        */

                        
                                    protected java.lang.String localCntry ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCntryTracker = false ;

                           public boolean isCntrySpecified(){
                               return localCntryTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCntry(){
                               return localCntry;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Cntry
                               */
                               public void setCntry(java.lang.String param){
                            localCntryTracker = param != null;
                                   
                                            this.localCntry=param;
                                    

                               }
                            

                        /**
                        * field for DelName
                        */

                        
                                    protected java.lang.String localDelName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDelNameTracker = false ;

                           public boolean isDelNameSpecified(){
                               return localDelNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDelName(){
                               return localDelName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DelName
                               */
                               public void setDelName(java.lang.String param){
                            localDelNameTracker = param != null;
                                   
                                            this.localDelName=param;
                                    

                               }
                            

                        /**
                        * field for ExistingCustAdd
                        */

                        
                                    protected java.lang.String localExistingCustAdd ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localExistingCustAddTracker = false ;

                           public boolean isExistingCustAddSpecified(){
                               return localExistingCustAddTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getExistingCustAdd(){
                               return localExistingCustAdd;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ExistingCustAdd
                               */
                               public void setExistingCustAdd(java.lang.String param){
                            localExistingCustAddTracker = param != null;
                                   
                                            this.localExistingCustAdd=param;
                                    

                               }
                            

                        /**
                        * field for ExistingNomPerson
                        */

                        
                                    protected java.lang.String localExistingNomPerson ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localExistingNomPersonTracker = false ;

                           public boolean isExistingNomPersonSpecified(){
                               return localExistingNomPersonTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getExistingNomPerson(){
                               return localExistingNomPerson;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ExistingNomPerson
                               */
                               public void setExistingNomPerson(java.lang.String param){
                            localExistingNomPersonTracker = param != null;
                                   
                                            this.localExistingNomPerson=param;
                                    

                               }
                            

                        /**
                        * field for Fax
                        */

                        
                                    protected java.lang.String localFax ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFaxTracker = false ;

                           public boolean isFaxSpecified(){
                               return localFaxTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFax(){
                               return localFax;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Fax
                               */
                               public void setFax(java.lang.String param){
                            localFaxTracker = param != null;
                                   
                                            this.localFax=param;
                                    

                               }
                            

                        /**
                        * field for LandMark
                        */

                        
                                    protected java.lang.String localLandMark ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLandMarkTracker = false ;

                           public boolean isLandMarkSpecified(){
                               return localLandMarkTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLandMark(){
                               return localLandMark;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LandMark
                               */
                               public void setLandMark(java.lang.String param){
                            localLandMarkTracker = param != null;
                                   
                                            this.localLandMark=param;
                                    

                               }
                            

                        /**
                        * field for MobileNo
                        */

                        
                                    protected java.lang.String localMobileNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMobileNoTracker = false ;

                           public boolean isMobileNoSpecified(){
                               return localMobileNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMobileNo(){
                               return localMobileNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MobileNo
                               */
                               public void setMobileNo(java.lang.String param){
                            localMobileNoTracker = param != null;
                                   
                                            this.localMobileNo=param;
                                    

                               }
                            

                        /**
                        * field for NomReq
                        */

                        
                                    protected java.lang.String localNomReq ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNomReqTracker = false ;

                           public boolean isNomReqSpecified(){
                               return localNomReqTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNomReq(){
                               return localNomReq;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NomReq
                               */
                               public void setNomReq(java.lang.String param){
                            localNomReqTracker = param != null;
                                   
                                            this.localNomReq=param;
                                    

                               }
                            

                        /**
                        * field for Other
                        */

                        
                                    protected java.lang.String localOther ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOtherTracker = false ;

                           public boolean isOtherSpecified(){
                               return localOtherTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOther(){
                               return localOther;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Other
                               */
                               public void setOther(java.lang.String param){
                            localOtherTracker = param != null;
                                   
                                            this.localOther=param;
                                    

                               }
                            

                        /**
                        * field for PhoneNo
                        */

                        
                                    protected java.lang.String localPhoneNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPhoneNoTracker = false ;

                           public boolean isPhoneNoSpecified(){
                               return localPhoneNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPhoneNo(){
                               return localPhoneNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PhoneNo
                               */
                               public void setPhoneNo(java.lang.String param){
                            localPhoneNoTracker = param != null;
                                   
                                            this.localPhoneNo=param;
                                    

                               }
                            

                        /**
                        * field for PreferLang
                        */

                        
                                    protected java.lang.String localPreferLang ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPreferLangTracker = false ;

                           public boolean isPreferLangSpecified(){
                               return localPreferLangTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPreferLang(){
                               return localPreferLang;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PreferLang
                               */
                               public void setPreferLang(java.lang.String param){
                            localPreferLangTracker = param != null;
                                   
                                            this.localPreferLang=param;
                                    

                               }
                            

                        /**
                        * field for State
                        */

                        
                                    protected java.lang.String localState ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localStateTracker = false ;

                           public boolean isStateSpecified(){
                               return localStateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getState(){
                               return localState;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param State
                               */
                               public void setState(java.lang.String param){
                            localStateTracker = param != null;
                                   
                                            this.localState=param;
                                    

                               }
                            

                        /**
                        * field for ZipCode
                        */

                        
                                    protected java.lang.String localZipCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localZipCodeTracker = false ;

                           public boolean isZipCodeSpecified(){
                               return localZipCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getZipCode(){
                               return localZipCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ZipCode
                               */
                               public void setZipCode(java.lang.String param){
                            localZipCodeTracker = param != null;
                                   
                                            this.localZipCode=param;
                                    

                               }
                            

                        /**
                        * field for PoBox
                        */

                        
                                    protected java.lang.String localPoBox ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPoBoxTracker = false ;

                           public boolean isPoBoxSpecified(){
                               return localPoBoxTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPoBox(){
                               return localPoBox;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PoBox
                               */
                               public void setPoBox(java.lang.String param){
                            localPoBoxTracker = param != null;
                                   
                                            this.localPoBox=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":deliveryPreferences_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "deliveryPreferences_type0",
                           xmlWriter);
                   }

               
                   }
                if (localAddressTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "address", xmlWriter);
                             

                                          if (localAddress==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("address cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAddress);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBranchInstantIssuanceTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "branchInstantIssuance", xmlWriter);
                             

                                          if (localBranchInstantIssuance==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("branchInstantIssuance cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBranchInstantIssuance);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCityTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "city", xmlWriter);
                             

                                          if (localCity==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("city cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCity);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCntryTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "cntry", xmlWriter);
                             

                                          if (localCntry==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("cntry cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCntry);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDelNameTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "delName", xmlWriter);
                             

                                          if (localDelName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("delName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDelName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localExistingCustAddTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "existingCustAdd", xmlWriter);
                             

                                          if (localExistingCustAdd==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("existingCustAdd cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localExistingCustAdd);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localExistingNomPersonTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "existingNomPerson", xmlWriter);
                             

                                          if (localExistingNomPerson==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("existingNomPerson cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localExistingNomPerson);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFaxTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "fax", xmlWriter);
                             

                                          if (localFax==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("fax cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFax);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLandMarkTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "landMark", xmlWriter);
                             

                                          if (localLandMark==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("landMark cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLandMark);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMobileNoTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "mobileNo", xmlWriter);
                             

                                          if (localMobileNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("mobileNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMobileNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNomReqTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "nomReq", xmlWriter);
                             

                                          if (localNomReq==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("nomReq cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNomReq);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOtherTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "other", xmlWriter);
                             

                                          if (localOther==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("other cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOther);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPhoneNoTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "phoneNo", xmlWriter);
                             

                                          if (localPhoneNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("phoneNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPhoneNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPreferLangTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "preferLang", xmlWriter);
                             

                                          if (localPreferLang==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("preferLang cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPreferLang);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localStateTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "state", xmlWriter);
                             

                                          if (localState==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("state cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localState);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localZipCodeTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "zipCode", xmlWriter);
                             

                                          if (localZipCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("zipCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localZipCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPoBoxTracker){
                                    namespace = "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd";
                                    writeStartElement(null, namespace, "poBox", xmlWriter);
                             

                                          if (localPoBox==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("poBox cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPoBox);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localAddressTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "address"));
                                 
                                        if (localAddress != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAddress));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("address cannot be null!!");
                                        }
                                    } if (localBranchInstantIssuanceTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "branchInstantIssuance"));
                                 
                                        if (localBranchInstantIssuance != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBranchInstantIssuance));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("branchInstantIssuance cannot be null!!");
                                        }
                                    } if (localCityTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "city"));
                                 
                                        if (localCity != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCity));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("city cannot be null!!");
                                        }
                                    } if (localCntryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "cntry"));
                                 
                                        if (localCntry != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCntry));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("cntry cannot be null!!");
                                        }
                                    } if (localDelNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "delName"));
                                 
                                        if (localDelName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDelName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("delName cannot be null!!");
                                        }
                                    } if (localExistingCustAddTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "existingCustAdd"));
                                 
                                        if (localExistingCustAdd != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localExistingCustAdd));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("existingCustAdd cannot be null!!");
                                        }
                                    } if (localExistingNomPersonTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "existingNomPerson"));
                                 
                                        if (localExistingNomPerson != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localExistingNomPerson));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("existingNomPerson cannot be null!!");
                                        }
                                    } if (localFaxTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "fax"));
                                 
                                        if (localFax != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFax));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("fax cannot be null!!");
                                        }
                                    } if (localLandMarkTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "landMark"));
                                 
                                        if (localLandMark != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLandMark));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("landMark cannot be null!!");
                                        }
                                    } if (localMobileNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "mobileNo"));
                                 
                                        if (localMobileNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMobileNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("mobileNo cannot be null!!");
                                        }
                                    } if (localNomReqTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "nomReq"));
                                 
                                        if (localNomReq != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNomReq));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("nomReq cannot be null!!");
                                        }
                                    } if (localOtherTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "other"));
                                 
                                        if (localOther != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOther));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("other cannot be null!!");
                                        }
                                    } if (localPhoneNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "phoneNo"));
                                 
                                        if (localPhoneNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPhoneNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("phoneNo cannot be null!!");
                                        }
                                    } if (localPreferLangTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "preferLang"));
                                 
                                        if (localPreferLang != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPreferLang));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("preferLang cannot be null!!");
                                        }
                                    } if (localStateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "state"));
                                 
                                        if (localState != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localState));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("state cannot be null!!");
                                        }
                                    } if (localZipCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "zipCode"));
                                 
                                        if (localZipCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localZipCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("zipCode cannot be null!!");
                                        }
                                    } if (localPoBoxTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "poBox"));
                                 
                                        if (localPoBox != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPoBox));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("poBox cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static DeliveryPreferences_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            DeliveryPreferences_type0 object =
                new DeliveryPreferences_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"deliveryPreferences_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (DeliveryPreferences_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","address").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"address" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAddress(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","branchInstantIssuance").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"branchInstantIssuance" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBranchInstantIssuance(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","city").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"city" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCity(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","cntry").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"cntry" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCntry(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","delName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"delName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDelName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","existingCustAdd").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"existingCustAdd" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setExistingCustAdd(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","existingNomPerson").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"existingNomPerson" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setExistingNomPerson(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","fax").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"fax" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFax(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","landMark").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"landMark" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLandMark(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","mobileNo").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"mobileNo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMobileNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","nomReq").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"nomReq" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNomReq(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","other").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"other" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOther(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","phoneNo").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"phoneNo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPhoneNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","preferLang").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"preferLang" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPreferLang(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","state").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"state" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setState(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","zipCode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"zipCode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setZipCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","poBox").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"poBox" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPoBox(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class AddOnlineAppDataReqMsg
        implements org.apache.axis2.databinding.ADBBean{
        
                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                "AddOnlineAppDataReqMsg",
                "ns2");

            

                        /**
                        * field for Header
                        */

                        
                                    protected HeaderType localHeader ;
                                

                           /**
                           * Auto generated getter method
                           * @return HeaderType
                           */
                           public  HeaderType getHeader(){
                               return localHeader;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Header
                               */
                               public void setHeader(HeaderType param){
                            
                                            this.localHeader=param;
                                    

                               }
                            

                        /**
                        * field for AddOnlineAppDataReq
                        */

                        
                                    protected AddOnlineAppDataReq_type0 localAddOnlineAppDataReq ;
                                

                           /**
                           * Auto generated getter method
                           * @return AddOnlineAppDataReq_type0
                           */
                           public  AddOnlineAppDataReq_type0 getAddOnlineAppDataReq(){
                               return localAddOnlineAppDataReq;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AddOnlineAppDataReq
                               */
                               public void setAddOnlineAppDataReq(AddOnlineAppDataReq_type0 param){
                            
                                            this.localAddOnlineAppDataReq=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
               return factory.createOMElement(dataSource,MY_QNAME);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":AddOnlineAppDataReqMsg",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "AddOnlineAppDataReqMsg",
                           xmlWriter);
                   }

               
                   }
               
                                            if (localHeader==null){
                                                 throw new org.apache.axis2.databinding.ADBException("header cannot be null!!");
                                            }
                                           localHeader.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","header"),
                                               xmlWriter);
                                        
                                            if (localAddOnlineAppDataReq==null){
                                                 throw new org.apache.axis2.databinding.ADBException("AddOnlineAppDataReq cannot be null!!");
                                            }
                                           localAddOnlineAppDataReq.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","AddOnlineAppDataReq"),
                                               xmlWriter);
                                        
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "header"));
                            
                            
                                    if (localHeader==null){
                                         throw new org.apache.axis2.databinding.ADBException("header cannot be null!!");
                                    }
                                    elementList.add(localHeader);
                                
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "AddOnlineAppDataReq"));
                            
                            
                                    if (localAddOnlineAppDataReq==null){
                                         throw new org.apache.axis2.databinding.ADBException("AddOnlineAppDataReq cannot be null!!");
                                    }
                                    elementList.add(localAddOnlineAppDataReq);
                                

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static AddOnlineAppDataReqMsg parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            AddOnlineAppDataReqMsg object =
                new AddOnlineAppDataReqMsg();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"AddOnlineAppDataReqMsg".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (AddOnlineAppDataReqMsg)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","header").equals(reader.getName())){
                                
                                                object.setHeader(HeaderType.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                                }
                            
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","AddOnlineAppDataReq").equals(reader.getName())){
                                
                                                object.setAddOnlineAppDataReq(AddOnlineAppDataReq_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                                }
                              
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class AddOnlineAppDataResMsg
        implements org.apache.axis2.databinding.ADBBean{
        
                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                "AddOnlineAppDataResMsg",
                "ns2");

            

                        /**
                        * field for Header
                        */

                        
                                    protected HeaderType localHeader ;
                                

                           /**
                           * Auto generated getter method
                           * @return HeaderType
                           */
                           public  HeaderType getHeader(){
                               return localHeader;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Header
                               */
                               public void setHeader(HeaderType param){
                            
                                            this.localHeader=param;
                                    

                               }
                            

                        /**
                        * field for AddOnlineAppDataRes
                        */

                        
                                    protected AddOnlineAppDataRes_type0 localAddOnlineAppDataRes ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAddOnlineAppDataResTracker = false ;

                           public boolean isAddOnlineAppDataResSpecified(){
                               return localAddOnlineAppDataResTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return AddOnlineAppDataRes_type0
                           */
                           public  AddOnlineAppDataRes_type0 getAddOnlineAppDataRes(){
                               return localAddOnlineAppDataRes;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AddOnlineAppDataRes
                               */
                               public void setAddOnlineAppDataRes(AddOnlineAppDataRes_type0 param){
                            localAddOnlineAppDataResTracker = param != null;
                                   
                                            this.localAddOnlineAppDataRes=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
               return factory.createOMElement(dataSource,MY_QNAME);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":AddOnlineAppDataResMsg",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "AddOnlineAppDataResMsg",
                           xmlWriter);
                   }

               
                   }
               
                                            if (localHeader==null){
                                                 throw new org.apache.axis2.databinding.ADBException("header cannot be null!!");
                                            }
                                           localHeader.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","header"),
                                               xmlWriter);
                                         if (localAddOnlineAppDataResTracker){
                                            if (localAddOnlineAppDataRes==null){
                                                 throw new org.apache.axis2.databinding.ADBException("AddOnlineAppDataRes cannot be null!!");
                                            }
                                           localAddOnlineAppDataRes.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","AddOnlineAppDataRes"),
                                               xmlWriter);
                                        }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "header"));
                            
                            
                                    if (localHeader==null){
                                         throw new org.apache.axis2.databinding.ADBException("header cannot be null!!");
                                    }
                                    elementList.add(localHeader);
                                 if (localAddOnlineAppDataResTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd",
                                                                      "AddOnlineAppDataRes"));
                            
                            
                                    if (localAddOnlineAppDataRes==null){
                                         throw new org.apache.axis2.databinding.ADBException("AddOnlineAppDataRes cannot be null!!");
                                    }
                                    elementList.add(localAddOnlineAppDataRes);
                                }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static AddOnlineAppDataResMsg parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            AddOnlineAppDataResMsg object =
                new AddOnlineAppDataResMsg();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"AddOnlineAppDataResMsg".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (AddOnlineAppDataResMsg)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","header").equals(reader.getName())){
                                
                                                object.setHeader(HeaderType.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                                }
                            
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/Mnt/MobilityMntService/AddOnlineAppData.xsd","AddOnlineAppDataRes").equals(reader.getName())){
                                
                                                object.setAddOnlineAppDataRes(AddOnlineAppDataRes_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
            private  org.apache.axiom.om.OMElement  toOM(com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineCardAppDataReqMsg param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineCardAppDataReqMsg.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineCardAppDataResMsg param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineCardAppDataResMsg.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineLendingApplicationDtlsReqMsg param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineLendingApplicationDtlsReqMsg.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineLendingApplicationDtlsResMsg param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineLendingApplicationDtlsResMsg.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineAppDataReqMsg param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineAppDataReqMsg.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineAppDataResMsg param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineAppDataResMsg.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineCardAppDataReqMsg param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineCardAppDataReqMsg.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineLendingApplicationDtlsReqMsg param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineLendingApplicationDtlsReqMsg.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineAppDataReqMsg param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineAppDataReqMsg.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             


        /**
        *  get the default envelope
        */
        private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory){
        return factory.getDefaultEnvelope();
        }


        private  java.lang.Object fromOM(
        org.apache.axiom.om.OMElement param,
        java.lang.Class type,
        java.util.Map extraNamespaces) throws org.apache.axis2.AxisFault{

        try {
        
                if (com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineCardAppDataReqMsg.class.equals(type)){
                
                           return com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineCardAppDataReqMsg.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineCardAppDataResMsg.class.equals(type)){
                
                           return com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineCardAppDataResMsg.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineLendingApplicationDtlsReqMsg.class.equals(type)){
                
                           return com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineLendingApplicationDtlsReqMsg.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineLendingApplicationDtlsResMsg.class.equals(type)){
                
                           return com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineLendingApplicationDtlsResMsg.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineAppDataReqMsg.class.equals(type)){
                
                           return com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineAppDataReqMsg.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineAppDataResMsg.class.equals(type)){
                
                           return com.newgen.dscop.stub.AddOnlineAppDataStub.AddOnlineAppDataResMsg.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
        } catch (java.lang.Exception e) {
        throw org.apache.axis2.AxisFault.makeFault(e);
        }
           return null;
        }



    
   }
   
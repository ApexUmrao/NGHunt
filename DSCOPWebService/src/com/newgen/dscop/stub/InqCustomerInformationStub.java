
/**
 * InqCustomerInformationStub.java
 *
 * This file was auto-generated from WSDL
 * by the Apache Axis2 version: 1.6.2  Built on : Apr 17, 2012 (05:33:49 IST)
 */
        package com.newgen.dscop.stub;

        

        /*
        *  InqCustomerInformationStub java implementation
        */

        
        public class InqCustomerInformationStub extends org.apache.axis2.client.Stub
        {
        protected org.apache.axis2.description.AxisOperation[] _operations;

        //hashmaps to keep the fault mapping
        private java.util.HashMap faultExceptionNameMap = new java.util.HashMap();
        private java.util.HashMap faultExceptionClassNameMap = new java.util.HashMap();
        private java.util.HashMap faultMessageMap = new java.util.HashMap();
        public String resMsg;
        private static int counter = 0;

        private static synchronized java.lang.String getUniqueSuffix(){
            // reset the counter if it is greater than 99999
            if (counter > 99999){
                counter = 0;
            }
            counter = counter + 1; 
            return java.lang.Long.toString(java.lang.System.currentTimeMillis()) + "_" + counter;
        }

        public  String getInputXml(
                com.newgen.dscop.stub.InqCustomerInformationStub.GetCustomerInformationReqMsg getCustomerInformationReqMsg0)         

        throws java.rmi.RemoteException        
        {
			  org.apache.axis2.context.MessageContext _messageContext = null;
			  try{
			   org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[0].getName());
			  _operationClient.getOptions().setAction("/Services/CRMServicesInquiry/Services/InqCustomerInformation.serviceagent/PortTypeEndpoint1/GetCustomerInformation_Oper");
			  _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);
			 
			   addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
			 
			  // create a message context
			  _messageContext = new org.apache.axis2.context.MessageContext();
			
			  // create SOAP envelope with that payload
			  org.apache.axiom.soap.SOAPEnvelope env = null;
			                                        
		    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
		    getCustomerInformationReqMsg0,
		    optimizeContent(new javax.xml.namespace.QName("http://xmlns.example.com/1242285043305",
		    "getCustomerInformation_Oper")), new javax.xml.namespace.QName("http://xmlns.example.com/1242285043305",
		    "getCustomerInformation_Oper"));
			                                    
			//adding SOAP soap_headers
			_serviceClient.addHeadersToEnvelope(env);
			// set the message context with that soap envelope
			_messageContext.setEnvelope(env);
			
		
			
			return env.toString();
			                       
			} catch(org.apache.axis2.AxisFault f){ return "";}
			
			  
        } 
        

    private void populateAxisService() throws org.apache.axis2.AxisFault {

     //creating the Service with a unique name
     _service = new org.apache.axis2.description.AxisService("InqCustomerInformation" + getUniqueSuffix());
     addAnonymousOperations();

        //creating the operations
        org.apache.axis2.description.AxisOperation __operation;

        _operations = new org.apache.axis2.description.AxisOperation[1];
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://xmlns.example.com/1242285043305", "getCustomerInformation_Oper"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[0]=__operation;
            
        
        }

    //populates the faults
    private void populateFaults(){
         


    }

    /**
      *Constructor that takes in a configContext
      */

    public InqCustomerInformationStub(org.apache.axis2.context.ConfigurationContext configurationContext,
       java.lang.String targetEndpoint)
       throws org.apache.axis2.AxisFault {
         this(configurationContext,targetEndpoint,false);
   }


   /**
     * Constructor that takes in a configContext  and useseperate listner
     */
   public InqCustomerInformationStub(org.apache.axis2.context.ConfigurationContext configurationContext,
        java.lang.String targetEndpoint, boolean useSeparateListener)
        throws org.apache.axis2.AxisFault {
         //To populate AxisService
         populateAxisService();
         populateFaults();

        _serviceClient = new org.apache.axis2.client.ServiceClient(configurationContext,_service);
        
	
        _serviceClient.getOptions().setTo(new org.apache.axis2.addressing.EndpointReference(
                targetEndpoint));
        _serviceClient.getOptions().setUseSeparateListener(useSeparateListener);
        
    
    }

    /**
     * Default Constructor
     */
    public InqCustomerInformationStub(org.apache.axis2.context.ConfigurationContext configurationContext) throws org.apache.axis2.AxisFault {
        
                    this(configurationContext,"http://10.146.163.71:5601/Services/CRMServicesInquiry/Services/InqCustomerInformation.serviceagent/PortTypeEndpoint1" );
                
    }

    /**
     * Default Constructor
     */
    public InqCustomerInformationStub() throws org.apache.axis2.AxisFault {
        
                    this("http://10.146.163.71:5601/Services/CRMServicesInquiry/Services/InqCustomerInformation.serviceagent/PortTypeEndpoint1" );
                
    }

    /**
     * Constructor taking the target endpoint
     */
    public InqCustomerInformationStub(java.lang.String targetEndpoint) throws org.apache.axis2.AxisFault {
        this(null,targetEndpoint);
    }



        
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.newgen.dscop.stub.InqCustomerInformation#getCustomerInformation_Oper
                     * @param getCustomerInformationReqMsg0
                    
                     */

                    

                            public  com.newgen.dscop.stub.InqCustomerInformationStub.GetCustomerInformationResMsg getCustomerInformation_Oper(

                            com.newgen.dscop.stub.InqCustomerInformationStub.GetCustomerInformationReqMsg getCustomerInformationReqMsg0)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[0].getName());
              _operationClient.getOptions().setAction("/Services/CRMServicesInquiry/Services/InqCustomerInformation.serviceagent/PortTypeEndpoint1/GetCustomerInformation_Oper");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getCustomerInformationReqMsg0,
                                                    optimizeContent(new javax.xml.namespace.QName("http://xmlns.example.com/1242285043305",
                                                    "getCustomerInformation_Oper")), new javax.xml.namespace.QName("http://xmlns.example.com/1242285043305",
                                                    "getCustomerInformation_Oper"));
                                                
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                resMsg = _returnEnv.toString();
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.newgen.dscop.stub.InqCustomerInformationStub.GetCustomerInformationResMsg.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.newgen.dscop.stub.InqCustomerInformationStub.GetCustomerInformationResMsg)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCustomerInformation_Oper"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCustomerInformation_Oper"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCustomerInformation_Oper"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.newgen.dscop.stub.InqCustomerInformation#startgetCustomerInformation_Oper
                    * @param getCustomerInformationReqMsg0
                
                */
                public  void startgetCustomerInformation_Oper(

                 com.newgen.dscop.stub.InqCustomerInformationStub.GetCustomerInformationReqMsg getCustomerInformationReqMsg0,

                  final com.newgen.dscop.stub.InqCustomerInformationCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[0].getName());
             _operationClient.getOptions().setAction("/Services/CRMServicesInquiry/Services/InqCustomerInformation.serviceagent/PortTypeEndpoint1/GetCustomerInformation_Oper");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getCustomerInformationReqMsg0,
                                                    optimizeContent(new javax.xml.namespace.QName("http://xmlns.example.com/1242285043305",
                                                    "getCustomerInformation_Oper")), new javax.xml.namespace.QName("http://xmlns.example.com/1242285043305",
                                                    "getCustomerInformation_Oper"));
                                                
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.newgen.dscop.stub.InqCustomerInformationStub.GetCustomerInformationResMsg.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetCustomerInformation_Oper(
                                        (com.newgen.dscop.stub.InqCustomerInformationStub.GetCustomerInformationResMsg)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetCustomerInformation_Oper(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCustomerInformation_Oper"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCustomerInformation_Oper"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCustomerInformation_Oper"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetCustomerInformation_Oper(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomerInformation_Oper(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomerInformation_Oper(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomerInformation_Oper(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomerInformation_Oper(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomerInformation_Oper(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomerInformation_Oper(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomerInformation_Oper(f);
                                            }
									    } else {
										    callback.receiveErrorgetCustomerInformation_Oper(f);
									    }
									} else {
									    callback.receiveErrorgetCustomerInformation_Oper(f);
									}
								} else {
								    callback.receiveErrorgetCustomerInformation_Oper(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetCustomerInformation_Oper(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[0].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[0].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                


       /**
        *  A utility method that copies the namepaces from the SOAPEnvelope
        */
       private java.util.Map getEnvelopeNamespaces(org.apache.axiom.soap.SOAPEnvelope env){
        java.util.Map returnMap = new java.util.HashMap();
        java.util.Iterator namespaceIterator = env.getAllDeclaredNamespaces();
        while (namespaceIterator.hasNext()) {
            org.apache.axiom.om.OMNamespace ns = (org.apache.axiom.om.OMNamespace) namespaceIterator.next();
            returnMap.put(ns.getPrefix(),ns.getNamespaceURI());
        }
       return returnMap;
    }

    
    
    private javax.xml.namespace.QName[] opNameArray = null;
    private boolean optimizeContent(javax.xml.namespace.QName opName) {
        

        if (opNameArray == null) {
            return false;
        }
        for (int i = 0; i < opNameArray.length; i++) {
            if (opName.equals(opNameArray[i])) {
                return true;   
            }
        }
        return false;
    }
     //http://10.146.163.71:5601/Services/CRMServicesInquiry/Services/InqCustomerInformation.serviceagent/PortTypeEndpoint1
        public static class HeaderType
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = headerType
                Namespace URI = http://www.adcb.com/esb/common/header.xsd
                Namespace Prefix = ns1
                */
            

                        /**
                        * field for UsecaseID
                        */

                        
                                    protected java.lang.String localUsecaseID ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUsecaseIDTracker = false ;

                           public boolean isUsecaseIDSpecified(){
                               return localUsecaseIDTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUsecaseID(){
                               return localUsecaseID;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param UsecaseID
                               */
                               public void setUsecaseID(java.lang.String param){
                            localUsecaseIDTracker = param != null;
                                   
                                            this.localUsecaseID=param;
                                    

                               }
                            

                        /**
                        * field for ServiceName
                        */

                        
                                    protected java.lang.String localServiceName ;
                                

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getServiceName(){
                               return localServiceName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ServiceName
                               */
                               public void setServiceName(java.lang.String param){
                            
                                            this.localServiceName=param;
                                    

                               }
                            

                        /**
                        * field for VersionNo
                        */

                        
                                    protected java.lang.String localVersionNo ;
                                

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getVersionNo(){
                               return localVersionNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param VersionNo
                               */
                               public void setVersionNo(java.lang.String param){
                            
                                            this.localVersionNo=param;
                                    

                               }
                            

                        /**
                        * field for ServiceAction
                        */

                        
                                    protected java.lang.String localServiceAction ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localServiceActionTracker = false ;

                           public boolean isServiceActionSpecified(){
                               return localServiceActionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getServiceAction(){
                               return localServiceAction;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ServiceAction
                               */
                               public void setServiceAction(java.lang.String param){
                            localServiceActionTracker = param != null;
                                   
                                            this.localServiceAction=param;
                                    

                               }
                            

                        /**
                        * field for CorrelationID
                        */

                        
                                    protected java.lang.String localCorrelationID ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCorrelationIDTracker = false ;

                           public boolean isCorrelationIDSpecified(){
                               return localCorrelationIDTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCorrelationID(){
                               return localCorrelationID;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CorrelationID
                               */
                               public void setCorrelationID(java.lang.String param){
                            localCorrelationIDTracker = param != null;
                                   
                                            this.localCorrelationID=param;
                                    

                               }
                            

                        /**
                        * field for SysRefNumber
                        */

                        
                                    protected java.lang.String localSysRefNumber ;
                                

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSysRefNumber(){
                               return localSysRefNumber;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SysRefNumber
                               */
                               public void setSysRefNumber(java.lang.String param){
                            
                                            this.localSysRefNumber=param;
                                    

                               }
                            

                        /**
                        * field for SenderID
                        */

                        
                                    protected java.lang.String localSenderID ;
                                

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSenderID(){
                               return localSenderID;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SenderID
                               */
                               public void setSenderID(java.lang.String param){
                            
                                            this.localSenderID=param;
                                    

                               }
                            

                        /**
                        * field for Consumer
                        */

                        
                                    protected java.lang.String localConsumer ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localConsumerTracker = false ;

                           public boolean isConsumerSpecified(){
                               return localConsumerTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getConsumer(){
                               return localConsumer;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Consumer
                               */
                               public void setConsumer(java.lang.String param){
                            localConsumerTracker = param != null;
                                   
                                            this.localConsumer=param;
                                    

                               }
                            

                        /**
                        * field for ReqTimeStamp
                        */

                        
                                    protected java.lang.String localReqTimeStamp ;
                                

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getReqTimeStamp(){
                               return localReqTimeStamp;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ReqTimeStamp
                               */
                               public void setReqTimeStamp(java.lang.String param){
                            
                                            this.localReqTimeStamp=param;
                                    

                               }
                            

                        /**
                        * field for RepTimeStamp
                        */

                        
                                    protected java.lang.String localRepTimeStamp ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRepTimeStampTracker = false ;

                           public boolean isRepTimeStampSpecified(){
                               return localRepTimeStampTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRepTimeStamp(){
                               return localRepTimeStamp;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RepTimeStamp
                               */
                               public void setRepTimeStamp(java.lang.String param){
                            localRepTimeStampTracker = param != null;
                                   
                                            this.localRepTimeStamp=param;
                                    

                               }
                            

                        /**
                        * field for Username
                        */

                        
                                    protected java.lang.String localUsername ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUsernameTracker = false ;

                           public boolean isUsernameSpecified(){
                               return localUsernameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUsername(){
                               return localUsername;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Username
                               */
                               public void setUsername(java.lang.String param){
                            localUsernameTracker = param != null;
                                   
                                            this.localUsername=param;
                                    

                               }
                            

                        /**
                        * field for Credentials
                        */

                        
                                    protected java.lang.String localCredentials ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCredentialsTracker = false ;

                           public boolean isCredentialsSpecified(){
                               return localCredentialsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCredentials(){
                               return localCredentials;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Credentials
                               */
                               public void setCredentials(java.lang.String param){
                            localCredentialsTracker = param != null;
                                   
                                            this.localCredentials=param;
                                    

                               }
                            

                        /**
                        * field for ReturnCode
                        */

                        
                                    protected java.lang.String localReturnCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localReturnCodeTracker = false ;

                           public boolean isReturnCodeSpecified(){
                               return localReturnCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getReturnCode(){
                               return localReturnCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ReturnCode
                               */
                               public void setReturnCode(java.lang.String param){
                            localReturnCodeTracker = param != null;
                                   
                                            this.localReturnCode=param;
                                    

                               }
                            

                        /**
                        * field for ErrorDescription
                        */

                        
                                    protected java.lang.String localErrorDescription ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localErrorDescriptionTracker = false ;

                           public boolean isErrorDescriptionSpecified(){
                               return localErrorDescriptionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getErrorDescription(){
                               return localErrorDescription;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ErrorDescription
                               */
                               public void setErrorDescription(java.lang.String param){
                            localErrorDescriptionTracker = param != null;
                                   
                                            this.localErrorDescription=param;
                                    

                               }
                            

                        /**
                        * field for ErrorDetail
                        */

                        
                                    protected java.lang.String localErrorDetail ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localErrorDetailTracker = false ;

                           public boolean isErrorDetailSpecified(){
                               return localErrorDetailTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getErrorDetail(){
                               return localErrorDetail;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ErrorDetail
                               */
                               public void setErrorDetail(java.lang.String param){
                            localErrorDetailTracker = param != null;
                                   
                                            this.localErrorDetail=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/esb/common/header.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":headerType",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "headerType",
                           xmlWriter);
                   }

               
                   }
                if (localUsecaseIDTracker){
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "usecaseID", xmlWriter);
                             

                                          if (localUsecaseID==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("usecaseID cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUsecaseID);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "serviceName", xmlWriter);
                             

                                          if (localServiceName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("serviceName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localServiceName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "versionNo", xmlWriter);
                             

                                          if (localVersionNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("versionNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localVersionNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                              if (localServiceActionTracker){
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "serviceAction", xmlWriter);
                             

                                          if (localServiceAction==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("serviceAction cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localServiceAction);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCorrelationIDTracker){
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "correlationID", xmlWriter);
                             

                                          if (localCorrelationID==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("correlationID cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCorrelationID);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "sysRefNumber", xmlWriter);
                             

                                          if (localSysRefNumber==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sysRefNumber cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSysRefNumber);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "senderID", xmlWriter);
                             

                                          if (localSenderID==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("senderID cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSenderID);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                              if (localConsumerTracker){
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "consumer", xmlWriter);
                             

                                          if (localConsumer==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("consumer cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localConsumer);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "reqTimeStamp", xmlWriter);
                             

                                          if (localReqTimeStamp==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("reqTimeStamp cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localReqTimeStamp);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                              if (localRepTimeStampTracker){
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "repTimeStamp", xmlWriter);
                             

                                          if (localRepTimeStamp==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("repTimeStamp cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRepTimeStamp);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUsernameTracker){
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "username", xmlWriter);
                             

                                          if (localUsername==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("username cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUsername);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCredentialsTracker){
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "credentials", xmlWriter);
                             

                                          if (localCredentials==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("credentials cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCredentials);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localReturnCodeTracker){
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "returnCode", xmlWriter);
                             

                                          if (localReturnCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("returnCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localReturnCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localErrorDescriptionTracker){
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "errorDescription", xmlWriter);
                             

                                          if (localErrorDescription==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("errorDescription cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localErrorDescription);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localErrorDetailTracker){
                                    namespace = "http://www.adcb.com/esb/common/header.xsd";
                                    writeStartElement(null, namespace, "errorDetail", xmlWriter);
                             

                                          if (localErrorDetail==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("errorDetail cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localErrorDetail);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/common/header.xsd")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localUsecaseIDTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "usecaseID"));
                                 
                                        if (localUsecaseID != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUsecaseID));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("usecaseID cannot be null!!");
                                        }
                                    }
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "serviceName"));
                                 
                                        if (localServiceName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localServiceName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("serviceName cannot be null!!");
                                        }
                                    
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "versionNo"));
                                 
                                        if (localVersionNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localVersionNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("versionNo cannot be null!!");
                                        }
                                     if (localServiceActionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "serviceAction"));
                                 
                                        if (localServiceAction != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localServiceAction));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("serviceAction cannot be null!!");
                                        }
                                    } if (localCorrelationIDTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "correlationID"));
                                 
                                        if (localCorrelationID != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCorrelationID));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("correlationID cannot be null!!");
                                        }
                                    }
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "sysRefNumber"));
                                 
                                        if (localSysRefNumber != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSysRefNumber));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sysRefNumber cannot be null!!");
                                        }
                                    
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "senderID"));
                                 
                                        if (localSenderID != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSenderID));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("senderID cannot be null!!");
                                        }
                                     if (localConsumerTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "consumer"));
                                 
                                        if (localConsumer != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localConsumer));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("consumer cannot be null!!");
                                        }
                                    }
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "reqTimeStamp"));
                                 
                                        if (localReqTimeStamp != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReqTimeStamp));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("reqTimeStamp cannot be null!!");
                                        }
                                     if (localRepTimeStampTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "repTimeStamp"));
                                 
                                        if (localRepTimeStamp != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRepTimeStamp));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("repTimeStamp cannot be null!!");
                                        }
                                    } if (localUsernameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "username"));
                                 
                                        if (localUsername != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUsername));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("username cannot be null!!");
                                        }
                                    } if (localCredentialsTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "credentials"));
                                 
                                        if (localCredentials != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCredentials));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("credentials cannot be null!!");
                                        }
                                    } if (localReturnCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "returnCode"));
                                 
                                        if (localReturnCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReturnCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("returnCode cannot be null!!");
                                        }
                                    } if (localErrorDescriptionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "errorDescription"));
                                 
                                        if (localErrorDescription != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localErrorDescription));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("errorDescription cannot be null!!");
                                        }
                                    } if (localErrorDetailTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "errorDetail"));
                                 
                                        if (localErrorDetail != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localErrorDetail));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("errorDetail cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static HeaderType parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            HeaderType object =
                new HeaderType();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"headerType".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (HeaderType)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","usecaseID").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"usecaseID" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUsecaseID(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","serviceName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"serviceName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setServiceName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                                }
                            
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","versionNo").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"versionNo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setVersionNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                                }
                            
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","serviceAction").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"serviceAction" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setServiceAction(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","correlationID").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"correlationID" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCorrelationID(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","sysRefNumber").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"sysRefNumber" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSysRefNumber(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                                }
                            
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","senderID").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"senderID" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSenderID(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                                }
                            
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","consumer").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"consumer" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setConsumer(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","reqTimeStamp").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"reqTimeStamp" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReqTimeStamp(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                                }
                            
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","repTimeStamp").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"repTimeStamp" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRepTimeStamp(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","username").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"username" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUsername(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","credentials").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"credentials" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCredentials(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","returnCode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"returnCode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReturnCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","errorDescription").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"errorDescription" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setErrorDescription(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","errorDetail").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"errorDetail" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setErrorDetail(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class ListOfCustomer
        implements org.apache.axis2.databinding.ADBBean{
        
                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://www.adcb.com/crm/common/CustomerInformation.xsd",
                "listOfCustomer",
                "ns2");

            

                        /**
                        * field for Customer
                        * This was an Array!
                        */

                        
                                    protected Customer_type0[] localCustomer ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustomerTracker = false ;

                           public boolean isCustomerSpecified(){
                               return localCustomerTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Customer_type0[]
                           */
                           public  Customer_type0[] getCustomer(){
                               return localCustomer;
                           }

                           
                        


                               
                              /**
                               * validate the array for Customer
                               */
                              protected void validateCustomer(Customer_type0[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param Customer
                              */
                              public void setCustomer(Customer_type0[] param){
                              
                                   validateCustomer(param);

                               localCustomerTracker = param != null;
                                      
                                      this.localCustomer=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param Customer_type0
                             */
                             public void addCustomer(Customer_type0 param){
                                   if (localCustomer == null){
                                   localCustomer = new Customer_type0[]{};
                                   }

                            
                                 //update the setting tracker
                                localCustomerTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localCustomer);
                               list.add(param);
                               this.localCustomer =
                             (Customer_type0[])list.toArray(
                            new Customer_type0[list.size()]);

                             }
                             

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
               return factory.createOMElement(dataSource,MY_QNAME);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/crm/common/CustomerInformation.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":listOfCustomer",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "listOfCustomer",
                           xmlWriter);
                   }

               
                   }
                if (localCustomerTracker){
                                       if (localCustomer!=null){
                                            for (int i = 0;i < localCustomer.length;i++){
                                                if (localCustomer[i] != null){
                                                 localCustomer[i].serialize(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","customer"),
                                                           xmlWriter);
                                                } else {
                                                   
                                                        // we don't have to do any thing since minOccures is zero
                                                    
                                                }

                                            }
                                     } else {
                                        
                                               throw new org.apache.axis2.databinding.ADBException("customer cannot be null!!");
                                        
                                    }
                                 }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/crm/common/CustomerInformation.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localCustomerTracker){
                             if (localCustomer!=null) {
                                 for (int i = 0;i < localCustomer.length;i++){

                                    if (localCustomer[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                          "customer"));
                                         elementList.add(localCustomer[i]);
                                    } else {
                                        
                                                // nothing to do
                                            
                                    }

                                 }
                             } else {
                                 
                                        throw new org.apache.axis2.databinding.ADBException("customer cannot be null!!");
                                    
                             }

                        }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static ListOfCustomer parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            ListOfCustomer object =
                new ListOfCustomer();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"listOfCustomer".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (ListOfCustomer)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                        java.util.ArrayList list1 = new java.util.ArrayList();
                    
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","customer").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    list1.add(Customer_type0.Factory.parse(reader));
                                                                
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone1 = false;
                                                        while(!loopDone1){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone1 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","customer").equals(reader.getName())){
                                                                    list1.add(Customer_type0.Factory.parse(reader));
                                                                        
                                                                }else{
                                                                    loopDone1 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array
                                                        
                                                        object.setCustomer((Customer_type0[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                Customer_type0.class,
                                                                list1));
                                                            
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class GetCustomerInformationReq_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = GetCustomerInformationReq_type0
                Namespace URI = http://www.adcb.com/crm/inq/GetCustomerInformation.xsd
                Namespace Prefix = ns3
                */
            

                        /**
                        * field for ListOfCustomer
                        */

                        
                                    protected ListOfCustomer_type0E localListOfCustomer ;
                                

                           /**
                           * Auto generated getter method
                           * @return ListOfCustomer_type0E
                           */
                           public  ListOfCustomer_type0E getListOfCustomer(){
                               return localListOfCustomer;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ListOfCustomer
                               */
                               public void setListOfCustomer(ListOfCustomer_type0E param){
                            
                                            this.localListOfCustomer=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/crm/inq/GetCustomerInformation.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":GetCustomerInformationReq_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "GetCustomerInformationReq_type0",
                           xmlWriter);
                   }

               
                   }
               
                                            if (localListOfCustomer==null){
                                                 throw new org.apache.axis2.databinding.ADBException("ListOfCustomer cannot be null!!");
                                            }
                                           localListOfCustomer.serialize(new javax.xml.namespace.QName("http://www.adcb.com/crm/inq/GetCustomerInformation.xsd","ListOfCustomer"),
                                               xmlWriter);
                                        
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/crm/inq/GetCustomerInformation.xsd")){
                return "ns3";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/inq/GetCustomerInformation.xsd",
                                                                      "ListOfCustomer"));
                            
                            
                                    if (localListOfCustomer==null){
                                         throw new org.apache.axis2.databinding.ADBException("ListOfCustomer cannot be null!!");
                                    }
                                    elementList.add(localListOfCustomer);
                                

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static GetCustomerInformationReq_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            GetCustomerInformationReq_type0 object =
                new GetCustomerInformationReq_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"GetCustomerInformationReq_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (GetCustomerInformationReq_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/inq/GetCustomerInformation.xsd","ListOfCustomer").equals(reader.getName())){
                                
                                                object.setListOfCustomer(ListOfCustomer_type0E.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                                }
                              
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class Accounts_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = accounts_type0
                Namespace URI = http://www.adcb.com/crm/common/CustomerInformation.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for Type
                        */

                        
                                    protected java.lang.String localType ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTypeTracker = false ;

                           public boolean isTypeSpecified(){
                               return localTypeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getType(){
                               return localType;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Type
                               */
                               public void setType(java.lang.String param){
                            localTypeTracker = param != null;
                                   
                                            this.localType=param;
                                    

                               }
                            

                        /**
                        * field for AccountNo
                        */

                        
                                    protected java.lang.String localAccountNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAccountNoTracker = false ;

                           public boolean isAccountNoSpecified(){
                               return localAccountNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAccountNo(){
                               return localAccountNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AccountNo
                               */
                               public void setAccountNo(java.lang.String param){
                            localAccountNoTracker = param != null;
                                   
                                            this.localAccountNo=param;
                                    

                               }
                            

                        /**
                        * field for ProductCode
                        */

                        
                                    protected java.lang.String localProductCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localProductCodeTracker = false ;

                           public boolean isProductCodeSpecified(){
                               return localProductCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getProductCode(){
                               return localProductCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ProductCode
                               */
                               public void setProductCode(java.lang.String param){
                            localProductCodeTracker = param != null;
                                   
                                            this.localProductCode=param;
                                    

                               }
                            

                        /**
                        * field for ProductName
                        */

                        
                                    protected java.lang.String localProductName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localProductNameTracker = false ;

                           public boolean isProductNameSpecified(){
                               return localProductNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getProductName(){
                               return localProductName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ProductName
                               */
                               public void setProductName(java.lang.String param){
                            localProductNameTracker = param != null;
                                   
                                            this.localProductName=param;
                                    

                               }
                            

                        /**
                        * field for CurrencyCode
                        */

                        
                                    protected java.lang.String localCurrencyCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCurrencyCodeTracker = false ;

                           public boolean isCurrencyCodeSpecified(){
                               return localCurrencyCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCurrencyCode(){
                               return localCurrencyCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CurrencyCode
                               */
                               public void setCurrencyCode(java.lang.String param){
                            localCurrencyCodeTracker = param != null;
                                   
                                            this.localCurrencyCode=param;
                                    

                               }
                            

                        /**
                        * field for CurrencyName
                        */

                        
                                    protected java.lang.String localCurrencyName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCurrencyNameTracker = false ;

                           public boolean isCurrencyNameSpecified(){
                               return localCurrencyNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCurrencyName(){
                               return localCurrencyName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CurrencyName
                               */
                               public void setCurrencyName(java.lang.String param){
                            localCurrencyNameTracker = param != null;
                                   
                                            this.localCurrencyName=param;
                                    

                               }
                            

                        /**
                        * field for BranchCode
                        */

                        
                                    protected java.lang.String localBranchCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBranchCodeTracker = false ;

                           public boolean isBranchCodeSpecified(){
                               return localBranchCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBranchCode(){
                               return localBranchCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BranchCode
                               */
                               public void setBranchCode(java.lang.String param){
                            localBranchCodeTracker = param != null;
                                   
                                            this.localBranchCode=param;
                                    

                               }
                            

                        /**
                        * field for BranchName
                        */

                        
                                    protected java.lang.String localBranchName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBranchNameTracker = false ;

                           public boolean isBranchNameSpecified(){
                               return localBranchNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBranchName(){
                               return localBranchName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BranchName
                               */
                               public void setBranchName(java.lang.String param){
                            localBranchNameTracker = param != null;
                                   
                                            this.localBranchName=param;
                                    

                               }
                            

                        /**
                        * field for AcctStatus
                        */

                        
                                    protected java.lang.String localAcctStatus ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAcctStatusTracker = false ;

                           public boolean isAcctStatusSpecified(){
                               return localAcctStatusTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAcctStatus(){
                               return localAcctStatus;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AcctStatus
                               */
                               public void setAcctStatus(java.lang.String param){
                            localAcctStatusTracker = param != null;
                                   
                                            this.localAcctStatus=param;
                                    

                               }
                            

                        /**
                        * field for AcctBalance
                        */

                        
                                    protected java.lang.String localAcctBalance ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAcctBalanceTracker = false ;

                           public boolean isAcctBalanceSpecified(){
                               return localAcctBalanceTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAcctBalance(){
                               return localAcctBalance;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AcctBalance
                               */
                               public void setAcctBalance(java.lang.String param){
                            localAcctBalanceTracker = param != null;
                                   
                                            this.localAcctBalance=param;
                                    

                               }
                            

                        /**
                        * field for SIFlag
                        */

                        
                                    protected java.lang.String localSIFlag ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSIFlagTracker = false ;

                           public boolean isSIFlagSpecified(){
                               return localSIFlagTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSIFlag(){
                               return localSIFlag;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SIFlag
                               */
                               public void setSIFlag(java.lang.String param){
                            localSIFlagTracker = param != null;
                                   
                                            this.localSIFlag=param;
                                    

                               }
                            

                        /**
                        * field for SweepInFlag
                        */

                        
                                    protected java.lang.String localSweepInFlag ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSweepInFlagTracker = false ;

                           public boolean isSweepInFlagSpecified(){
                               return localSweepInFlagTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSweepInFlag(){
                               return localSweepInFlag;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SweepInFlag
                               */
                               public void setSweepInFlag(java.lang.String param){
                            localSweepInFlagTracker = param != null;
                                   
                                            this.localSweepInFlag=param;
                                    

                               }
                            

                        /**
                        * field for SweepOutFlag
                        */

                        
                                    protected java.lang.String localSweepOutFlag ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSweepOutFlagTracker = false ;

                           public boolean isSweepOutFlagSpecified(){
                               return localSweepOutFlagTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSweepOutFlag(){
                               return localSweepOutFlag;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SweepOutFlag
                               */
                               public void setSweepOutFlag(java.lang.String param){
                            localSweepOutFlagTracker = param != null;
                                   
                                            this.localSweepOutFlag=param;
                                    

                               }
                            

                        /**
                        * field for HoldFlag
                        */

                        
                                    protected java.lang.String localHoldFlag ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHoldFlagTracker = false ;

                           public boolean isHoldFlagSpecified(){
                               return localHoldFlagTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHoldFlag(){
                               return localHoldFlag;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HoldFlag
                               */
                               public void setHoldFlag(java.lang.String param){
                            localHoldFlagTracker = param != null;
                                   
                                            this.localHoldFlag=param;
                                    

                               }
                            

                        /**
                        * field for AccountIslamicFlag
                        */

                        
                                    protected java.lang.String localAccountIslamicFlag ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAccountIslamicFlagTracker = false ;

                           public boolean isAccountIslamicFlagSpecified(){
                               return localAccountIslamicFlagTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAccountIslamicFlag(){
                               return localAccountIslamicFlag;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AccountIslamicFlag
                               */
                               public void setAccountIslamicFlag(java.lang.String param){
                            localAccountIslamicFlagTracker = param != null;
                                   
                                            this.localAccountIslamicFlag=param;
                                    

                               }
                            

                        /**
                        * field for MortgageFlag
                        */

                        
                                    protected java.lang.String localMortgageFlag ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMortgageFlagTracker = false ;

                           public boolean isMortgageFlagSpecified(){
                               return localMortgageFlagTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMortgageFlag(){
                               return localMortgageFlag;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MortgageFlag
                               */
                               public void setMortgageFlag(java.lang.String param){
                            localMortgageFlagTracker = param != null;
                                   
                                            this.localMortgageFlag=param;
                                    

                               }
                            

                        /**
                        * field for NonFundedAcctType
                        */

                        
                                    protected java.lang.String localNonFundedAcctType ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNonFundedAcctTypeTracker = false ;

                           public boolean isNonFundedAcctTypeSpecified(){
                               return localNonFundedAcctTypeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNonFundedAcctType(){
                               return localNonFundedAcctType;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NonFundedAcctType
                               */
                               public void setNonFundedAcctType(java.lang.String param){
                            localNonFundedAcctTypeTracker = param != null;
                                   
                                            this.localNonFundedAcctType=param;
                                    

                               }
                            

                        /**
                        * field for ExpiryDate
                        */

                        
                                    protected java.lang.String localExpiryDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localExpiryDateTracker = false ;

                           public boolean isExpiryDateSpecified(){
                               return localExpiryDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getExpiryDate(){
                               return localExpiryDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ExpiryDate
                               */
                               public void setExpiryDate(java.lang.String param){
                            localExpiryDateTracker = param != null;
                                   
                                            this.localExpiryDate=param;
                                    

                               }
                            

                        /**
                        * field for PrvEODBal
                        */

                        
                                    protected java.lang.String localPrvEODBal ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPrvEODBalTracker = false ;

                           public boolean isPrvEODBalSpecified(){
                               return localPrvEODBalTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPrvEODBal(){
                               return localPrvEODBal;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PrvEODBal
                               */
                               public void setPrvEODBal(java.lang.String param){
                            localPrvEODBalTracker = param != null;
                                   
                                            this.localPrvEODBal=param;
                                    

                               }
                            

                        /**
                        * field for NetAvalWithdrawl
                        */

                        
                                    protected java.lang.String localNetAvalWithdrawl ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNetAvalWithdrawlTracker = false ;

                           public boolean isNetAvalWithdrawlSpecified(){
                               return localNetAvalWithdrawlTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNetAvalWithdrawl(){
                               return localNetAvalWithdrawl;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NetAvalWithdrawl
                               */
                               public void setNetAvalWithdrawl(java.lang.String param){
                            localNetAvalWithdrawlTracker = param != null;
                                   
                                            this.localNetAvalWithdrawl=param;
                                    

                               }
                            

                        /**
                        * field for UnClearedBal
                        */

                        
                                    protected java.lang.String localUnClearedBal ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUnClearedBalTracker = false ;

                           public boolean isUnClearedBalSpecified(){
                               return localUnClearedBalTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUnClearedBal(){
                               return localUnClearedBal;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param UnClearedBal
                               */
                               public void setUnClearedBal(java.lang.String param){
                            localUnClearedBalTracker = param != null;
                                   
                                            this.localUnClearedBal=param;
                                    

                               }
                            

                        /**
                        * field for AmountOnHold
                        */

                        
                                    protected java.lang.String localAmountOnHold ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAmountOnHoldTracker = false ;

                           public boolean isAmountOnHoldSpecified(){
                               return localAmountOnHoldTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAmountOnHold(){
                               return localAmountOnHold;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AmountOnHold
                               */
                               public void setAmountOnHold(java.lang.String param){
                            localAmountOnHoldTracker = param != null;
                                   
                                            this.localAmountOnHold=param;
                                    

                               }
                            

                        /**
                        * field for TotalODLimitAmt
                        */

                        
                                    protected java.lang.String localTotalODLimitAmt ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTotalODLimitAmtTracker = false ;

                           public boolean isTotalODLimitAmtSpecified(){
                               return localTotalODLimitAmtTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTotalODLimitAmt(){
                               return localTotalODLimitAmt;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TotalODLimitAmt
                               */
                               public void setTotalODLimitAmt(java.lang.String param){
                            localTotalODLimitAmtTracker = param != null;
                                   
                                            this.localTotalODLimitAmt=param;
                                    

                               }
                            

                        /**
                        * field for TotalODAmount
                        */

                        
                                    protected java.lang.String localTotalODAmount ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTotalODAmountTracker = false ;

                           public boolean isTotalODAmountSpecified(){
                               return localTotalODAmountTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTotalODAmount(){
                               return localTotalODAmount;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TotalODAmount
                               */
                               public void setTotalODAmount(java.lang.String param){
                            localTotalODAmountTracker = param != null;
                                   
                                            this.localTotalODAmount=param;
                                    

                               }
                            

                        /**
                        * field for LoanAmount
                        */

                        
                                    protected java.lang.String localLoanAmount ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLoanAmountTracker = false ;

                           public boolean isLoanAmountSpecified(){
                               return localLoanAmountTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLoanAmount(){
                               return localLoanAmount;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LoanAmount
                               */
                               public void setLoanAmount(java.lang.String param){
                            localLoanAmountTracker = param != null;
                                   
                                            this.localLoanAmount=param;
                                    

                               }
                            

                        /**
                        * field for BehaviouralScore
                        */

                        
                                    protected java.lang.String localBehaviouralScore ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBehaviouralScoreTracker = false ;

                           public boolean isBehaviouralScoreSpecified(){
                               return localBehaviouralScoreTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBehaviouralScore(){
                               return localBehaviouralScore;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BehaviouralScore
                               */
                               public void setBehaviouralScore(java.lang.String param){
                            localBehaviouralScoreTracker = param != null;
                                   
                                            this.localBehaviouralScore=param;
                                    

                               }
                            

                        /**
                        * field for LoanTenor
                        */

                        
                                    protected java.lang.String localLoanTenor ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLoanTenorTracker = false ;

                           public boolean isLoanTenorSpecified(){
                               return localLoanTenorTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLoanTenor(){
                               return localLoanTenor;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LoanTenor
                               */
                               public void setLoanTenor(java.lang.String param){
                            localLoanTenorTracker = param != null;
                                   
                                            this.localLoanTenor=param;
                                    

                               }
                            

                        /**
                        * field for LoanInterestRate
                        */

                        
                                    protected java.lang.String localLoanInterestRate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLoanInterestRateTracker = false ;

                           public boolean isLoanInterestRateSpecified(){
                               return localLoanInterestRateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLoanInterestRate(){
                               return localLoanInterestRate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LoanInterestRate
                               */
                               public void setLoanInterestRate(java.lang.String param){
                            localLoanInterestRateTracker = param != null;
                                   
                                            this.localLoanInterestRate=param;
                                    

                               }
                            

                        /**
                        * field for DisbursalDate
                        */

                        
                                    protected java.lang.String localDisbursalDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDisbursalDateTracker = false ;

                           public boolean isDisbursalDateSpecified(){
                               return localDisbursalDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDisbursalDate(){
                               return localDisbursalDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DisbursalDate
                               */
                               public void setDisbursalDate(java.lang.String param){
                            localDisbursalDateTracker = param != null;
                                   
                                            this.localDisbursalDate=param;
                                    

                               }
                            

                        /**
                        * field for EMIAmt
                        */

                        
                                    protected java.lang.String localEMIAmt ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEMIAmtTracker = false ;

                           public boolean isEMIAmtSpecified(){
                               return localEMIAmtTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEMIAmt(){
                               return localEMIAmt;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EMIAmt
                               */
                               public void setEMIAmt(java.lang.String param){
                            localEMIAmtTracker = param != null;
                                   
                                            this.localEMIAmt=param;
                                    

                               }
                            

                        /**
                        * field for NextEMIDate
                        */

                        
                                    protected java.lang.String localNextEMIDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNextEMIDateTracker = false ;

                           public boolean isNextEMIDateSpecified(){
                               return localNextEMIDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNextEMIDate(){
                               return localNextEMIDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NextEMIDate
                               */
                               public void setNextEMIDate(java.lang.String param){
                            localNextEMIDateTracker = param != null;
                                   
                                            this.localNextEMIDate=param;
                                    

                               }
                            

                        /**
                        * field for NoOfDaysPastDue
                        */

                        
                                    protected java.lang.String localNoOfDaysPastDue ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNoOfDaysPastDueTracker = false ;

                           public boolean isNoOfDaysPastDueSpecified(){
                               return localNoOfDaysPastDueTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNoOfDaysPastDue(){
                               return localNoOfDaysPastDue;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NoOfDaysPastDue
                               */
                               public void setNoOfDaysPastDue(java.lang.String param){
                            localNoOfDaysPastDueTracker = param != null;
                                   
                                            this.localNoOfDaysPastDue=param;
                                    

                               }
                            

                        /**
                        * field for CurrentSettlementAccount
                        */

                        
                                    protected java.lang.String localCurrentSettlementAccount ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCurrentSettlementAccountTracker = false ;

                           public boolean isCurrentSettlementAccountSpecified(){
                               return localCurrentSettlementAccountTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCurrentSettlementAccount(){
                               return localCurrentSettlementAccount;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CurrentSettlementAccount
                               */
                               public void setCurrentSettlementAccount(java.lang.String param){
                            localCurrentSettlementAccountTracker = param != null;
                                   
                                            this.localCurrentSettlementAccount=param;
                                    

                               }
                            

                        /**
                        * field for CurrentRepaymentMode
                        */

                        
                                    protected java.lang.String localCurrentRepaymentMode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCurrentRepaymentModeTracker = false ;

                           public boolean isCurrentRepaymentModeSpecified(){
                               return localCurrentRepaymentModeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCurrentRepaymentMode(){
                               return localCurrentRepaymentMode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CurrentRepaymentMode
                               */
                               public void setCurrentRepaymentMode(java.lang.String param){
                            localCurrentRepaymentModeTracker = param != null;
                                   
                                            this.localCurrentRepaymentMode=param;
                                    

                               }
                            

                        /**
                        * field for UnitPrice
                        */

                        
                                    protected java.lang.String localUnitPrice ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUnitPriceTracker = false ;

                           public boolean isUnitPriceSpecified(){
                               return localUnitPriceTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUnitPrice(){
                               return localUnitPrice;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param UnitPrice
                               */
                               public void setUnitPrice(java.lang.String param){
                            localUnitPriceTracker = param != null;
                                   
                                            this.localUnitPrice=param;
                                    

                               }
                            

                        /**
                        * field for NoofUnits
                        */

                        
                                    protected java.lang.String localNoofUnits ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNoofUnitsTracker = false ;

                           public boolean isNoofUnitsSpecified(){
                               return localNoofUnitsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNoofUnits(){
                               return localNoofUnits;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NoofUnits
                               */
                               public void setNoofUnits(java.lang.String param){
                            localNoofUnitsTracker = param != null;
                                   
                                            this.localNoofUnits=param;
                                    

                               }
                            

                        /**
                        * field for PurchaseValue
                        */

                        
                                    protected java.lang.String localPurchaseValue ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPurchaseValueTracker = false ;

                           public boolean isPurchaseValueSpecified(){
                               return localPurchaseValueTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPurchaseValue(){
                               return localPurchaseValue;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PurchaseValue
                               */
                               public void setPurchaseValue(java.lang.String param){
                            localPurchaseValueTracker = param != null;
                                   
                                            this.localPurchaseValue=param;
                                    

                               }
                            

                        /**
                        * field for NetAssetValue
                        */

                        
                                    protected java.lang.String localNetAssetValue ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNetAssetValueTracker = false ;

                           public boolean isNetAssetValueSpecified(){
                               return localNetAssetValueTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNetAssetValue(){
                               return localNetAssetValue;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NetAssetValue
                               */
                               public void setNetAssetValue(java.lang.String param){
                            localNetAssetValueTracker = param != null;
                                   
                                            this.localNetAssetValue=param;
                                    

                               }
                            

                        /**
                        * field for UnrealizedGainLoss
                        */

                        
                                    protected java.lang.String localUnrealizedGainLoss ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUnrealizedGainLossTracker = false ;

                           public boolean isUnrealizedGainLossSpecified(){
                               return localUnrealizedGainLossTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUnrealizedGainLoss(){
                               return localUnrealizedGainLoss;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param UnrealizedGainLoss
                               */
                               public void setUnrealizedGainLoss(java.lang.String param){
                            localUnrealizedGainLossTracker = param != null;
                                   
                                            this.localUnrealizedGainLoss=param;
                                    

                               }
                            

                        /**
                        * field for Leverage
                        */

                        
                                    protected java.lang.String localLeverage ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLeverageTracker = false ;

                           public boolean isLeverageSpecified(){
                               return localLeverageTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLeverage(){
                               return localLeverage;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Leverage
                               */
                               public void setLeverage(java.lang.String param){
                            localLeverageTracker = param != null;
                                   
                                            this.localLeverage=param;
                                    

                               }
                            

                        /**
                        * field for DepositNo
                        */

                        
                                    protected java.lang.String localDepositNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDepositNoTracker = false ;

                           public boolean isDepositNoSpecified(){
                               return localDepositNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDepositNo(){
                               return localDepositNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DepositNo
                               */
                               public void setDepositNo(java.lang.String param){
                            localDepositNoTracker = param != null;
                                   
                                            this.localDepositNo=param;
                                    

                               }
                            

                        /**
                        * field for MaturityAmount
                        */

                        
                                    protected java.lang.String localMaturityAmount ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMaturityAmountTracker = false ;

                           public boolean isMaturityAmountSpecified(){
                               return localMaturityAmountTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMaturityAmount(){
                               return localMaturityAmount;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MaturityAmount
                               */
                               public void setMaturityAmount(java.lang.String param){
                            localMaturityAmountTracker = param != null;
                                   
                                            this.localMaturityAmount=param;
                                    

                               }
                            

                        /**
                        * field for TenorDays
                        */

                        
                                    protected java.lang.String localTenorDays ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTenorDaysTracker = false ;

                           public boolean isTenorDaysSpecified(){
                               return localTenorDaysTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTenorDays(){
                               return localTenorDays;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TenorDays
                               */
                               public void setTenorDays(java.lang.String param){
                            localTenorDaysTracker = param != null;
                                   
                                            this.localTenorDays=param;
                                    

                               }
                            

                        /**
                        * field for TenorMonths
                        */

                        
                                    protected java.lang.String localTenorMonths ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTenorMonthsTracker = false ;

                           public boolean isTenorMonthsSpecified(){
                               return localTenorMonthsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTenorMonths(){
                               return localTenorMonths;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TenorMonths
                               */
                               public void setTenorMonths(java.lang.String param){
                            localTenorMonthsTracker = param != null;
                                   
                                            this.localTenorMonths=param;
                                    

                               }
                            

                        /**
                        * field for TenorYears
                        */

                        
                                    protected java.lang.String localTenorYears ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTenorYearsTracker = false ;

                           public boolean isTenorYearsSpecified(){
                               return localTenorYearsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTenorYears(){
                               return localTenorYears;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TenorYears
                               */
                               public void setTenorYears(java.lang.String param){
                            localTenorYearsTracker = param != null;
                                   
                                            this.localTenorYears=param;
                                    

                               }
                            

                        /**
                        * field for FlgATM
                        */

                        
                                    protected java.lang.String localFlgATM ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFlgATMTracker = false ;

                           public boolean isFlgATMSpecified(){
                               return localFlgATMTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFlgATM(){
                               return localFlgATM;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FlgATM
                               */
                               public void setFlgATM(java.lang.String param){
                            localFlgATMTracker = param != null;
                                   
                                            this.localFlgATM=param;
                                    

                               }
                            

                        /**
                        * field for FlgTeleBanking
                        */

                        
                                    protected java.lang.String localFlgTeleBanking ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFlgTeleBankingTracker = false ;

                           public boolean isFlgTeleBankingSpecified(){
                               return localFlgTeleBankingTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFlgTeleBanking(){
                               return localFlgTeleBanking;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FlgTeleBanking
                               */
                               public void setFlgTeleBanking(java.lang.String param){
                            localFlgTeleBankingTracker = param != null;
                                   
                                            this.localFlgTeleBanking=param;
                                    

                               }
                            

                        /**
                        * field for FlgPOS
                        */

                        
                                    protected java.lang.String localFlgPOS ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFlgPOSTracker = false ;

                           public boolean isFlgPOSSpecified(){
                               return localFlgPOSTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFlgPOS(){
                               return localFlgPOS;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FlgPOS
                               */
                               public void setFlgPOS(java.lang.String param){
                            localFlgPOSTracker = param != null;
                                   
                                            this.localFlgPOS=param;
                                    

                               }
                            

                        /**
                        * field for FlgInternet
                        */

                        
                                    protected java.lang.String localFlgInternet ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFlgInternetTracker = false ;

                           public boolean isFlgInternetSpecified(){
                               return localFlgInternetTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFlgInternet(){
                               return localFlgInternet;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FlgInternet
                               */
                               public void setFlgInternet(java.lang.String param){
                            localFlgInternetTracker = param != null;
                                   
                                            this.localFlgInternet=param;
                                    

                               }
                            

                        /**
                        * field for DepositEffectiveDate
                        */

                        
                                    protected java.lang.String localDepositEffectiveDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDepositEffectiveDateTracker = false ;

                           public boolean isDepositEffectiveDateSpecified(){
                               return localDepositEffectiveDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDepositEffectiveDate(){
                               return localDepositEffectiveDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DepositEffectiveDate
                               */
                               public void setDepositEffectiveDate(java.lang.String param){
                            localDepositEffectiveDateTracker = param != null;
                                   
                                            this.localDepositEffectiveDate=param;
                                    

                               }
                            

                        /**
                        * field for MaturityDate
                        */

                        
                                    protected java.lang.String localMaturityDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMaturityDateTracker = false ;

                           public boolean isMaturityDateSpecified(){
                               return localMaturityDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMaturityDate(){
                               return localMaturityDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MaturityDate
                               */
                               public void setMaturityDate(java.lang.String param){
                            localMaturityDateTracker = param != null;
                                   
                                            this.localMaturityDate=param;
                                    

                               }
                            

                        /**
                        * field for AccountTitle
                        */

                        
                                    protected java.lang.String localAccountTitle ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAccountTitleTracker = false ;

                           public boolean isAccountTitleSpecified(){
                               return localAccountTitleTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAccountTitle(){
                               return localAccountTitle;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AccountTitle
                               */
                               public void setAccountTitle(java.lang.String param){
                            localAccountTitleTracker = param != null;
                                   
                                            this.localAccountTitle=param;
                                    

                               }
                            

                        /**
                        * field for AcctType
                        */

                        
                                    protected java.lang.String localAcctType ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAcctTypeTracker = false ;

                           public boolean isAcctTypeSpecified(){
                               return localAcctTypeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAcctType(){
                               return localAcctType;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AcctType
                               */
                               public void setAcctType(java.lang.String param){
                            localAcctTypeTracker = param != null;
                                   
                                            this.localAcctType=param;
                                    

                               }
                            

                        /**
                        * field for LCLimitOutstandingAmt
                        */

                        
                                    protected java.lang.String localLCLimitOutstandingAmt ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLCLimitOutstandingAmtTracker = false ;

                           public boolean isLCLimitOutstandingAmtSpecified(){
                               return localLCLimitOutstandingAmtTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLCLimitOutstandingAmt(){
                               return localLCLimitOutstandingAmt;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LCLimitOutstandingAmt
                               */
                               public void setLCLimitOutstandingAmt(java.lang.String param){
                            localLCLimitOutstandingAmtTracker = param != null;
                                   
                                            this.localLCLimitOutstandingAmt=param;
                                    

                               }
                            

                        /**
                        * field for LCLineCode
                        */

                        
                                    protected java.lang.String localLCLineCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLCLineCodeTracker = false ;

                           public boolean isLCLineCodeSpecified(){
                               return localLCLineCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLCLineCode(){
                               return localLCLineCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LCLineCode
                               */
                               public void setLCLineCode(java.lang.String param){
                            localLCLineCodeTracker = param != null;
                                   
                                            this.localLCLineCode=param;
                                    

                               }
                            

                        /**
                        * field for LCSubType
                        */

                        
                                    protected java.lang.String localLCSubType ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLCSubTypeTracker = false ;

                           public boolean isLCSubTypeSpecified(){
                               return localLCSubTypeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLCSubType(){
                               return localLCSubType;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LCSubType
                               */
                               public void setLCSubType(java.lang.String param){
                            localLCSubTypeTracker = param != null;
                                   
                                            this.localLCSubType=param;
                                    

                               }
                            

                        /**
                        * field for LCBeneficiaryName
                        */

                        
                                    protected java.lang.String localLCBeneficiaryName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLCBeneficiaryNameTracker = false ;

                           public boolean isLCBeneficiaryNameSpecified(){
                               return localLCBeneficiaryNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLCBeneficiaryName(){
                               return localLCBeneficiaryName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LCBeneficiaryName
                               */
                               public void setLCBeneficiaryName(java.lang.String param){
                            localLCBeneficiaryNameTracker = param != null;
                                   
                                            this.localLCBeneficiaryName=param;
                                    

                               }
                            

                        /**
                        * field for LCChargesCollectedAmt
                        */

                        
                                    protected java.lang.String localLCChargesCollectedAmt ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLCChargesCollectedAmtTracker = false ;

                           public boolean isLCChargesCollectedAmtSpecified(){
                               return localLCChargesCollectedAmtTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLCChargesCollectedAmt(){
                               return localLCChargesCollectedAmt;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LCChargesCollectedAmt
                               */
                               public void setLCChargesCollectedAmt(java.lang.String param){
                            localLCChargesCollectedAmtTracker = param != null;
                                   
                                            this.localLCChargesCollectedAmt=param;
                                    

                               }
                            

                        /**
                        * field for LCDeferredAmt
                        */

                        
                                    protected java.lang.String localLCDeferredAmt ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLCDeferredAmtTracker = false ;

                           public boolean isLCDeferredAmtSpecified(){
                               return localLCDeferredAmtTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLCDeferredAmt(){
                               return localLCDeferredAmt;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LCDeferredAmt
                               */
                               public void setLCDeferredAmt(java.lang.String param){
                            localLCDeferredAmtTracker = param != null;
                                   
                                            this.localLCDeferredAmt=param;
                                    

                               }
                            

                        /**
                        * field for LCTenor
                        */

                        
                                    protected java.lang.String localLCTenor ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLCTenorTracker = false ;

                           public boolean isLCTenorSpecified(){
                               return localLCTenorTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLCTenor(){
                               return localLCTenor;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LCTenor
                               */
                               public void setLCTenor(java.lang.String param){
                            localLCTenorTracker = param != null;
                                   
                                            this.localLCTenor=param;
                                    

                               }
                            

                        /**
                        * field for LCDateOpen
                        */

                        
                                    protected java.lang.String localLCDateOpen ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLCDateOpenTracker = false ;

                           public boolean isLCDateOpenSpecified(){
                               return localLCDateOpenTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLCDateOpen(){
                               return localLCDateOpen;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LCDateOpen
                               */
                               public void setLCDateOpen(java.lang.String param){
                            localLCDateOpenTracker = param != null;
                                   
                                            this.localLCDateOpen=param;
                                    

                               }
                            

                        /**
                        * field for LGLimitOutstandingAmt
                        */

                        
                                    protected java.lang.String localLGLimitOutstandingAmt ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLGLimitOutstandingAmtTracker = false ;

                           public boolean isLGLimitOutstandingAmtSpecified(){
                               return localLGLimitOutstandingAmtTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLGLimitOutstandingAmt(){
                               return localLGLimitOutstandingAmt;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LGLimitOutstandingAmt
                               */
                               public void setLGLimitOutstandingAmt(java.lang.String param){
                            localLGLimitOutstandingAmtTracker = param != null;
                                   
                                            this.localLGLimitOutstandingAmt=param;
                                    

                               }
                            

                        /**
                        * field for LGLineCode
                        */

                        
                                    protected java.lang.String localLGLineCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLGLineCodeTracker = false ;

                           public boolean isLGLineCodeSpecified(){
                               return localLGLineCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLGLineCode(){
                               return localLGLineCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LGLineCode
                               */
                               public void setLGLineCode(java.lang.String param){
                            localLGLineCodeTracker = param != null;
                                   
                                            this.localLGLineCode=param;
                                    

                               }
                            

                        /**
                        * field for LGSubType
                        */

                        
                                    protected java.lang.String localLGSubType ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLGSubTypeTracker = false ;

                           public boolean isLGSubTypeSpecified(){
                               return localLGSubTypeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLGSubType(){
                               return localLGSubType;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LGSubType
                               */
                               public void setLGSubType(java.lang.String param){
                            localLGSubTypeTracker = param != null;
                                   
                                            this.localLGSubType=param;
                                    

                               }
                            

                        /**
                        * field for LGBeneficiaryName
                        */

                        
                                    protected java.lang.String localLGBeneficiaryName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLGBeneficiaryNameTracker = false ;

                           public boolean isLGBeneficiaryNameSpecified(){
                               return localLGBeneficiaryNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLGBeneficiaryName(){
                               return localLGBeneficiaryName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LGBeneficiaryName
                               */
                               public void setLGBeneficiaryName(java.lang.String param){
                            localLGBeneficiaryNameTracker = param != null;
                                   
                                            this.localLGBeneficiaryName=param;
                                    

                               }
                            

                        /**
                        * field for LGChargesCollectedAmt
                        */

                        
                                    protected java.lang.String localLGChargesCollectedAmt ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLGChargesCollectedAmtTracker = false ;

                           public boolean isLGChargesCollectedAmtSpecified(){
                               return localLGChargesCollectedAmtTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLGChargesCollectedAmt(){
                               return localLGChargesCollectedAmt;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LGChargesCollectedAmt
                               */
                               public void setLGChargesCollectedAmt(java.lang.String param){
                            localLGChargesCollectedAmtTracker = param != null;
                                   
                                            this.localLGChargesCollectedAmt=param;
                                    

                               }
                            

                        /**
                        * field for LGDeferredAmt
                        */

                        
                                    protected java.lang.String localLGDeferredAmt ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLGDeferredAmtTracker = false ;

                           public boolean isLGDeferredAmtSpecified(){
                               return localLGDeferredAmtTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLGDeferredAmt(){
                               return localLGDeferredAmt;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LGDeferredAmt
                               */
                               public void setLGDeferredAmt(java.lang.String param){
                            localLGDeferredAmtTracker = param != null;
                                   
                                            this.localLGDeferredAmt=param;
                                    

                               }
                            

                        /**
                        * field for LGTenor
                        */

                        
                                    protected java.lang.String localLGTenor ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLGTenorTracker = false ;

                           public boolean isLGTenorSpecified(){
                               return localLGTenorTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLGTenor(){
                               return localLGTenor;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LGTenor
                               */
                               public void setLGTenor(java.lang.String param){
                            localLGTenorTracker = param != null;
                                   
                                            this.localLGTenor=param;
                                    

                               }
                            

                        /**
                        * field for LGDateOpen
                        */

                        
                                    protected java.lang.String localLGDateOpen ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLGDateOpenTracker = false ;

                           public boolean isLGDateOpenSpecified(){
                               return localLGDateOpenTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLGDateOpen(){
                               return localLGDateOpen;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LGDateOpen
                               */
                               public void setLGDateOpen(java.lang.String param){
                            localLGDateOpenTracker = param != null;
                                   
                                            this.localLGDateOpen=param;
                                    

                               }
                            

                        /**
                        * field for PrvEODBalLcy
                        */

                        
                                    protected java.lang.String localPrvEODBalLcy ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPrvEODBalLcyTracker = false ;

                           public boolean isPrvEODBalLcySpecified(){
                               return localPrvEODBalLcyTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPrvEODBalLcy(){
                               return localPrvEODBalLcy;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PrvEODBalLcy
                               */
                               public void setPrvEODBalLcy(java.lang.String param){
                            localPrvEODBalLcyTracker = param != null;
                                   
                                            this.localPrvEODBalLcy=param;
                                    

                               }
                            

                        /**
                        * field for NetAvalWithdrawlLcy
                        */

                        
                                    protected java.lang.String localNetAvalWithdrawlLcy ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNetAvalWithdrawlLcyTracker = false ;

                           public boolean isNetAvalWithdrawlLcySpecified(){
                               return localNetAvalWithdrawlLcyTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNetAvalWithdrawlLcy(){
                               return localNetAvalWithdrawlLcy;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NetAvalWithdrawlLcy
                               */
                               public void setNetAvalWithdrawlLcy(java.lang.String param){
                            localNetAvalWithdrawlLcyTracker = param != null;
                                   
                                            this.localNetAvalWithdrawlLcy=param;
                                    

                               }
                            

                        /**
                        * field for TotalODLimitAmtLcy
                        */

                        
                                    protected java.lang.String localTotalODLimitAmtLcy ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTotalODLimitAmtLcyTracker = false ;

                           public boolean isTotalODLimitAmtLcySpecified(){
                               return localTotalODLimitAmtLcyTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTotalODLimitAmtLcy(){
                               return localTotalODLimitAmtLcy;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TotalODLimitAmtLcy
                               */
                               public void setTotalODLimitAmtLcy(java.lang.String param){
                            localTotalODLimitAmtLcyTracker = param != null;
                                   
                                            this.localTotalODLimitAmtLcy=param;
                                    

                               }
                            

                        /**
                        * field for AmountOnHoldLcy
                        */

                        
                                    protected java.lang.String localAmountOnHoldLcy ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAmountOnHoldLcyTracker = false ;

                           public boolean isAmountOnHoldLcySpecified(){
                               return localAmountOnHoldLcyTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAmountOnHoldLcy(){
                               return localAmountOnHoldLcy;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AmountOnHoldLcy
                               */
                               public void setAmountOnHoldLcy(java.lang.String param){
                            localAmountOnHoldLcyTracker = param != null;
                                   
                                            this.localAmountOnHoldLcy=param;
                                    

                               }
                            

                        /**
                        * field for BalAvailableLcy
                        */

                        
                                    protected java.lang.String localBalAvailableLcy ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBalAvailableLcyTracker = false ;

                           public boolean isBalAvailableLcySpecified(){
                               return localBalAvailableLcyTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBalAvailableLcy(){
                               return localBalAvailableLcy;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BalAvailableLcy
                               */
                               public void setBalAvailableLcy(java.lang.String param){
                            localBalAvailableLcyTracker = param != null;
                                   
                                            this.localBalAvailableLcy=param;
                                    

                               }
                            

                        /**
                        * field for UnClearedBalLcy
                        */

                        
                                    protected java.lang.String localUnClearedBalLcy ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUnClearedBalLcyTracker = false ;

                           public boolean isUnClearedBalLcySpecified(){
                               return localUnClearedBalLcyTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUnClearedBalLcy(){
                               return localUnClearedBalLcy;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param UnClearedBalLcy
                               */
                               public void setUnClearedBalLcy(java.lang.String param){
                            localUnClearedBalLcyTracker = param != null;
                                   
                                            this.localUnClearedBalLcy=param;
                                    

                               }
                            

                        /**
                        * field for OverDrawnAmountLcy
                        */

                        
                                    protected java.lang.String localOverDrawnAmountLcy ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOverDrawnAmountLcyTracker = false ;

                           public boolean isOverDrawnAmountLcySpecified(){
                               return localOverDrawnAmountLcyTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOverDrawnAmountLcy(){
                               return localOverDrawnAmountLcy;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OverDrawnAmountLcy
                               */
                               public void setOverDrawnAmountLcy(java.lang.String param){
                            localOverDrawnAmountLcyTracker = param != null;
                                   
                                            this.localOverDrawnAmountLcy=param;
                                    

                               }
                            

                        /**
                        * field for TotCrBalAvgYy
                        */

                        
                                    protected java.lang.String localTotCrBalAvgYy ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTotCrBalAvgYyTracker = false ;

                           public boolean isTotCrBalAvgYySpecified(){
                               return localTotCrBalAvgYyTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTotCrBalAvgYy(){
                               return localTotCrBalAvgYy;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TotCrBalAvgYy
                               */
                               public void setTotCrBalAvgYy(java.lang.String param){
                            localTotCrBalAvgYyTracker = param != null;
                                   
                                            this.localTotCrBalAvgYy=param;
                                    

                               }
                            

                        /**
                        * field for TotCrBalAvgYyLcy
                        */

                        
                                    protected java.lang.String localTotCrBalAvgYyLcy ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTotCrBalAvgYyLcyTracker = false ;

                           public boolean isTotCrBalAvgYyLcySpecified(){
                               return localTotCrBalAvgYyLcyTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTotCrBalAvgYyLcy(){
                               return localTotCrBalAvgYyLcy;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TotCrBalAvgYyLcy
                               */
                               public void setTotCrBalAvgYyLcy(java.lang.String param){
                            localTotCrBalAvgYyLcyTracker = param != null;
                                   
                                            this.localTotCrBalAvgYyLcy=param;
                                    

                               }
                            

                        /**
                        * field for PrincipalBalanceLcy
                        */

                        
                                    protected java.lang.String localPrincipalBalanceLcy ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPrincipalBalanceLcyTracker = false ;

                           public boolean isPrincipalBalanceLcySpecified(){
                               return localPrincipalBalanceLcyTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPrincipalBalanceLcy(){
                               return localPrincipalBalanceLcy;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PrincipalBalanceLcy
                               */
                               public void setPrincipalBalanceLcy(java.lang.String param){
                            localPrincipalBalanceLcyTracker = param != null;
                                   
                                            this.localPrincipalBalanceLcy=param;
                                    

                               }
                            

                        /**
                        * field for MaturityAmounttLcy
                        */

                        
                                    protected java.lang.String localMaturityAmounttLcy ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMaturityAmounttLcyTracker = false ;

                           public boolean isMaturityAmounttLcySpecified(){
                               return localMaturityAmounttLcyTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMaturityAmounttLcy(){
                               return localMaturityAmounttLcy;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MaturityAmounttLcy
                               */
                               public void setMaturityAmounttLcy(java.lang.String param){
                            localMaturityAmounttLcyTracker = param != null;
                                   
                                            this.localMaturityAmounttLcy=param;
                                    

                               }
                            

                        /**
                        * field for LienAmountLcy
                        */

                        
                                    protected java.lang.String localLienAmountLcy ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLienAmountLcyTracker = false ;

                           public boolean isLienAmountLcySpecified(){
                               return localLienAmountLcyTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLienAmountLcy(){
                               return localLienAmountLcy;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LienAmountLcy
                               */
                               public void setLienAmountLcy(java.lang.String param){
                            localLienAmountLcyTracker = param != null;
                                   
                                            this.localLienAmountLcy=param;
                                    

                               }
                            

                        /**
                        * field for PortfolioId
                        */

                        
                                    protected java.lang.String localPortfolioId ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPortfolioIdTracker = false ;

                           public boolean isPortfolioIdSpecified(){
                               return localPortfolioIdTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPortfolioId(){
                               return localPortfolioId;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PortfolioId
                               */
                               public void setPortfolioId(java.lang.String param){
                            localPortfolioIdTracker = param != null;
                                   
                                            this.localPortfolioId=param;
                                    

                               }
                            

                        /**
                        * field for PortfolioTitle
                        */

                        
                                    protected java.lang.String localPortfolioTitle ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPortfolioTitleTracker = false ;

                           public boolean isPortfolioTitleSpecified(){
                               return localPortfolioTitleTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPortfolioTitle(){
                               return localPortfolioTitle;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PortfolioTitle
                               */
                               public void setPortfolioTitle(java.lang.String param){
                            localPortfolioTitleTracker = param != null;
                                   
                                            this.localPortfolioTitle=param;
                                    

                               }
                            

                        /**
                        * field for PortfolioCustody
                        */

                        
                                    protected java.lang.String localPortfolioCustody ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPortfolioCustodyTracker = false ;

                           public boolean isPortfolioCustodySpecified(){
                               return localPortfolioCustodyTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPortfolioCustody(){
                               return localPortfolioCustody;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PortfolioCustody
                               */
                               public void setPortfolioCustody(java.lang.String param){
                            localPortfolioCustodyTracker = param != null;
                                   
                                            this.localPortfolioCustody=param;
                                    

                               }
                            

                        /**
                        * field for PortfolioISIN
                        */

                        
                                    protected java.lang.String localPortfolioISIN ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPortfolioISINTracker = false ;

                           public boolean isPortfolioISINSpecified(){
                               return localPortfolioISINTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPortfolioISIN(){
                               return localPortfolioISIN;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PortfolioISIN
                               */
                               public void setPortfolioISIN(java.lang.String param){
                            localPortfolioISINTracker = param != null;
                                   
                                            this.localPortfolioISIN=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/crm/common/CustomerInformation.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":accounts_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "accounts_type0",
                           xmlWriter);
                   }

               
                   }
                if (localTypeTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "Type", xmlWriter);
                             

                                          if (localType==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("Type cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localType);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAccountNoTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "accountNo", xmlWriter);
                             

                                          if (localAccountNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("accountNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAccountNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localProductCodeTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "productCode", xmlWriter);
                             

                                          if (localProductCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("productCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localProductCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localProductNameTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "productName", xmlWriter);
                             

                                          if (localProductName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("productName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localProductName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCurrencyCodeTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "currencyCode", xmlWriter);
                             

                                          if (localCurrencyCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("currencyCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCurrencyCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCurrencyNameTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "currencyName", xmlWriter);
                             

                                          if (localCurrencyName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("currencyName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCurrencyName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBranchCodeTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "branchCode", xmlWriter);
                             

                                          if (localBranchCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("branchCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBranchCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBranchNameTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "branchName", xmlWriter);
                             

                                          if (localBranchName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("branchName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBranchName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAcctStatusTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "acctStatus", xmlWriter);
                             

                                          if (localAcctStatus==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("acctStatus cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAcctStatus);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAcctBalanceTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "acctBalance", xmlWriter);
                             

                                          if (localAcctBalance==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("acctBalance cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAcctBalance);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSIFlagTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "SIFlag", xmlWriter);
                             

                                          if (localSIFlag==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("SIFlag cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSIFlag);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSweepInFlagTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "sweepInFlag", xmlWriter);
                             

                                          if (localSweepInFlag==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sweepInFlag cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSweepInFlag);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSweepOutFlagTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "sweepOutFlag", xmlWriter);
                             

                                          if (localSweepOutFlag==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sweepOutFlag cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSweepOutFlag);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHoldFlagTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "holdFlag", xmlWriter);
                             

                                          if (localHoldFlag==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("holdFlag cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHoldFlag);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAccountIslamicFlagTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "accountIslamicFlag", xmlWriter);
                             

                                          if (localAccountIslamicFlag==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("accountIslamicFlag cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAccountIslamicFlag);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMortgageFlagTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "MortgageFlag", xmlWriter);
                             

                                          if (localMortgageFlag==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("MortgageFlag cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMortgageFlag);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNonFundedAcctTypeTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "NonFundedAcctType", xmlWriter);
                             

                                          if (localNonFundedAcctType==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("NonFundedAcctType cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNonFundedAcctType);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localExpiryDateTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "expiryDate", xmlWriter);
                             

                                          if (localExpiryDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("expiryDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localExpiryDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPrvEODBalTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "prvEODBal", xmlWriter);
                             

                                          if (localPrvEODBal==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("prvEODBal cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPrvEODBal);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNetAvalWithdrawlTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "netAvalWithdrawl", xmlWriter);
                             

                                          if (localNetAvalWithdrawl==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("netAvalWithdrawl cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNetAvalWithdrawl);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUnClearedBalTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "unClearedBal", xmlWriter);
                             

                                          if (localUnClearedBal==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("unClearedBal cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUnClearedBal);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAmountOnHoldTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "amountOnHold", xmlWriter);
                             

                                          if (localAmountOnHold==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("amountOnHold cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAmountOnHold);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTotalODLimitAmtTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "totalODLimitAmt", xmlWriter);
                             

                                          if (localTotalODLimitAmt==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("totalODLimitAmt cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTotalODLimitAmt);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTotalODAmountTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "totalODAmount", xmlWriter);
                             

                                          if (localTotalODAmount==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("totalODAmount cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTotalODAmount);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLoanAmountTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "loanAmount", xmlWriter);
                             

                                          if (localLoanAmount==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("loanAmount cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLoanAmount);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBehaviouralScoreTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "behaviouralScore", xmlWriter);
                             

                                          if (localBehaviouralScore==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("behaviouralScore cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBehaviouralScore);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLoanTenorTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "loanTenor", xmlWriter);
                             

                                          if (localLoanTenor==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("loanTenor cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLoanTenor);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLoanInterestRateTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "loanInterestRate", xmlWriter);
                             

                                          if (localLoanInterestRate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("loanInterestRate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLoanInterestRate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDisbursalDateTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "disbursalDate", xmlWriter);
                             

                                          if (localDisbursalDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("disbursalDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDisbursalDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEMIAmtTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "EMIAmt", xmlWriter);
                             

                                          if (localEMIAmt==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("EMIAmt cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEMIAmt);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNextEMIDateTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "nextEMIDate", xmlWriter);
                             

                                          if (localNextEMIDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("nextEMIDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNextEMIDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNoOfDaysPastDueTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "noOfDaysPastDue", xmlWriter);
                             

                                          if (localNoOfDaysPastDue==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("noOfDaysPastDue cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNoOfDaysPastDue);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCurrentSettlementAccountTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "CurrentSettlementAccount", xmlWriter);
                             

                                          if (localCurrentSettlementAccount==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("CurrentSettlementAccount cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCurrentSettlementAccount);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCurrentRepaymentModeTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "CurrentRepaymentMode", xmlWriter);
                             

                                          if (localCurrentRepaymentMode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("CurrentRepaymentMode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCurrentRepaymentMode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUnitPriceTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "unitPrice", xmlWriter);
                             

                                          if (localUnitPrice==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("unitPrice cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUnitPrice);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNoofUnitsTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "NoofUnits", xmlWriter);
                             

                                          if (localNoofUnits==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("NoofUnits cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNoofUnits);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPurchaseValueTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "purchaseValue", xmlWriter);
                             

                                          if (localPurchaseValue==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("purchaseValue cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPurchaseValue);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNetAssetValueTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "netAssetValue", xmlWriter);
                             

                                          if (localNetAssetValue==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("netAssetValue cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNetAssetValue);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUnrealizedGainLossTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "unrealizedGainLoss", xmlWriter);
                             

                                          if (localUnrealizedGainLoss==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("unrealizedGainLoss cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUnrealizedGainLoss);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLeverageTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "leverage", xmlWriter);
                             

                                          if (localLeverage==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("leverage cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLeverage);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDepositNoTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "depositNo", xmlWriter);
                             

                                          if (localDepositNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("depositNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDepositNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMaturityAmountTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "maturityAmount", xmlWriter);
                             

                                          if (localMaturityAmount==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("maturityAmount cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMaturityAmount);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTenorDaysTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "tenorDays", xmlWriter);
                             

                                          if (localTenorDays==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("tenorDays cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTenorDays);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTenorMonthsTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "tenorMonths", xmlWriter);
                             

                                          if (localTenorMonths==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("tenorMonths cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTenorMonths);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTenorYearsTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "tenorYears", xmlWriter);
                             

                                          if (localTenorYears==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("tenorYears cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTenorYears);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFlgATMTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "flgATM", xmlWriter);
                             

                                          if (localFlgATM==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("flgATM cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFlgATM);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFlgTeleBankingTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "flgTeleBanking", xmlWriter);
                             

                                          if (localFlgTeleBanking==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("flgTeleBanking cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFlgTeleBanking);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFlgPOSTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "flgPOS", xmlWriter);
                             

                                          if (localFlgPOS==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("flgPOS cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFlgPOS);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFlgInternetTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "flgInternet", xmlWriter);
                             

                                          if (localFlgInternet==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("flgInternet cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFlgInternet);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDepositEffectiveDateTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "depositEffectiveDate", xmlWriter);
                             

                                          if (localDepositEffectiveDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("depositEffectiveDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDepositEffectiveDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMaturityDateTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "maturityDate", xmlWriter);
                             

                                          if (localMaturityDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("maturityDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMaturityDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAccountTitleTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "accountTitle", xmlWriter);
                             

                                          if (localAccountTitle==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("accountTitle cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAccountTitle);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAcctTypeTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "acctType", xmlWriter);
                             

                                          if (localAcctType==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("acctType cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAcctType);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLCLimitOutstandingAmtTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "LCLimitOutstandingAmt", xmlWriter);
                             

                                          if (localLCLimitOutstandingAmt==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("LCLimitOutstandingAmt cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLCLimitOutstandingAmt);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLCLineCodeTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "LCLineCode", xmlWriter);
                             

                                          if (localLCLineCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("LCLineCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLCLineCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLCSubTypeTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "LCSubType", xmlWriter);
                             

                                          if (localLCSubType==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("LCSubType cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLCSubType);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLCBeneficiaryNameTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "LCBeneficiaryName", xmlWriter);
                             

                                          if (localLCBeneficiaryName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("LCBeneficiaryName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLCBeneficiaryName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLCChargesCollectedAmtTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "LCChargesCollectedAmt", xmlWriter);
                             

                                          if (localLCChargesCollectedAmt==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("LCChargesCollectedAmt cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLCChargesCollectedAmt);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLCDeferredAmtTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "LCDeferredAmt", xmlWriter);
                             

                                          if (localLCDeferredAmt==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("LCDeferredAmt cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLCDeferredAmt);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLCTenorTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "LCTenor", xmlWriter);
                             

                                          if (localLCTenor==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("LCTenor cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLCTenor);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLCDateOpenTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "LCDateOpen", xmlWriter);
                             

                                          if (localLCDateOpen==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("LCDateOpen cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLCDateOpen);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLGLimitOutstandingAmtTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "LGLimitOutstandingAmt", xmlWriter);
                             

                                          if (localLGLimitOutstandingAmt==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("LGLimitOutstandingAmt cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLGLimitOutstandingAmt);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLGLineCodeTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "LGLineCode", xmlWriter);
                             

                                          if (localLGLineCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("LGLineCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLGLineCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLGSubTypeTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "LGSubType", xmlWriter);
                             

                                          if (localLGSubType==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("LGSubType cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLGSubType);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLGBeneficiaryNameTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "LGBeneficiaryName", xmlWriter);
                             

                                          if (localLGBeneficiaryName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("LGBeneficiaryName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLGBeneficiaryName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLGChargesCollectedAmtTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "LGChargesCollectedAmt", xmlWriter);
                             

                                          if (localLGChargesCollectedAmt==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("LGChargesCollectedAmt cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLGChargesCollectedAmt);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLGDeferredAmtTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "LGDeferredAmt", xmlWriter);
                             

                                          if (localLGDeferredAmt==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("LGDeferredAmt cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLGDeferredAmt);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLGTenorTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "LGTenor", xmlWriter);
                             

                                          if (localLGTenor==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("LGTenor cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLGTenor);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLGDateOpenTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "LGDateOpen", xmlWriter);
                             

                                          if (localLGDateOpen==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("LGDateOpen cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLGDateOpen);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPrvEODBalLcyTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "prvEODBalLcy", xmlWriter);
                             

                                          if (localPrvEODBalLcy==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("prvEODBalLcy cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPrvEODBalLcy);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNetAvalWithdrawlLcyTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "netAvalWithdrawlLcy", xmlWriter);
                             

                                          if (localNetAvalWithdrawlLcy==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("netAvalWithdrawlLcy cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNetAvalWithdrawlLcy);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTotalODLimitAmtLcyTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "totalODLimitAmtLcy", xmlWriter);
                             

                                          if (localTotalODLimitAmtLcy==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("totalODLimitAmtLcy cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTotalODLimitAmtLcy);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAmountOnHoldLcyTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "amountOnHoldLcy", xmlWriter);
                             

                                          if (localAmountOnHoldLcy==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("amountOnHoldLcy cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAmountOnHoldLcy);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBalAvailableLcyTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "balAvailableLcy", xmlWriter);
                             

                                          if (localBalAvailableLcy==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("balAvailableLcy cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBalAvailableLcy);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUnClearedBalLcyTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "unClearedBalLcy", xmlWriter);
                             

                                          if (localUnClearedBalLcy==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("unClearedBalLcy cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUnClearedBalLcy);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOverDrawnAmountLcyTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "overDrawnAmountLcy", xmlWriter);
                             

                                          if (localOverDrawnAmountLcy==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("overDrawnAmountLcy cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOverDrawnAmountLcy);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTotCrBalAvgYyTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "totCrBalAvgYy", xmlWriter);
                             

                                          if (localTotCrBalAvgYy==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("totCrBalAvgYy cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTotCrBalAvgYy);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTotCrBalAvgYyLcyTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "totCrBalAvgYyLcy", xmlWriter);
                             

                                          if (localTotCrBalAvgYyLcy==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("totCrBalAvgYyLcy cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTotCrBalAvgYyLcy);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPrincipalBalanceLcyTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "principalBalanceLcy", xmlWriter);
                             

                                          if (localPrincipalBalanceLcy==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("principalBalanceLcy cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPrincipalBalanceLcy);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMaturityAmounttLcyTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "maturityAmounttLcy", xmlWriter);
                             

                                          if (localMaturityAmounttLcy==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("maturityAmounttLcy cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMaturityAmounttLcy);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLienAmountLcyTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "lienAmountLcy", xmlWriter);
                             

                                          if (localLienAmountLcy==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("lienAmountLcy cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLienAmountLcy);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPortfolioIdTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "portfolioId", xmlWriter);
                             

                                          if (localPortfolioId==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("portfolioId cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPortfolioId);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPortfolioTitleTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "portfolioTitle", xmlWriter);
                             

                                          if (localPortfolioTitle==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("portfolioTitle cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPortfolioTitle);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPortfolioCustodyTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "portfolioCustody", xmlWriter);
                             

                                          if (localPortfolioCustody==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("portfolioCustody cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPortfolioCustody);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPortfolioISINTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "portfolioISIN", xmlWriter);
                             

                                          if (localPortfolioISIN==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("portfolioISIN cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPortfolioISIN);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/crm/common/CustomerInformation.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "Type"));
                                 
                                        if (localType != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localType));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("Type cannot be null!!");
                                        }
                                    } if (localAccountNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "accountNo"));
                                 
                                        if (localAccountNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAccountNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("accountNo cannot be null!!");
                                        }
                                    } if (localProductCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "productCode"));
                                 
                                        if (localProductCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localProductCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("productCode cannot be null!!");
                                        }
                                    } if (localProductNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "productName"));
                                 
                                        if (localProductName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localProductName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("productName cannot be null!!");
                                        }
                                    } if (localCurrencyCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "currencyCode"));
                                 
                                        if (localCurrencyCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCurrencyCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("currencyCode cannot be null!!");
                                        }
                                    } if (localCurrencyNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "currencyName"));
                                 
                                        if (localCurrencyName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCurrencyName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("currencyName cannot be null!!");
                                        }
                                    } if (localBranchCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "branchCode"));
                                 
                                        if (localBranchCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBranchCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("branchCode cannot be null!!");
                                        }
                                    } if (localBranchNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "branchName"));
                                 
                                        if (localBranchName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBranchName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("branchName cannot be null!!");
                                        }
                                    } if (localAcctStatusTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "acctStatus"));
                                 
                                        if (localAcctStatus != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAcctStatus));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("acctStatus cannot be null!!");
                                        }
                                    } if (localAcctBalanceTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "acctBalance"));
                                 
                                        if (localAcctBalance != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAcctBalance));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("acctBalance cannot be null!!");
                                        }
                                    } if (localSIFlagTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "SIFlag"));
                                 
                                        if (localSIFlag != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSIFlag));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("SIFlag cannot be null!!");
                                        }
                                    } if (localSweepInFlagTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "sweepInFlag"));
                                 
                                        if (localSweepInFlag != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSweepInFlag));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sweepInFlag cannot be null!!");
                                        }
                                    } if (localSweepOutFlagTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "sweepOutFlag"));
                                 
                                        if (localSweepOutFlag != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSweepOutFlag));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sweepOutFlag cannot be null!!");
                                        }
                                    } if (localHoldFlagTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "holdFlag"));
                                 
                                        if (localHoldFlag != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHoldFlag));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("holdFlag cannot be null!!");
                                        }
                                    } if (localAccountIslamicFlagTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "accountIslamicFlag"));
                                 
                                        if (localAccountIslamicFlag != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAccountIslamicFlag));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("accountIslamicFlag cannot be null!!");
                                        }
                                    } if (localMortgageFlagTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "MortgageFlag"));
                                 
                                        if (localMortgageFlag != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMortgageFlag));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("MortgageFlag cannot be null!!");
                                        }
                                    } if (localNonFundedAcctTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "NonFundedAcctType"));
                                 
                                        if (localNonFundedAcctType != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNonFundedAcctType));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("NonFundedAcctType cannot be null!!");
                                        }
                                    } if (localExpiryDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "expiryDate"));
                                 
                                        if (localExpiryDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localExpiryDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("expiryDate cannot be null!!");
                                        }
                                    } if (localPrvEODBalTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "prvEODBal"));
                                 
                                        if (localPrvEODBal != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPrvEODBal));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("prvEODBal cannot be null!!");
                                        }
                                    } if (localNetAvalWithdrawlTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "netAvalWithdrawl"));
                                 
                                        if (localNetAvalWithdrawl != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNetAvalWithdrawl));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("netAvalWithdrawl cannot be null!!");
                                        }
                                    } if (localUnClearedBalTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "unClearedBal"));
                                 
                                        if (localUnClearedBal != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUnClearedBal));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("unClearedBal cannot be null!!");
                                        }
                                    } if (localAmountOnHoldTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "amountOnHold"));
                                 
                                        if (localAmountOnHold != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAmountOnHold));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("amountOnHold cannot be null!!");
                                        }
                                    } if (localTotalODLimitAmtTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "totalODLimitAmt"));
                                 
                                        if (localTotalODLimitAmt != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTotalODLimitAmt));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("totalODLimitAmt cannot be null!!");
                                        }
                                    } if (localTotalODAmountTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "totalODAmount"));
                                 
                                        if (localTotalODAmount != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTotalODAmount));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("totalODAmount cannot be null!!");
                                        }
                                    } if (localLoanAmountTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "loanAmount"));
                                 
                                        if (localLoanAmount != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLoanAmount));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("loanAmount cannot be null!!");
                                        }
                                    } if (localBehaviouralScoreTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "behaviouralScore"));
                                 
                                        if (localBehaviouralScore != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBehaviouralScore));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("behaviouralScore cannot be null!!");
                                        }
                                    } if (localLoanTenorTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "loanTenor"));
                                 
                                        if (localLoanTenor != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLoanTenor));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("loanTenor cannot be null!!");
                                        }
                                    } if (localLoanInterestRateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "loanInterestRate"));
                                 
                                        if (localLoanInterestRate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLoanInterestRate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("loanInterestRate cannot be null!!");
                                        }
                                    } if (localDisbursalDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "disbursalDate"));
                                 
                                        if (localDisbursalDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDisbursalDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("disbursalDate cannot be null!!");
                                        }
                                    } if (localEMIAmtTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "EMIAmt"));
                                 
                                        if (localEMIAmt != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEMIAmt));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("EMIAmt cannot be null!!");
                                        }
                                    } if (localNextEMIDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "nextEMIDate"));
                                 
                                        if (localNextEMIDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNextEMIDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("nextEMIDate cannot be null!!");
                                        }
                                    } if (localNoOfDaysPastDueTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "noOfDaysPastDue"));
                                 
                                        if (localNoOfDaysPastDue != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNoOfDaysPastDue));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("noOfDaysPastDue cannot be null!!");
                                        }
                                    } if (localCurrentSettlementAccountTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "CurrentSettlementAccount"));
                                 
                                        if (localCurrentSettlementAccount != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCurrentSettlementAccount));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("CurrentSettlementAccount cannot be null!!");
                                        }
                                    } if (localCurrentRepaymentModeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "CurrentRepaymentMode"));
                                 
                                        if (localCurrentRepaymentMode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCurrentRepaymentMode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("CurrentRepaymentMode cannot be null!!");
                                        }
                                    } if (localUnitPriceTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "unitPrice"));
                                 
                                        if (localUnitPrice != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUnitPrice));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("unitPrice cannot be null!!");
                                        }
                                    } if (localNoofUnitsTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "NoofUnits"));
                                 
                                        if (localNoofUnits != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNoofUnits));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("NoofUnits cannot be null!!");
                                        }
                                    } if (localPurchaseValueTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "purchaseValue"));
                                 
                                        if (localPurchaseValue != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPurchaseValue));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("purchaseValue cannot be null!!");
                                        }
                                    } if (localNetAssetValueTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "netAssetValue"));
                                 
                                        if (localNetAssetValue != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNetAssetValue));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("netAssetValue cannot be null!!");
                                        }
                                    } if (localUnrealizedGainLossTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "unrealizedGainLoss"));
                                 
                                        if (localUnrealizedGainLoss != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUnrealizedGainLoss));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("unrealizedGainLoss cannot be null!!");
                                        }
                                    } if (localLeverageTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "leverage"));
                                 
                                        if (localLeverage != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLeverage));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("leverage cannot be null!!");
                                        }
                                    } if (localDepositNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "depositNo"));
                                 
                                        if (localDepositNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDepositNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("depositNo cannot be null!!");
                                        }
                                    } if (localMaturityAmountTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "maturityAmount"));
                                 
                                        if (localMaturityAmount != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMaturityAmount));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("maturityAmount cannot be null!!");
                                        }
                                    } if (localTenorDaysTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "tenorDays"));
                                 
                                        if (localTenorDays != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTenorDays));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("tenorDays cannot be null!!");
                                        }
                                    } if (localTenorMonthsTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "tenorMonths"));
                                 
                                        if (localTenorMonths != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTenorMonths));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("tenorMonths cannot be null!!");
                                        }
                                    } if (localTenorYearsTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "tenorYears"));
                                 
                                        if (localTenorYears != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTenorYears));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("tenorYears cannot be null!!");
                                        }
                                    } if (localFlgATMTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "flgATM"));
                                 
                                        if (localFlgATM != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFlgATM));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("flgATM cannot be null!!");
                                        }
                                    } if (localFlgTeleBankingTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "flgTeleBanking"));
                                 
                                        if (localFlgTeleBanking != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFlgTeleBanking));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("flgTeleBanking cannot be null!!");
                                        }
                                    } if (localFlgPOSTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "flgPOS"));
                                 
                                        if (localFlgPOS != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFlgPOS));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("flgPOS cannot be null!!");
                                        }
                                    } if (localFlgInternetTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "flgInternet"));
                                 
                                        if (localFlgInternet != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFlgInternet));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("flgInternet cannot be null!!");
                                        }
                                    } if (localDepositEffectiveDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "depositEffectiveDate"));
                                 
                                        if (localDepositEffectiveDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDepositEffectiveDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("depositEffectiveDate cannot be null!!");
                                        }
                                    } if (localMaturityDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "maturityDate"));
                                 
                                        if (localMaturityDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMaturityDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("maturityDate cannot be null!!");
                                        }
                                    } if (localAccountTitleTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "accountTitle"));
                                 
                                        if (localAccountTitle != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAccountTitle));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("accountTitle cannot be null!!");
                                        }
                                    } if (localAcctTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "acctType"));
                                 
                                        if (localAcctType != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAcctType));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("acctType cannot be null!!");
                                        }
                                    } if (localLCLimitOutstandingAmtTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "LCLimitOutstandingAmt"));
                                 
                                        if (localLCLimitOutstandingAmt != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLCLimitOutstandingAmt));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("LCLimitOutstandingAmt cannot be null!!");
                                        }
                                    } if (localLCLineCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "LCLineCode"));
                                 
                                        if (localLCLineCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLCLineCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("LCLineCode cannot be null!!");
                                        }
                                    } if (localLCSubTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "LCSubType"));
                                 
                                        if (localLCSubType != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLCSubType));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("LCSubType cannot be null!!");
                                        }
                                    } if (localLCBeneficiaryNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "LCBeneficiaryName"));
                                 
                                        if (localLCBeneficiaryName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLCBeneficiaryName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("LCBeneficiaryName cannot be null!!");
                                        }
                                    } if (localLCChargesCollectedAmtTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "LCChargesCollectedAmt"));
                                 
                                        if (localLCChargesCollectedAmt != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLCChargesCollectedAmt));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("LCChargesCollectedAmt cannot be null!!");
                                        }
                                    } if (localLCDeferredAmtTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "LCDeferredAmt"));
                                 
                                        if (localLCDeferredAmt != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLCDeferredAmt));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("LCDeferredAmt cannot be null!!");
                                        }
                                    } if (localLCTenorTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "LCTenor"));
                                 
                                        if (localLCTenor != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLCTenor));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("LCTenor cannot be null!!");
                                        }
                                    } if (localLCDateOpenTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "LCDateOpen"));
                                 
                                        if (localLCDateOpen != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLCDateOpen));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("LCDateOpen cannot be null!!");
                                        }
                                    } if (localLGLimitOutstandingAmtTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "LGLimitOutstandingAmt"));
                                 
                                        if (localLGLimitOutstandingAmt != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLGLimitOutstandingAmt));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("LGLimitOutstandingAmt cannot be null!!");
                                        }
                                    } if (localLGLineCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "LGLineCode"));
                                 
                                        if (localLGLineCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLGLineCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("LGLineCode cannot be null!!");
                                        }
                                    } if (localLGSubTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "LGSubType"));
                                 
                                        if (localLGSubType != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLGSubType));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("LGSubType cannot be null!!");
                                        }
                                    } if (localLGBeneficiaryNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "LGBeneficiaryName"));
                                 
                                        if (localLGBeneficiaryName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLGBeneficiaryName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("LGBeneficiaryName cannot be null!!");
                                        }
                                    } if (localLGChargesCollectedAmtTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "LGChargesCollectedAmt"));
                                 
                                        if (localLGChargesCollectedAmt != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLGChargesCollectedAmt));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("LGChargesCollectedAmt cannot be null!!");
                                        }
                                    } if (localLGDeferredAmtTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "LGDeferredAmt"));
                                 
                                        if (localLGDeferredAmt != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLGDeferredAmt));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("LGDeferredAmt cannot be null!!");
                                        }
                                    } if (localLGTenorTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "LGTenor"));
                                 
                                        if (localLGTenor != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLGTenor));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("LGTenor cannot be null!!");
                                        }
                                    } if (localLGDateOpenTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "LGDateOpen"));
                                 
                                        if (localLGDateOpen != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLGDateOpen));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("LGDateOpen cannot be null!!");
                                        }
                                    } if (localPrvEODBalLcyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "prvEODBalLcy"));
                                 
                                        if (localPrvEODBalLcy != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPrvEODBalLcy));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("prvEODBalLcy cannot be null!!");
                                        }
                                    } if (localNetAvalWithdrawlLcyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "netAvalWithdrawlLcy"));
                                 
                                        if (localNetAvalWithdrawlLcy != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNetAvalWithdrawlLcy));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("netAvalWithdrawlLcy cannot be null!!");
                                        }
                                    } if (localTotalODLimitAmtLcyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "totalODLimitAmtLcy"));
                                 
                                        if (localTotalODLimitAmtLcy != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTotalODLimitAmtLcy));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("totalODLimitAmtLcy cannot be null!!");
                                        }
                                    } if (localAmountOnHoldLcyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "amountOnHoldLcy"));
                                 
                                        if (localAmountOnHoldLcy != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAmountOnHoldLcy));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("amountOnHoldLcy cannot be null!!");
                                        }
                                    } if (localBalAvailableLcyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "balAvailableLcy"));
                                 
                                        if (localBalAvailableLcy != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBalAvailableLcy));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("balAvailableLcy cannot be null!!");
                                        }
                                    } if (localUnClearedBalLcyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "unClearedBalLcy"));
                                 
                                        if (localUnClearedBalLcy != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUnClearedBalLcy));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("unClearedBalLcy cannot be null!!");
                                        }
                                    } if (localOverDrawnAmountLcyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "overDrawnAmountLcy"));
                                 
                                        if (localOverDrawnAmountLcy != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOverDrawnAmountLcy));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("overDrawnAmountLcy cannot be null!!");
                                        }
                                    } if (localTotCrBalAvgYyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "totCrBalAvgYy"));
                                 
                                        if (localTotCrBalAvgYy != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTotCrBalAvgYy));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("totCrBalAvgYy cannot be null!!");
                                        }
                                    } if (localTotCrBalAvgYyLcyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "totCrBalAvgYyLcy"));
                                 
                                        if (localTotCrBalAvgYyLcy != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTotCrBalAvgYyLcy));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("totCrBalAvgYyLcy cannot be null!!");
                                        }
                                    } if (localPrincipalBalanceLcyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "principalBalanceLcy"));
                                 
                                        if (localPrincipalBalanceLcy != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPrincipalBalanceLcy));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("principalBalanceLcy cannot be null!!");
                                        }
                                    } if (localMaturityAmounttLcyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "maturityAmounttLcy"));
                                 
                                        if (localMaturityAmounttLcy != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMaturityAmounttLcy));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("maturityAmounttLcy cannot be null!!");
                                        }
                                    } if (localLienAmountLcyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "lienAmountLcy"));
                                 
                                        if (localLienAmountLcy != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLienAmountLcy));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("lienAmountLcy cannot be null!!");
                                        }
                                    } if (localPortfolioIdTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "portfolioId"));
                                 
                                        if (localPortfolioId != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPortfolioId));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("portfolioId cannot be null!!");
                                        }
                                    } if (localPortfolioTitleTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "portfolioTitle"));
                                 
                                        if (localPortfolioTitle != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPortfolioTitle));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("portfolioTitle cannot be null!!");
                                        }
                                    } if (localPortfolioCustodyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "portfolioCustody"));
                                 
                                        if (localPortfolioCustody != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPortfolioCustody));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("portfolioCustody cannot be null!!");
                                        }
                                    } if (localPortfolioISINTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "portfolioISIN"));
                                 
                                        if (localPortfolioISIN != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPortfolioISIN));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("portfolioISIN cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static Accounts_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            Accounts_type0 object =
                new Accounts_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"accounts_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (Accounts_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","Type").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"Type" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","accountNo").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"accountNo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAccountNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","productCode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"productCode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setProductCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","productName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"productName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setProductName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","currencyCode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"currencyCode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCurrencyCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","currencyName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"currencyName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCurrencyName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","branchCode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"branchCode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBranchCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","branchName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"branchName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBranchName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","acctStatus").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"acctStatus" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAcctStatus(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","acctBalance").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"acctBalance" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAcctBalance(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","SIFlag").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"SIFlag" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSIFlag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","sweepInFlag").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"sweepInFlag" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSweepInFlag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","sweepOutFlag").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"sweepOutFlag" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSweepOutFlag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","holdFlag").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"holdFlag" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHoldFlag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","accountIslamicFlag").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"accountIslamicFlag" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAccountIslamicFlag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","MortgageFlag").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"MortgageFlag" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMortgageFlag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","NonFundedAcctType").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"NonFundedAcctType" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNonFundedAcctType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","expiryDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"expiryDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setExpiryDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","prvEODBal").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"prvEODBal" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPrvEODBal(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","netAvalWithdrawl").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"netAvalWithdrawl" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNetAvalWithdrawl(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","unClearedBal").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"unClearedBal" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUnClearedBal(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","amountOnHold").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"amountOnHold" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAmountOnHold(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","totalODLimitAmt").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"totalODLimitAmt" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTotalODLimitAmt(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","totalODAmount").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"totalODAmount" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTotalODAmount(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","loanAmount").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"loanAmount" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLoanAmount(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","behaviouralScore").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"behaviouralScore" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBehaviouralScore(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","loanTenor").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"loanTenor" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLoanTenor(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","loanInterestRate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"loanInterestRate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLoanInterestRate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","disbursalDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"disbursalDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDisbursalDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","EMIAmt").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"EMIAmt" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEMIAmt(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","nextEMIDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"nextEMIDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNextEMIDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","noOfDaysPastDue").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"noOfDaysPastDue" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNoOfDaysPastDue(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","CurrentSettlementAccount").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"CurrentSettlementAccount" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCurrentSettlementAccount(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","CurrentRepaymentMode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"CurrentRepaymentMode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCurrentRepaymentMode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","unitPrice").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"unitPrice" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUnitPrice(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","NoofUnits").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"NoofUnits" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNoofUnits(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","purchaseValue").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"purchaseValue" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPurchaseValue(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","netAssetValue").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"netAssetValue" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNetAssetValue(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","unrealizedGainLoss").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"unrealizedGainLoss" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUnrealizedGainLoss(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","leverage").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"leverage" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLeverage(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","depositNo").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"depositNo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDepositNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","maturityAmount").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"maturityAmount" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMaturityAmount(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","tenorDays").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"tenorDays" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTenorDays(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","tenorMonths").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"tenorMonths" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTenorMonths(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","tenorYears").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"tenorYears" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTenorYears(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","flgATM").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"flgATM" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFlgATM(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","flgTeleBanking").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"flgTeleBanking" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFlgTeleBanking(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","flgPOS").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"flgPOS" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFlgPOS(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","flgInternet").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"flgInternet" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFlgInternet(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","depositEffectiveDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"depositEffectiveDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDepositEffectiveDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","maturityDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"maturityDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMaturityDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","accountTitle").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"accountTitle" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAccountTitle(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","acctType").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"acctType" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAcctType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","LCLimitOutstandingAmt").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"LCLimitOutstandingAmt" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLCLimitOutstandingAmt(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","LCLineCode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"LCLineCode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLCLineCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","LCSubType").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"LCSubType" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLCSubType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","LCBeneficiaryName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"LCBeneficiaryName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLCBeneficiaryName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","LCChargesCollectedAmt").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"LCChargesCollectedAmt" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLCChargesCollectedAmt(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","LCDeferredAmt").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"LCDeferredAmt" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLCDeferredAmt(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","LCTenor").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"LCTenor" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLCTenor(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","LCDateOpen").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"LCDateOpen" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLCDateOpen(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","LGLimitOutstandingAmt").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"LGLimitOutstandingAmt" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLGLimitOutstandingAmt(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","LGLineCode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"LGLineCode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLGLineCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","LGSubType").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"LGSubType" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLGSubType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","LGBeneficiaryName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"LGBeneficiaryName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLGBeneficiaryName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","LGChargesCollectedAmt").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"LGChargesCollectedAmt" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLGChargesCollectedAmt(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","LGDeferredAmt").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"LGDeferredAmt" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLGDeferredAmt(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","LGTenor").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"LGTenor" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLGTenor(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","LGDateOpen").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"LGDateOpen" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLGDateOpen(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","prvEODBalLcy").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"prvEODBalLcy" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPrvEODBalLcy(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","netAvalWithdrawlLcy").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"netAvalWithdrawlLcy" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNetAvalWithdrawlLcy(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","totalODLimitAmtLcy").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"totalODLimitAmtLcy" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTotalODLimitAmtLcy(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","amountOnHoldLcy").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"amountOnHoldLcy" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAmountOnHoldLcy(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","balAvailableLcy").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"balAvailableLcy" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBalAvailableLcy(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","unClearedBalLcy").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"unClearedBalLcy" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUnClearedBalLcy(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","overDrawnAmountLcy").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"overDrawnAmountLcy" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOverDrawnAmountLcy(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","totCrBalAvgYy").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"totCrBalAvgYy" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTotCrBalAvgYy(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","totCrBalAvgYyLcy").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"totCrBalAvgYyLcy" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTotCrBalAvgYyLcy(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","principalBalanceLcy").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"principalBalanceLcy" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPrincipalBalanceLcy(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","maturityAmounttLcy").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"maturityAmounttLcy" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMaturityAmounttLcy(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","lienAmountLcy").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"lienAmountLcy" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLienAmountLcy(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","portfolioId").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"portfolioId" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPortfolioId(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","portfolioTitle").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"portfolioTitle" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPortfolioTitle(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","portfolioCustody").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"portfolioCustody" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPortfolioCustody(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","portfolioISIN").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"portfolioISIN" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPortfolioISIN(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class ListOfCreditCards_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = listOfCreditCards_type0
                Namespace URI = http://www.adcb.com/crm/common/CustomerInformation.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for CreditCards
                        * This was an Array!
                        */

                        
                                    protected CreditCards_type0[] localCreditCards ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCreditCardsTracker = false ;

                           public boolean isCreditCardsSpecified(){
                               return localCreditCardsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return CreditCards_type0[]
                           */
                           public  CreditCards_type0[] getCreditCards(){
                               return localCreditCards;
                           }

                           
                        


                               
                              /**
                               * validate the array for CreditCards
                               */
                              protected void validateCreditCards(CreditCards_type0[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param CreditCards
                              */
                              public void setCreditCards(CreditCards_type0[] param){
                              
                                   validateCreditCards(param);

                               localCreditCardsTracker = param != null;
                                      
                                      this.localCreditCards=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param CreditCards_type0
                             */
                             public void addCreditCards(CreditCards_type0 param){
                                   if (localCreditCards == null){
                                   localCreditCards = new CreditCards_type0[]{};
                                   }

                            
                                 //update the setting tracker
                                localCreditCardsTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localCreditCards);
                               list.add(param);
                               this.localCreditCards =
                             (CreditCards_type0[])list.toArray(
                            new CreditCards_type0[list.size()]);

                             }
                             

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/crm/common/CustomerInformation.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":listOfCreditCards_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "listOfCreditCards_type0",
                           xmlWriter);
                   }

               
                   }
                if (localCreditCardsTracker){
                                       if (localCreditCards!=null){
                                            for (int i = 0;i < localCreditCards.length;i++){
                                                if (localCreditCards[i] != null){
                                                 localCreditCards[i].serialize(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","creditCards"),
                                                           xmlWriter);
                                                } else {
                                                   
                                                        // we don't have to do any thing since minOccures is zero
                                                    
                                                }

                                            }
                                     } else {
                                        
                                               throw new org.apache.axis2.databinding.ADBException("creditCards cannot be null!!");
                                        
                                    }
                                 }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/crm/common/CustomerInformation.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localCreditCardsTracker){
                             if (localCreditCards!=null) {
                                 for (int i = 0;i < localCreditCards.length;i++){

                                    if (localCreditCards[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                          "creditCards"));
                                         elementList.add(localCreditCards[i]);
                                    } else {
                                        
                                                // nothing to do
                                            
                                    }

                                 }
                             } else {
                                 
                                        throw new org.apache.axis2.databinding.ADBException("creditCards cannot be null!!");
                                    
                             }

                        }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static ListOfCreditCards_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            ListOfCreditCards_type0 object =
                new ListOfCreditCards_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"listOfCreditCards_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (ListOfCreditCards_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                        java.util.ArrayList list1 = new java.util.ArrayList();
                    
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","creditCards").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    list1.add(CreditCards_type0.Factory.parse(reader));
                                                                
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone1 = false;
                                                        while(!loopDone1){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone1 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","creditCards").equals(reader.getName())){
                                                                    list1.add(CreditCards_type0.Factory.parse(reader));
                                                                        
                                                                }else{
                                                                    loopDone1 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array
                                                        
                                                        object.setCreditCards((CreditCards_type0[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                CreditCards_type0.class,
                                                                list1));
                                                            
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class GetCustomerInformationRes_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = GetCustomerInformationRes_type0
                Namespace URI = http://www.adcb.com/crm/inq/GetCustomerInformation.xsd
                Namespace Prefix = ns3
                */
            

                        /**
                        * field for ListOfCustomer
                        */

                        
                                    protected ListOfCustomer_type0 localListOfCustomer ;
                                

                           /**
                           * Auto generated getter method
                           * @return ListOfCustomer_type0
                           */
                           public  ListOfCustomer_type0 getListOfCustomer(){
                               return localListOfCustomer;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ListOfCustomer
                               */
                               public void setListOfCustomer(ListOfCustomer_type0 param){
                            
                                            this.localListOfCustomer=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/crm/inq/GetCustomerInformation.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":GetCustomerInformationRes_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "GetCustomerInformationRes_type0",
                           xmlWriter);
                   }

               
                   }
               
                                            if (localListOfCustomer==null){
                                                 throw new org.apache.axis2.databinding.ADBException("listOfCustomer cannot be null!!");
                                            }
                                           localListOfCustomer.serialize(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","listOfCustomer"),
                                               xmlWriter);
                                        
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/crm/inq/GetCustomerInformation.xsd")){
                return "ns3";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "listOfCustomer"));
                            
                            
                                    if (localListOfCustomer==null){
                                         throw new org.apache.axis2.databinding.ADBException("listOfCustomer cannot be null!!");
                                    }
                                    elementList.add(localListOfCustomer);
                                

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static GetCustomerInformationRes_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            GetCustomerInformationRes_type0 object =
                new GetCustomerInformationRes_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"GetCustomerInformationRes_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (GetCustomerInformationRes_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","listOfCustomer").equals(reader.getName())){
                                
                                                object.setListOfCustomer(ListOfCustomer_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                                }
                              
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class GetCustomerInformationRes
        implements org.apache.axis2.databinding.ADBBean{
        
                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://www.adcb.com/crm/inq/GetCustomerInformation.xsd",
                "GetCustomerInformationRes",
                "ns3");

            

                        /**
                        * field for GetCustomerInformationRes
                        */

                        
                                    protected GetCustomerInformationRes_type0 localGetCustomerInformationRes ;
                                

                           /**
                           * Auto generated getter method
                           * @return GetCustomerInformationRes_type0
                           */
                           public  GetCustomerInformationRes_type0 getGetCustomerInformationRes(){
                               return localGetCustomerInformationRes;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param GetCustomerInformationRes
                               */
                               public void setGetCustomerInformationRes(GetCustomerInformationRes_type0 param){
                            
                                            this.localGetCustomerInformationRes=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
               return factory.createOMElement(dataSource,MY_QNAME);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                
                //We can safely assume an element has only one type associated with it
                
                                 if (localGetCustomerInformationRes==null){
                                   throw new org.apache.axis2.databinding.ADBException("GetCustomerInformationRes cannot be null!");
                                 }
                                 localGetCustomerInformationRes.serialize(MY_QNAME,xmlWriter);
                            

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/crm/inq/GetCustomerInformation.xsd")){
                return "ns3";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                
                //We can safely assume an element has only one type associated with it
                return localGetCustomerInformationRes.getPullParser(MY_QNAME);

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static GetCustomerInformationRes parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            GetCustomerInformationRes object =
                new GetCustomerInformationRes();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                   
                while(!reader.isEndElement()) {
                    if (reader.isStartElement() ){
                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/inq/GetCustomerInformation.xsd","GetCustomerInformationRes").equals(reader.getName())){
                                
                                                object.setGetCustomerInformationRes(GetCustomerInformationRes_type0.Factory.parse(reader));
                                            
                              }  // End of if for expected property start element
                                
                             else{
                                        // A start element we are not expecting indicates an invalid parameter was passed
                                        throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                             }
                          
                             } else {
                                reader.next();
                             }  
                           }  // end of while loop
                        



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class ListOfUDFDetails_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = listOfUDFDetails_type0
                Namespace URI = http://www.adcb.com/crm/common/CustomerInformation.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for UDFDetails
                        * This was an Array!
                        */

                        
                                    protected UDFDetails_type0[] localUDFDetails ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUDFDetailsTracker = false ;

                           public boolean isUDFDetailsSpecified(){
                               return localUDFDetailsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return UDFDetails_type0[]
                           */
                           public  UDFDetails_type0[] getUDFDetails(){
                               return localUDFDetails;
                           }

                           
                        


                               
                              /**
                               * validate the array for UDFDetails
                               */
                              protected void validateUDFDetails(UDFDetails_type0[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param UDFDetails
                              */
                              public void setUDFDetails(UDFDetails_type0[] param){
                              
                                   validateUDFDetails(param);

                               localUDFDetailsTracker = param != null;
                                      
                                      this.localUDFDetails=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param UDFDetails_type0
                             */
                             public void addUDFDetails(UDFDetails_type0 param){
                                   if (localUDFDetails == null){
                                   localUDFDetails = new UDFDetails_type0[]{};
                                   }

                            
                                 //update the setting tracker
                                localUDFDetailsTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localUDFDetails);
                               list.add(param);
                               this.localUDFDetails =
                             (UDFDetails_type0[])list.toArray(
                            new UDFDetails_type0[list.size()]);

                             }
                             

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/crm/common/CustomerInformation.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":listOfUDFDetails_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "listOfUDFDetails_type0",
                           xmlWriter);
                   }

               
                   }
                if (localUDFDetailsTracker){
                                       if (localUDFDetails!=null){
                                            for (int i = 0;i < localUDFDetails.length;i++){
                                                if (localUDFDetails[i] != null){
                                                 localUDFDetails[i].serialize(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","UDFDetails"),
                                                           xmlWriter);
                                                } else {
                                                   
                                                        // we don't have to do any thing since minOccures is zero
                                                    
                                                }

                                            }
                                     } else {
                                        
                                               throw new org.apache.axis2.databinding.ADBException("UDFDetails cannot be null!!");
                                        
                                    }
                                 }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/crm/common/CustomerInformation.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localUDFDetailsTracker){
                             if (localUDFDetails!=null) {
                                 for (int i = 0;i < localUDFDetails.length;i++){

                                    if (localUDFDetails[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                          "UDFDetails"));
                                         elementList.add(localUDFDetails[i]);
                                    } else {
                                        
                                                // nothing to do
                                            
                                    }

                                 }
                             } else {
                                 
                                        throw new org.apache.axis2.databinding.ADBException("UDFDetails cannot be null!!");
                                    
                             }

                        }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static ListOfUDFDetails_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            ListOfUDFDetails_type0 object =
                new ListOfUDFDetails_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"listOfUDFDetails_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (ListOfUDFDetails_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                        java.util.ArrayList list1 = new java.util.ArrayList();
                    
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","UDFDetails").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    list1.add(UDFDetails_type0.Factory.parse(reader));
                                                                
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone1 = false;
                                                        while(!loopDone1){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone1 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","UDFDetails").equals(reader.getName())){
                                                                    list1.add(UDFDetails_type0.Factory.parse(reader));
                                                                        
                                                                }else{
                                                                    loopDone1 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array
                                                        
                                                        object.setUDFDetails((UDFDetails_type0[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                UDFDetails_type0.class,
                                                                list1));
                                                            
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class ListOfCustomer_type0E
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = ListOfCustomer_type0
                Namespace URI = http://www.adcb.com/crm/inq/GetCustomerInformation.xsd
                Namespace Prefix = ns3
                */
            

                        /**
                        * field for Customer
                        */

                        
                                    protected Customer_type0E localCustomer ;
                                

                           /**
                           * Auto generated getter method
                           * @return Customer_type0E
                           */
                           public  Customer_type0E getCustomer(){
                               return localCustomer;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Customer
                               */
                               public void setCustomer(Customer_type0E param){
                            
                                            this.localCustomer=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/crm/inq/GetCustomerInformation.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":ListOfCustomer_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "ListOfCustomer_type0",
                           xmlWriter);
                   }

               
                   }
               
                                            if (localCustomer==null){
                                                 throw new org.apache.axis2.databinding.ADBException("Customer cannot be null!!");
                                            }
                                           localCustomer.serialize(new javax.xml.namespace.QName("http://www.adcb.com/crm/inq/GetCustomerInformation.xsd","Customer"),
                                               xmlWriter);
                                        
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/crm/inq/GetCustomerInformation.xsd")){
                return "ns3";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/inq/GetCustomerInformation.xsd",
                                                                      "Customer"));
                            
                            
                                    if (localCustomer==null){
                                         throw new org.apache.axis2.databinding.ADBException("Customer cannot be null!!");
                                    }
                                    elementList.add(localCustomer);
                                

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static ListOfCustomer_type0E parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            ListOfCustomer_type0E object =
                new ListOfCustomer_type0E();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"ListOfCustomer_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (ListOfCustomer_type0E)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/inq/GetCustomerInformation.xsd","Customer").equals(reader.getName())){
                                
                                                object.setCustomer(Customer_type0E.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                                }
                              
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class CreditCards_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = creditCards_type0
                Namespace URI = http://www.adcb.com/crm/common/CustomerInformation.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for CardNumber
                        */

                        
                                    protected java.lang.String localCardNumber ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCardNumberTracker = false ;

                           public boolean isCardNumberSpecified(){
                               return localCardNumberTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCardNumber(){
                               return localCardNumber;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CardNumber
                               */
                               public void setCardNumber(java.lang.String param){
                            localCardNumberTracker = param != null;
                                   
                                            this.localCardNumber=param;
                                    

                               }
                            

                        /**
                        * field for ProductName
                        */

                        
                                    protected java.lang.String localProductName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localProductNameTracker = false ;

                           public boolean isProductNameSpecified(){
                               return localProductNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getProductName(){
                               return localProductName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ProductName
                               */
                               public void setProductName(java.lang.String param){
                            localProductNameTracker = param != null;
                                   
                                            this.localProductName=param;
                                    

                               }
                            

                        /**
                        * field for CardType
                        */

                        
                                    protected java.lang.String localCardType ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCardTypeTracker = false ;

                           public boolean isCardTypeSpecified(){
                               return localCardTypeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCardType(){
                               return localCardType;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CardType
                               */
                               public void setCardType(java.lang.String param){
                            localCardTypeTracker = param != null;
                                   
                                            this.localCardType=param;
                                    

                               }
                            

                        /**
                        * field for Status
                        */

                        
                                    protected java.lang.String localStatus ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localStatusTracker = false ;

                           public boolean isStatusSpecified(){
                               return localStatusTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getStatus(){
                               return localStatus;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Status
                               */
                               public void setStatus(java.lang.String param){
                            localStatusTracker = param != null;
                                   
                                            this.localStatus=param;
                                    

                               }
                            

                        /**
                        * field for Card_name
                        */

                        
                                    protected java.lang.String localCard_name ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCard_nameTracker = false ;

                           public boolean isCard_nameSpecified(){
                               return localCard_nameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCard_name(){
                               return localCard_name;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Card_name
                               */
                               public void setCard_name(java.lang.String param){
                            localCard_nameTracker = param != null;
                                   
                                            this.localCard_name=param;
                                    

                               }
                            

                        /**
                        * field for VPlusAccountNumber
                        */

                        
                                    protected java.lang.String localVPlusAccountNumber ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localVPlusAccountNumberTracker = false ;

                           public boolean isVPlusAccountNumberSpecified(){
                               return localVPlusAccountNumberTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getVPlusAccountNumber(){
                               return localVPlusAccountNumber;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param VPlusAccountNumber
                               */
                               public void setVPlusAccountNumber(java.lang.String param){
                            localVPlusAccountNumberTracker = param != null;
                                   
                                            this.localVPlusAccountNumber=param;
                                    

                               }
                            

                        /**
                        * field for CardLogoDesc
                        */

                        
                                    protected java.lang.String localCardLogoDesc ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCardLogoDescTracker = false ;

                           public boolean isCardLogoDescSpecified(){
                               return localCardLogoDescTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCardLogoDesc(){
                               return localCardLogoDesc;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CardLogoDesc
                               */
                               public void setCardLogoDesc(java.lang.String param){
                            localCardLogoDescTracker = param != null;
                                   
                                            this.localCardLogoDesc=param;
                                    

                               }
                            

                        /**
                        * field for Expiry_date
                        */

                        
                                    protected java.lang.String localExpiry_date ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localExpiry_dateTracker = false ;

                           public boolean isExpiry_dateSpecified(){
                               return localExpiry_dateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getExpiry_date(){
                               return localExpiry_date;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Expiry_date
                               */
                               public void setExpiry_date(java.lang.String param){
                            localExpiry_dateTracker = param != null;
                                   
                                            this.localExpiry_date=param;
                                    

                               }
                            

                        /**
                        * field for Card_limit
                        */

                        
                                    protected java.lang.String localCard_limit ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCard_limitTracker = false ;

                           public boolean isCard_limitSpecified(){
                               return localCard_limitTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCard_limit(){
                               return localCard_limit;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Card_limit
                               */
                               public void setCard_limit(java.lang.String param){
                            localCard_limitTracker = param != null;
                                   
                                            this.localCard_limit=param;
                                    

                               }
                            

                        /**
                        * field for Cash_limit
                        */

                        
                                    protected java.lang.String localCash_limit ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCash_limitTracker = false ;

                           public boolean isCash_limitSpecified(){
                               return localCash_limitTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCash_limit(){
                               return localCash_limit;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Cash_limit
                               */
                               public void setCash_limit(java.lang.String param){
                            localCash_limitTracker = param != null;
                                   
                                            this.localCash_limit=param;
                                    

                               }
                            

                        /**
                        * field for Due_date
                        */

                        
                                    protected java.lang.String localDue_date ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDue_dateTracker = false ;

                           public boolean isDue_dateSpecified(){
                               return localDue_dateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDue_date(){
                               return localDue_date;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Due_date
                               */
                               public void setDue_date(java.lang.String param){
                            localDue_dateTracker = param != null;
                                   
                                            this.localDue_date=param;
                                    

                               }
                            

                        /**
                        * field for Overlimit_amount
                        */

                        
                                    protected java.lang.String localOverlimit_amount ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOverlimit_amountTracker = false ;

                           public boolean isOverlimit_amountSpecified(){
                               return localOverlimit_amountTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOverlimit_amount(){
                               return localOverlimit_amount;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Overlimit_amount
                               */
                               public void setOverlimit_amount(java.lang.String param){
                            localOverlimit_amountTracker = param != null;
                                   
                                            this.localOverlimit_amount=param;
                                    

                               }
                            

                        /**
                        * field for Outstanding_balance
                        */

                        
                                    protected java.lang.String localOutstanding_balance ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOutstanding_balanceTracker = false ;

                           public boolean isOutstanding_balanceSpecified(){
                               return localOutstanding_balanceTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOutstanding_balance(){
                               return localOutstanding_balance;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Outstanding_balance
                               */
                               public void setOutstanding_balance(java.lang.String param){
                            localOutstanding_balanceTracker = param != null;
                                   
                                            this.localOutstanding_balance=param;
                                    

                               }
                            

                        /**
                        * field for Available_cash
                        */

                        
                                    protected java.lang.String localAvailable_cash ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAvailable_cashTracker = false ;

                           public boolean isAvailable_cashSpecified(){
                               return localAvailable_cashTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAvailable_cash(){
                               return localAvailable_cash;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Available_cash
                               */
                               public void setAvailable_cash(java.lang.String param){
                            localAvailable_cashTracker = param != null;
                                   
                                            this.localAvailable_cash=param;
                                    

                               }
                            

                        /**
                        * field for Min_payment
                        */

                        
                                    protected java.lang.String localMin_payment ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMin_paymentTracker = false ;

                           public boolean isMin_paymentSpecified(){
                               return localMin_paymentTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMin_payment(){
                               return localMin_payment;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Min_payment
                               */
                               public void setMin_payment(java.lang.String param){
                            localMin_paymentTracker = param != null;
                                   
                                            this.localMin_payment=param;
                                    

                               }
                            

                        /**
                        * field for Past_due_amount
                        */

                        
                                    protected java.lang.String localPast_due_amount ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPast_due_amountTracker = false ;

                           public boolean isPast_due_amountSpecified(){
                               return localPast_due_amountTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPast_due_amount(){
                               return localPast_due_amount;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Past_due_amount
                               */
                               public void setPast_due_amount(java.lang.String param){
                            localPast_due_amountTracker = param != null;
                                   
                                            this.localPast_due_amount=param;
                                    

                               }
                            

                        /**
                        * field for Open_to_buy
                        */

                        
                                    protected java.lang.String localOpen_to_buy ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOpen_to_buyTracker = false ;

                           public boolean isOpen_to_buySpecified(){
                               return localOpen_to_buyTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOpen_to_buy(){
                               return localOpen_to_buy;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Open_to_buy
                               */
                               public void setOpen_to_buy(java.lang.String param){
                            localOpen_to_buyTracker = param != null;
                                   
                                            this.localOpen_to_buy=param;
                                    

                               }
                            

                        /**
                        * field for Last_card_expiry_date
                        */

                        
                                    protected java.lang.String localLast_card_expiry_date ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLast_card_expiry_dateTracker = false ;

                           public boolean isLast_card_expiry_dateSpecified(){
                               return localLast_card_expiry_dateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLast_card_expiry_date(){
                               return localLast_card_expiry_date;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Last_card_expiry_date
                               */
                               public void setLast_card_expiry_date(java.lang.String param){
                            localLast_card_expiry_dateTracker = param != null;
                                   
                                            this.localLast_card_expiry_date=param;
                                    

                               }
                            

                        /**
                        * field for Temp_limit_increase_flag
                        */

                        
                                    protected java.lang.String localTemp_limit_increase_flag ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTemp_limit_increase_flagTracker = false ;

                           public boolean isTemp_limit_increase_flagSpecified(){
                               return localTemp_limit_increase_flagTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTemp_limit_increase_flag(){
                               return localTemp_limit_increase_flag;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Temp_limit_increase_flag
                               */
                               public void setTemp_limit_increase_flag(java.lang.String param){
                            localTemp_limit_increase_flagTracker = param != null;
                                   
                                            this.localTemp_limit_increase_flag=param;
                                    

                               }
                            

                        /**
                        * field for Card_block_code
                        */

                        
                                    protected java.lang.String localCard_block_code ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCard_block_codeTracker = false ;

                           public boolean isCard_block_codeSpecified(){
                               return localCard_block_codeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCard_block_code(){
                               return localCard_block_code;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Card_block_code
                               */
                               public void setCard_block_code(java.lang.String param){
                            localCard_block_codeTracker = param != null;
                                   
                                            this.localCard_block_code=param;
                                    

                               }
                            

                        /**
                        * field for Block_code1
                        */

                        
                                    protected java.lang.String localBlock_code1 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBlock_code1Tracker = false ;

                           public boolean isBlock_code1Specified(){
                               return localBlock_code1Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBlock_code1(){
                               return localBlock_code1;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Block_code1
                               */
                               public void setBlock_code1(java.lang.String param){
                            localBlock_code1Tracker = param != null;
                                   
                                            this.localBlock_code1=param;
                                    

                               }
                            

                        /**
                        * field for Block_code2
                        */

                        
                                    protected java.lang.String localBlock_code2 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBlock_code2Tracker = false ;

                           public boolean isBlock_code2Specified(){
                               return localBlock_code2Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBlock_code2(){
                               return localBlock_code2;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Block_code2
                               */
                               public void setBlock_code2(java.lang.String param){
                            localBlock_code2Tracker = param != null;
                                   
                                            this.localBlock_code2=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/crm/common/CustomerInformation.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":creditCards_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "creditCards_type0",
                           xmlWriter);
                   }

               
                   }
                if (localCardNumberTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "cardNumber", xmlWriter);
                             

                                          if (localCardNumber==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("cardNumber cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCardNumber);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localProductNameTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "productName", xmlWriter);
                             

                                          if (localProductName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("productName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localProductName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCardTypeTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "cardType", xmlWriter);
                             

                                          if (localCardType==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("cardType cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCardType);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localStatusTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "status", xmlWriter);
                             

                                          if (localStatus==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("status cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localStatus);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCard_nameTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "card_name", xmlWriter);
                             

                                          if (localCard_name==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("card_name cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCard_name);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localVPlusAccountNumberTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "vPlusAccountNumber", xmlWriter);
                             

                                          if (localVPlusAccountNumber==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("vPlusAccountNumber cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localVPlusAccountNumber);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCardLogoDescTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "cardLogoDesc", xmlWriter);
                             

                                          if (localCardLogoDesc==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("cardLogoDesc cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCardLogoDesc);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localExpiry_dateTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "expiry_date", xmlWriter);
                             

                                          if (localExpiry_date==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("expiry_date cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localExpiry_date);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCard_limitTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "card_limit", xmlWriter);
                             

                                          if (localCard_limit==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("card_limit cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCard_limit);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCash_limitTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "cash_limit", xmlWriter);
                             

                                          if (localCash_limit==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("cash_limit cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCash_limit);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDue_dateTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "due_date", xmlWriter);
                             

                                          if (localDue_date==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("due_date cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDue_date);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOverlimit_amountTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "overlimit_amount", xmlWriter);
                             

                                          if (localOverlimit_amount==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("overlimit_amount cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOverlimit_amount);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOutstanding_balanceTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "outstanding_balance", xmlWriter);
                             

                                          if (localOutstanding_balance==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("outstanding_balance cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOutstanding_balance);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAvailable_cashTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "available_cash", xmlWriter);
                             

                                          if (localAvailable_cash==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("available_cash cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAvailable_cash);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMin_paymentTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "min_payment", xmlWriter);
                             

                                          if (localMin_payment==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("min_payment cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMin_payment);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPast_due_amountTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "past_due_amount", xmlWriter);
                             

                                          if (localPast_due_amount==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("past_due_amount cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPast_due_amount);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOpen_to_buyTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "open_to_buy", xmlWriter);
                             

                                          if (localOpen_to_buy==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("open_to_buy cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOpen_to_buy);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLast_card_expiry_dateTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "last_card_expiry_date", xmlWriter);
                             

                                          if (localLast_card_expiry_date==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("last_card_expiry_date cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLast_card_expiry_date);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTemp_limit_increase_flagTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "temp_limit_increase_flag", xmlWriter);
                             

                                          if (localTemp_limit_increase_flag==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("temp_limit_increase_flag cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTemp_limit_increase_flag);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCard_block_codeTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "card_block_code", xmlWriter);
                             

                                          if (localCard_block_code==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("card_block_code cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCard_block_code);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBlock_code1Tracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "block_code1", xmlWriter);
                             

                                          if (localBlock_code1==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("block_code1 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBlock_code1);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBlock_code2Tracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "block_code2", xmlWriter);
                             

                                          if (localBlock_code2==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("block_code2 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBlock_code2);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/crm/common/CustomerInformation.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localCardNumberTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "cardNumber"));
                                 
                                        if (localCardNumber != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCardNumber));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("cardNumber cannot be null!!");
                                        }
                                    } if (localProductNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "productName"));
                                 
                                        if (localProductName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localProductName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("productName cannot be null!!");
                                        }
                                    } if (localCardTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "cardType"));
                                 
                                        if (localCardType != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCardType));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("cardType cannot be null!!");
                                        }
                                    } if (localStatusTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "status"));
                                 
                                        if (localStatus != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localStatus));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("status cannot be null!!");
                                        }
                                    } if (localCard_nameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "card_name"));
                                 
                                        if (localCard_name != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCard_name));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("card_name cannot be null!!");
                                        }
                                    } if (localVPlusAccountNumberTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "vPlusAccountNumber"));
                                 
                                        if (localVPlusAccountNumber != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localVPlusAccountNumber));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("vPlusAccountNumber cannot be null!!");
                                        }
                                    } if (localCardLogoDescTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "cardLogoDesc"));
                                 
                                        if (localCardLogoDesc != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCardLogoDesc));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("cardLogoDesc cannot be null!!");
                                        }
                                    } if (localExpiry_dateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "expiry_date"));
                                 
                                        if (localExpiry_date != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localExpiry_date));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("expiry_date cannot be null!!");
                                        }
                                    } if (localCard_limitTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "card_limit"));
                                 
                                        if (localCard_limit != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCard_limit));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("card_limit cannot be null!!");
                                        }
                                    } if (localCash_limitTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "cash_limit"));
                                 
                                        if (localCash_limit != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCash_limit));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("cash_limit cannot be null!!");
                                        }
                                    } if (localDue_dateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "due_date"));
                                 
                                        if (localDue_date != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDue_date));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("due_date cannot be null!!");
                                        }
                                    } if (localOverlimit_amountTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "overlimit_amount"));
                                 
                                        if (localOverlimit_amount != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOverlimit_amount));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("overlimit_amount cannot be null!!");
                                        }
                                    } if (localOutstanding_balanceTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "outstanding_balance"));
                                 
                                        if (localOutstanding_balance != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOutstanding_balance));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("outstanding_balance cannot be null!!");
                                        }
                                    } if (localAvailable_cashTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "available_cash"));
                                 
                                        if (localAvailable_cash != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAvailable_cash));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("available_cash cannot be null!!");
                                        }
                                    } if (localMin_paymentTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "min_payment"));
                                 
                                        if (localMin_payment != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMin_payment));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("min_payment cannot be null!!");
                                        }
                                    } if (localPast_due_amountTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "past_due_amount"));
                                 
                                        if (localPast_due_amount != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPast_due_amount));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("past_due_amount cannot be null!!");
                                        }
                                    } if (localOpen_to_buyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "open_to_buy"));
                                 
                                        if (localOpen_to_buy != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOpen_to_buy));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("open_to_buy cannot be null!!");
                                        }
                                    } if (localLast_card_expiry_dateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "last_card_expiry_date"));
                                 
                                        if (localLast_card_expiry_date != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLast_card_expiry_date));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("last_card_expiry_date cannot be null!!");
                                        }
                                    } if (localTemp_limit_increase_flagTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "temp_limit_increase_flag"));
                                 
                                        if (localTemp_limit_increase_flag != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTemp_limit_increase_flag));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("temp_limit_increase_flag cannot be null!!");
                                        }
                                    } if (localCard_block_codeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "card_block_code"));
                                 
                                        if (localCard_block_code != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCard_block_code));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("card_block_code cannot be null!!");
                                        }
                                    } if (localBlock_code1Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "block_code1"));
                                 
                                        if (localBlock_code1 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBlock_code1));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("block_code1 cannot be null!!");
                                        }
                                    } if (localBlock_code2Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "block_code2"));
                                 
                                        if (localBlock_code2 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBlock_code2));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("block_code2 cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static CreditCards_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            CreditCards_type0 object =
                new CreditCards_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"creditCards_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (CreditCards_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","cardNumber").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"cardNumber" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCardNumber(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","productName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"productName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setProductName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","cardType").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"cardType" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCardType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","status").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"status" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setStatus(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","card_name").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"card_name" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCard_name(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","vPlusAccountNumber").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"vPlusAccountNumber" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setVPlusAccountNumber(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","cardLogoDesc").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"cardLogoDesc" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCardLogoDesc(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","expiry_date").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"expiry_date" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setExpiry_date(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","card_limit").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"card_limit" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCard_limit(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","cash_limit").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"cash_limit" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCash_limit(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","due_date").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"due_date" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDue_date(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","overlimit_amount").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"overlimit_amount" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOverlimit_amount(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","outstanding_balance").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"outstanding_balance" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOutstanding_balance(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","available_cash").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"available_cash" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAvailable_cash(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","min_payment").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"min_payment" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMin_payment(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","past_due_amount").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"past_due_amount" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPast_due_amount(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","open_to_buy").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"open_to_buy" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOpen_to_buy(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","last_card_expiry_date").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"last_card_expiry_date" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLast_card_expiry_date(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","temp_limit_increase_flag").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"temp_limit_increase_flag" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTemp_limit_increase_flag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","card_block_code").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"card_block_code" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCard_block_code(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","block_code1").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"block_code1" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBlock_code1(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","block_code2").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"block_code2" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBlock_code2(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class ExtensionMapper{

          public static java.lang.Object getTypeObject(java.lang.String namespaceURI,
                                                       java.lang.String typeName,
                                                       javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{

              
                  if (
                  "http://www.adcb.com/crm/common/CustomerInformation.xsd".equals(namespaceURI) &&
                  "UDFDetails_type0".equals(typeName)){
                   
                            return  UDFDetails_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/crm/inq/GetCustomerInformation.xsd".equals(namespaceURI) &&
                  "GetCustomerInformationReq_type0".equals(typeName)){
                   
                            return  GetCustomerInformationReq_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/crm/common/CustomerInformation.xsd".equals(namespaceURI) &&
                  "listOfAccounts_type0".equals(typeName)){
                   
                            return  ListOfAccounts_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/crm/common/CustomerInformation.xsd".equals(namespaceURI) &&
                  "Address_type0".equals(typeName)){
                   
                            return  Address_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/crm/common/CustomerInformation.xsd".equals(namespaceURI) &&
                  "leverageDetails_type0".equals(typeName)){
                   
                            return  LeverageDetails_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/crm/common/CustomerInformation.xsd".equals(namespaceURI) &&
                  "listOfLeverageDetails_type0".equals(typeName)){
                   
                            return  ListOfLeverageDetails_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/crm/inq/GetCustomerInformation.xsd".equals(namespaceURI) &&
                  "GetCustomerInformationRes_type0".equals(typeName)){
                   
                            return  GetCustomerInformationRes_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/crm/common/CustomerInformation.xsd".equals(namespaceURI) &&
                  "listOfUDFDetails_type0".equals(typeName)){
                   
                            return  ListOfUDFDetails_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/crm/inq/GetCustomerInformation.xsd".equals(namespaceURI) &&
                  "Customer_type0".equals(typeName)){
                   
                            return  Customer_type0E.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/crm/common/CustomerInformation.xsd".equals(namespaceURI) &&
                  "listOfCreditCards_type0".equals(typeName)){
                   
                            return  ListOfCreditCards_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/crm/common/CustomerInformation.xsd".equals(namespaceURI) &&
                  "accounts_type0".equals(typeName)){
                   
                            return  Accounts_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/crm/common/CustomerInformation.xsd".equals(namespaceURI) &&
                  "listOfAddress_type0".equals(typeName)){
                   
                            return  ListOfAddress_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/crm/common/CustomerInformation.xsd".equals(namespaceURI) &&
                  "listOfCustomer_type0".equals(typeName)){
                   
                            return  ListOfCustomer_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/crm/common/CustomerInformation.xsd".equals(namespaceURI) &&
                  "creditCards_type0".equals(typeName)){
                   
                            return  CreditCards_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/crm/common/CustomerInformation.xsd".equals(namespaceURI) &&
                  "listOfComplaints_type0".equals(typeName)){
                   
                            return  ListOfComplaints_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/crm/inq/GetCustomerInformation.xsd".equals(namespaceURI) &&
                  "ListOfCustomer_type0".equals(typeName)){
                   
                            return  ListOfCustomer_type0E.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/crm/common/CustomerInformation.xsd".equals(namespaceURI) &&
                  "complaints_type0".equals(typeName)){
                   
                            return  Complaints_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/crm/common/CustomerInformation.xsd".equals(namespaceURI) &&
                  "customer_type0".equals(typeName)){
                   
                            return  Customer_type0.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adcb.com/esb/common/header.xsd".equals(namespaceURI) &&
                  "headerType".equals(typeName)){
                   
                            return  HeaderType.Factory.parse(reader);
                        

                  }

              
             throw new org.apache.axis2.databinding.ADBException("Unsupported type " + namespaceURI + " " + typeName);
          }

        }
    
        public static class ListOfAddress_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = listOfAddress_type0
                Namespace URI = http://www.adcb.com/crm/common/CustomerInformation.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for Address
                        * This was an Array!
                        */

                        
                                    protected Address_type0[] localAddress ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAddressTracker = false ;

                           public boolean isAddressSpecified(){
                               return localAddressTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Address_type0[]
                           */
                           public  Address_type0[] getAddress(){
                               return localAddress;
                           }

                           
                        


                               
                              /**
                               * validate the array for Address
                               */
                              protected void validateAddress(Address_type0[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param Address
                              */
                              public void setAddress(Address_type0[] param){
                              
                                   validateAddress(param);

                               localAddressTracker = param != null;
                                      
                                      this.localAddress=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param Address_type0
                             */
                             public void addAddress(Address_type0 param){
                                   if (localAddress == null){
                                   localAddress = new Address_type0[]{};
                                   }

                            
                                 //update the setting tracker
                                localAddressTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localAddress);
                               list.add(param);
                               this.localAddress =
                             (Address_type0[])list.toArray(
                            new Address_type0[list.size()]);

                             }
                             

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/crm/common/CustomerInformation.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":listOfAddress_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "listOfAddress_type0",
                           xmlWriter);
                   }

               
                   }
                if (localAddressTracker){
                                       if (localAddress!=null){
                                            for (int i = 0;i < localAddress.length;i++){
                                                if (localAddress[i] != null){
                                                 localAddress[i].serialize(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","Address"),
                                                           xmlWriter);
                                                } else {
                                                   
                                                        // we don't have to do any thing since minOccures is zero
                                                    
                                                }

                                            }
                                     } else {
                                        
                                               throw new org.apache.axis2.databinding.ADBException("Address cannot be null!!");
                                        
                                    }
                                 }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/crm/common/CustomerInformation.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localAddressTracker){
                             if (localAddress!=null) {
                                 for (int i = 0;i < localAddress.length;i++){

                                    if (localAddress[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                          "Address"));
                                         elementList.add(localAddress[i]);
                                    } else {
                                        
                                                // nothing to do
                                            
                                    }

                                 }
                             } else {
                                 
                                        throw new org.apache.axis2.databinding.ADBException("Address cannot be null!!");
                                    
                             }

                        }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static ListOfAddress_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            ListOfAddress_type0 object =
                new ListOfAddress_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"listOfAddress_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (ListOfAddress_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                        java.util.ArrayList list1 = new java.util.ArrayList();
                    
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","Address").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    list1.add(Address_type0.Factory.parse(reader));
                                                                
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone1 = false;
                                                        while(!loopDone1){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone1 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","Address").equals(reader.getName())){
                                                                    list1.add(Address_type0.Factory.parse(reader));
                                                                        
                                                                }else{
                                                                    loopDone1 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array
                                                        
                                                        object.setAddress((Address_type0[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                Address_type0.class,
                                                                list1));
                                                            
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class Header
        implements org.apache.axis2.databinding.ADBBean{
        
                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://www.adcb.com/esb/common/header.xsd",
                "header",
                "ns1");

            

                        /**
                        * field for Header
                        */

                        
                                    protected HeaderType localHeader ;
                                

                           /**
                           * Auto generated getter method
                           * @return HeaderType
                           */
                           public  HeaderType getHeader(){
                               return localHeader;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Header
                               */
                               public void setHeader(HeaderType param){
                            
                                            this.localHeader=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
               return factory.createOMElement(dataSource,MY_QNAME);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                
                //We can safely assume an element has only one type associated with it
                
                                 if (localHeader==null){
                                   throw new org.apache.axis2.databinding.ADBException("header cannot be null!");
                                 }
                                 localHeader.serialize(MY_QNAME,xmlWriter);
                            

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/esb/common/header.xsd")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                
                //We can safely assume an element has only one type associated with it
                return localHeader.getPullParser(MY_QNAME);

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static Header parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            Header object =
                new Header();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                   
                while(!reader.isEndElement()) {
                    if (reader.isStartElement() ){
                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","header").equals(reader.getName())){
                                
                                                object.setHeader(HeaderType.Factory.parse(reader));
                                            
                              }  // End of if for expected property start element
                                
                             else{
                                        // A start element we are not expecting indicates an invalid parameter was passed
                                        throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                             }
                          
                             } else {
                                reader.next();
                             }  
                           }  // end of while loop
                        



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class GetCustomerInformationReq
        implements org.apache.axis2.databinding.ADBBean{
        
                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://www.adcb.com/crm/inq/GetCustomerInformation.xsd",
                "GetCustomerInformationReq",
                "ns3");

            

                        /**
                        * field for GetCustomerInformationReq
                        */

                        
                                    protected GetCustomerInformationReq_type0 localGetCustomerInformationReq ;
                                

                           /**
                           * Auto generated getter method
                           * @return GetCustomerInformationReq_type0
                           */
                           public  GetCustomerInformationReq_type0 getGetCustomerInformationReq(){
                               return localGetCustomerInformationReq;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param GetCustomerInformationReq
                               */
                               public void setGetCustomerInformationReq(GetCustomerInformationReq_type0 param){
                            
                                            this.localGetCustomerInformationReq=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
               return factory.createOMElement(dataSource,MY_QNAME);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                
                //We can safely assume an element has only one type associated with it
                
                                 if (localGetCustomerInformationReq==null){
                                   throw new org.apache.axis2.databinding.ADBException("GetCustomerInformationReq cannot be null!");
                                 }
                                 localGetCustomerInformationReq.serialize(MY_QNAME,xmlWriter);
                            

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/crm/inq/GetCustomerInformation.xsd")){
                return "ns3";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                
                //We can safely assume an element has only one type associated with it
                return localGetCustomerInformationReq.getPullParser(MY_QNAME);

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static GetCustomerInformationReq parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            GetCustomerInformationReq object =
                new GetCustomerInformationReq();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                   
                while(!reader.isEndElement()) {
                    if (reader.isStartElement() ){
                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/inq/GetCustomerInformation.xsd","GetCustomerInformationReq").equals(reader.getName())){
                                
                                                object.setGetCustomerInformationReq(GetCustomerInformationReq_type0.Factory.parse(reader));
                                            
                              }  // End of if for expected property start element
                                
                             else{
                                        // A start element we are not expecting indicates an invalid parameter was passed
                                        throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                             }
                          
                             } else {
                                reader.next();
                             }  
                           }  // end of while loop
                        



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class UDFDetails_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = UDFDetails_type0
                Namespace URI = http://www.adcb.com/crm/common/CustomerInformation.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for UDFLabel
                        */

                        
                                    protected java.lang.String localUDFLabel ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUDFLabelTracker = false ;

                           public boolean isUDFLabelSpecified(){
                               return localUDFLabelTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUDFLabel(){
                               return localUDFLabel;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param UDFLabel
                               */
                               public void setUDFLabel(java.lang.String param){
                            localUDFLabelTracker = param != null;
                                   
                                            this.localUDFLabel=param;
                                    

                               }
                            

                        /**
                        * field for UDFValue
                        */

                        
                                    protected java.lang.String localUDFValue ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUDFValueTracker = false ;

                           public boolean isUDFValueSpecified(){
                               return localUDFValueTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUDFValue(){
                               return localUDFValue;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param UDFValue
                               */
                               public void setUDFValue(java.lang.String param){
                            localUDFValueTracker = param != null;
                                   
                                            this.localUDFValue=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/crm/common/CustomerInformation.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":UDFDetails_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "UDFDetails_type0",
                           xmlWriter);
                   }

               
                   }
                if (localUDFLabelTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "UDFLabel", xmlWriter);
                             

                                          if (localUDFLabel==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("UDFLabel cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUDFLabel);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUDFValueTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "UDFValue", xmlWriter);
                             

                                          if (localUDFValue==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("UDFValue cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUDFValue);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/crm/common/CustomerInformation.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localUDFLabelTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "UDFLabel"));
                                 
                                        if (localUDFLabel != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUDFLabel));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("UDFLabel cannot be null!!");
                                        }
                                    } if (localUDFValueTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "UDFValue"));
                                 
                                        if (localUDFValue != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUDFValue));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("UDFValue cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static UDFDetails_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            UDFDetails_type0 object =
                new UDFDetails_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"UDFDetails_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (UDFDetails_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","UDFLabel").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"UDFLabel" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUDFLabel(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","UDFValue").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"UDFValue" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUDFValue(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class LeverageDetails_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = leverageDetails_type0
                Namespace URI = http://www.adcb.com/crm/common/CustomerInformation.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for LeverageNo
                        */

                        
                                    protected java.lang.String localLeverageNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLeverageNoTracker = false ;

                           public boolean isLeverageNoSpecified(){
                               return localLeverageNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLeverageNo(){
                               return localLeverageNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LeverageNo
                               */
                               public void setLeverageNo(java.lang.String param){
                            localLeverageNoTracker = param != null;
                                   
                                            this.localLeverageNo=param;
                                    

                               }
                            

                        /**
                        * field for Amount
                        */

                        
                                    protected java.lang.String localAmount ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAmountTracker = false ;

                           public boolean isAmountSpecified(){
                               return localAmountTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAmount(){
                               return localAmount;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Amount
                               */
                               public void setAmount(java.lang.String param){
                            localAmountTracker = param != null;
                                   
                                            this.localAmount=param;
                                    

                               }
                            

                        /**
                        * field for InterestCharged
                        */

                        
                                    protected java.lang.String localInterestCharged ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localInterestChargedTracker = false ;

                           public boolean isInterestChargedSpecified(){
                               return localInterestChargedTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getInterestCharged(){
                               return localInterestCharged;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param InterestCharged
                               */
                               public void setInterestCharged(java.lang.String param){
                            localInterestChargedTracker = param != null;
                                   
                                            this.localInterestCharged=param;
                                    

                               }
                            

                        /**
                        * field for InterestSpread
                        */

                        
                                    protected java.lang.String localInterestSpread ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localInterestSpreadTracker = false ;

                           public boolean isInterestSpreadSpecified(){
                               return localInterestSpreadTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getInterestSpread(){
                               return localInterestSpread;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param InterestSpread
                               */
                               public void setInterestSpread(java.lang.String param){
                            localInterestSpreadTracker = param != null;
                                   
                                            this.localInterestSpread=param;
                                    

                               }
                            

                        /**
                        * field for LastPaymentDate
                        */

                        
                                    protected java.lang.String localLastPaymentDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLastPaymentDateTracker = false ;

                           public boolean isLastPaymentDateSpecified(){
                               return localLastPaymentDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLastPaymentDate(){
                               return localLastPaymentDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LastPaymentDate
                               */
                               public void setLastPaymentDate(java.lang.String param){
                            localLastPaymentDateTracker = param != null;
                                   
                                            this.localLastPaymentDate=param;
                                    

                               }
                            

                        /**
                        * field for NextPaymentDate
                        */

                        
                                    protected java.lang.String localNextPaymentDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNextPaymentDateTracker = false ;

                           public boolean isNextPaymentDateSpecified(){
                               return localNextPaymentDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNextPaymentDate(){
                               return localNextPaymentDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NextPaymentDate
                               */
                               public void setNextPaymentDate(java.lang.String param){
                            localNextPaymentDateTracker = param != null;
                                   
                                            this.localNextPaymentDate=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/crm/common/CustomerInformation.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":leverageDetails_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "leverageDetails_type0",
                           xmlWriter);
                   }

               
                   }
                if (localLeverageNoTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "leverageNo", xmlWriter);
                             

                                          if (localLeverageNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("leverageNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLeverageNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAmountTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "amount", xmlWriter);
                             

                                          if (localAmount==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("amount cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAmount);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localInterestChargedTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "interestCharged", xmlWriter);
                             

                                          if (localInterestCharged==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("interestCharged cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localInterestCharged);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localInterestSpreadTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "interestSpread", xmlWriter);
                             

                                          if (localInterestSpread==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("interestSpread cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localInterestSpread);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLastPaymentDateTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "lastPaymentDate", xmlWriter);
                             

                                          if (localLastPaymentDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("lastPaymentDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLastPaymentDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNextPaymentDateTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "nextPaymentDate", xmlWriter);
                             

                                          if (localNextPaymentDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("nextPaymentDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNextPaymentDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/crm/common/CustomerInformation.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localLeverageNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "leverageNo"));
                                 
                                        if (localLeverageNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLeverageNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("leverageNo cannot be null!!");
                                        }
                                    } if (localAmountTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "amount"));
                                 
                                        if (localAmount != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAmount));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("amount cannot be null!!");
                                        }
                                    } if (localInterestChargedTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "interestCharged"));
                                 
                                        if (localInterestCharged != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localInterestCharged));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("interestCharged cannot be null!!");
                                        }
                                    } if (localInterestSpreadTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "interestSpread"));
                                 
                                        if (localInterestSpread != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localInterestSpread));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("interestSpread cannot be null!!");
                                        }
                                    } if (localLastPaymentDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "lastPaymentDate"));
                                 
                                        if (localLastPaymentDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLastPaymentDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("lastPaymentDate cannot be null!!");
                                        }
                                    } if (localNextPaymentDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "nextPaymentDate"));
                                 
                                        if (localNextPaymentDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNextPaymentDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("nextPaymentDate cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static LeverageDetails_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            LeverageDetails_type0 object =
                new LeverageDetails_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"leverageDetails_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (LeverageDetails_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","leverageNo").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"leverageNo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLeverageNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","amount").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"amount" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAmount(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","interestCharged").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"interestCharged" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setInterestCharged(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","interestSpread").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"interestSpread" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setInterestSpread(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","lastPaymentDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"lastPaymentDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLastPaymentDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","nextPaymentDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"nextPaymentDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNextPaymentDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class ListOfAccounts_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = listOfAccounts_type0
                Namespace URI = http://www.adcb.com/crm/common/CustomerInformation.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for Accounts
                        * This was an Array!
                        */

                        
                                    protected Accounts_type0[] localAccounts ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAccountsTracker = false ;

                           public boolean isAccountsSpecified(){
                               return localAccountsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Accounts_type0[]
                           */
                           public  Accounts_type0[] getAccounts(){
                               return localAccounts;
                           }

                           
                        


                               
                              /**
                               * validate the array for Accounts
                               */
                              protected void validateAccounts(Accounts_type0[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param Accounts
                              */
                              public void setAccounts(Accounts_type0[] param){
                              
                                   validateAccounts(param);

                               localAccountsTracker = param != null;
                                      
                                      this.localAccounts=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param Accounts_type0
                             */
                             public void addAccounts(Accounts_type0 param){
                                   if (localAccounts == null){
                                   localAccounts = new Accounts_type0[]{};
                                   }

                            
                                 //update the setting tracker
                                localAccountsTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localAccounts);
                               list.add(param);
                               this.localAccounts =
                             (Accounts_type0[])list.toArray(
                            new Accounts_type0[list.size()]);

                             }
                             

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/crm/common/CustomerInformation.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":listOfAccounts_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "listOfAccounts_type0",
                           xmlWriter);
                   }

               
                   }
                if (localAccountsTracker){
                                       if (localAccounts!=null){
                                            for (int i = 0;i < localAccounts.length;i++){
                                                if (localAccounts[i] != null){
                                                 localAccounts[i].serialize(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","accounts"),
                                                           xmlWriter);
                                                } else {
                                                   
                                                        // we don't have to do any thing since minOccures is zero
                                                    
                                                }

                                            }
                                     } else {
                                        
                                               throw new org.apache.axis2.databinding.ADBException("accounts cannot be null!!");
                                        
                                    }
                                 }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/crm/common/CustomerInformation.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localAccountsTracker){
                             if (localAccounts!=null) {
                                 for (int i = 0;i < localAccounts.length;i++){

                                    if (localAccounts[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                          "accounts"));
                                         elementList.add(localAccounts[i]);
                                    } else {
                                        
                                                // nothing to do
                                            
                                    }

                                 }
                             } else {
                                 
                                        throw new org.apache.axis2.databinding.ADBException("accounts cannot be null!!");
                                    
                             }

                        }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static ListOfAccounts_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            ListOfAccounts_type0 object =
                new ListOfAccounts_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"listOfAccounts_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (ListOfAccounts_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                        java.util.ArrayList list1 = new java.util.ArrayList();
                    
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","accounts").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    list1.add(Accounts_type0.Factory.parse(reader));
                                                                
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone1 = false;
                                                        while(!loopDone1){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone1 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","accounts").equals(reader.getName())){
                                                                    list1.add(Accounts_type0.Factory.parse(reader));
                                                                        
                                                                }else{
                                                                    loopDone1 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array
                                                        
                                                        object.setAccounts((Accounts_type0[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                Accounts_type0.class,
                                                                list1));
                                                            
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class Address_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = Address_type0
                Namespace URI = http://www.adcb.com/crm/common/CustomerInformation.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for Type
                        */

                        
                                    protected java.lang.String localType ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTypeTracker = false ;

                           public boolean isTypeSpecified(){
                               return localTypeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getType(){
                               return localType;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Type
                               */
                               public void setType(java.lang.String param){
                            localTypeTracker = param != null;
                                   
                                            this.localType=param;
                                    

                               }
                            

                        /**
                        * field for AddressLine_1
                        */

                        
                                    protected java.lang.String localAddressLine_1 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAddressLine_1Tracker = false ;

                           public boolean isAddressLine_1Specified(){
                               return localAddressLine_1Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAddressLine_1(){
                               return localAddressLine_1;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AddressLine_1
                               */
                               public void setAddressLine_1(java.lang.String param){
                            localAddressLine_1Tracker = param != null;
                                   
                                            this.localAddressLine_1=param;
                                    

                               }
                            

                        /**
                        * field for AddressLine_2
                        */

                        
                                    protected java.lang.String localAddressLine_2 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAddressLine_2Tracker = false ;

                           public boolean isAddressLine_2Specified(){
                               return localAddressLine_2Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAddressLine_2(){
                               return localAddressLine_2;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AddressLine_2
                               */
                               public void setAddressLine_2(java.lang.String param){
                            localAddressLine_2Tracker = param != null;
                                   
                                            this.localAddressLine_2=param;
                                    

                               }
                            

                        /**
                        * field for City
                        */

                        
                                    protected java.lang.String localCity ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCityTracker = false ;

                           public boolean isCitySpecified(){
                               return localCityTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCity(){
                               return localCity;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param City
                               */
                               public void setCity(java.lang.String param){
                            localCityTracker = param != null;
                                   
                                            this.localCity=param;
                                    

                               }
                            

                        /**
                        * field for State
                        */

                        
                                    protected java.lang.String localState ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localStateTracker = false ;

                           public boolean isStateSpecified(){
                               return localStateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getState(){
                               return localState;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param State
                               */
                               public void setState(java.lang.String param){
                            localStateTracker = param != null;
                                   
                                            this.localState=param;
                                    

                               }
                            

                        /**
                        * field for Country
                        */

                        
                                    protected java.lang.String localCountry ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCountryTracker = false ;

                           public boolean isCountrySpecified(){
                               return localCountryTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCountry(){
                               return localCountry;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Country
                               */
                               public void setCountry(java.lang.String param){
                            localCountryTracker = param != null;
                                   
                                            this.localCountry=param;
                                    

                               }
                            

                        /**
                        * field for POBox
                        */

                        
                                    protected java.lang.String localPOBox ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPOBoxTracker = false ;

                           public boolean isPOBoxSpecified(){
                               return localPOBoxTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPOBox(){
                               return localPOBox;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param POBox
                               */
                               public void setPOBox(java.lang.String param){
                            localPOBoxTracker = param != null;
                                   
                                            this.localPOBox=param;
                                    

                               }
                            

                        /**
                        * field for ZipCode
                        */

                        
                                    protected java.lang.String localZipCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localZipCodeTracker = false ;

                           public boolean isZipCodeSpecified(){
                               return localZipCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getZipCode(){
                               return localZipCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ZipCode
                               */
                               public void setZipCode(java.lang.String param){
                            localZipCodeTracker = param != null;
                                   
                                            this.localZipCode=param;
                                    

                               }
                            

                        /**
                        * field for PhoneNo
                        */

                        
                                    protected java.lang.String localPhoneNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPhoneNoTracker = false ;

                           public boolean isPhoneNoSpecified(){
                               return localPhoneNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPhoneNo(){
                               return localPhoneNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PhoneNo
                               */
                               public void setPhoneNo(java.lang.String param){
                            localPhoneNoTracker = param != null;
                                   
                                            this.localPhoneNo=param;
                                    

                               }
                            

                        /**
                        * field for HomeLandlineNo
                        */

                        
                                    protected java.lang.String localHomeLandlineNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHomeLandlineNoTracker = false ;

                           public boolean isHomeLandlineNoSpecified(){
                               return localHomeLandlineNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHomeLandlineNo(){
                               return localHomeLandlineNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HomeLandlineNo
                               */
                               public void setHomeLandlineNo(java.lang.String param){
                            localHomeLandlineNoTracker = param != null;
                                   
                                            this.localHomeLandlineNo=param;
                                    

                               }
                            

                        /**
                        * field for OfficeLandlineNo
                        */

                        
                                    protected java.lang.String localOfficeLandlineNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOfficeLandlineNoTracker = false ;

                           public boolean isOfficeLandlineNoSpecified(){
                               return localOfficeLandlineNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOfficeLandlineNo(){
                               return localOfficeLandlineNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OfficeLandlineNo
                               */
                               public void setOfficeLandlineNo(java.lang.String param){
                            localOfficeLandlineNoTracker = param != null;
                                   
                                            this.localOfficeLandlineNo=param;
                                    

                               }
                            

                        /**
                        * field for MobileNo
                        */

                        
                                    protected java.lang.String localMobileNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMobileNoTracker = false ;

                           public boolean isMobileNoSpecified(){
                               return localMobileNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMobileNo(){
                               return localMobileNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MobileNo
                               */
                               public void setMobileNo(java.lang.String param){
                            localMobileNoTracker = param != null;
                                   
                                            this.localMobileNo=param;
                                    

                               }
                            

                        /**
                        * field for Fax
                        */

                        
                                    protected java.lang.String localFax ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFaxTracker = false ;

                           public boolean isFaxSpecified(){
                               return localFaxTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFax(){
                               return localFax;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Fax
                               */
                               public void setFax(java.lang.String param){
                            localFaxTracker = param != null;
                                   
                                            this.localFax=param;
                                    

                               }
                            

                        /**
                        * field for EMail
                        */

                        
                                    protected java.lang.String localEMail ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEMailTracker = false ;

                           public boolean isEMailSpecified(){
                               return localEMailTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEMail(){
                               return localEMail;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EMail
                               */
                               public void setEMail(java.lang.String param){
                            localEMailTracker = param != null;
                                   
                                            this.localEMail=param;
                                    

                               }
                            

                        /**
                        * field for CompanyName
                        */

                        
                                    protected java.lang.String localCompanyName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCompanyNameTracker = false ;

                           public boolean isCompanyNameSpecified(){
                               return localCompanyNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCompanyName(){
                               return localCompanyName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CompanyName
                               */
                               public void setCompanyName(java.lang.String param){
                            localCompanyNameTracker = param != null;
                                   
                                            this.localCompanyName=param;
                                    

                               }
                            

                        /**
                        * field for DepartmentName
                        */

                        
                                    protected java.lang.String localDepartmentName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDepartmentNameTracker = false ;

                           public boolean isDepartmentNameSpecified(){
                               return localDepartmentNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDepartmentName(){
                               return localDepartmentName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DepartmentName
                               */
                               public void setDepartmentName(java.lang.String param){
                            localDepartmentNameTracker = param != null;
                                   
                                            this.localDepartmentName=param;
                                    

                               }
                            

                        /**
                        * field for BuildingName
                        */

                        
                                    protected java.lang.String localBuildingName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBuildingNameTracker = false ;

                           public boolean isBuildingNameSpecified(){
                               return localBuildingNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBuildingName(){
                               return localBuildingName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BuildingName
                               */
                               public void setBuildingName(java.lang.String param){
                            localBuildingNameTracker = param != null;
                                   
                                            this.localBuildingName=param;
                                    

                               }
                            

                        /**
                        * field for StreetName
                        */

                        
                                    protected java.lang.String localStreetName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localStreetNameTracker = false ;

                           public boolean isStreetNameSpecified(){
                               return localStreetNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getStreetName(){
                               return localStreetName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param StreetName
                               */
                               public void setStreetName(java.lang.String param){
                            localStreetNameTracker = param != null;
                                   
                                            this.localStreetName=param;
                                    

                               }
                            

                        /**
                        * field for FlatNo
                        */

                        
                                    protected java.lang.String localFlatNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFlatNoTracker = false ;

                           public boolean isFlatNoSpecified(){
                               return localFlatNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFlatNo(){
                               return localFlatNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FlatNo
                               */
                               public void setFlatNo(java.lang.String param){
                            localFlatNoTracker = param != null;
                                   
                                            this.localFlatNo=param;
                                    

                               }
                            

                        /**
                        * field for ResidenceArea
                        */

                        
                                    protected java.lang.String localResidenceArea ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localResidenceAreaTracker = false ;

                           public boolean isResidenceAreaSpecified(){
                               return localResidenceAreaTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getResidenceArea(){
                               return localResidenceArea;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ResidenceArea
                               */
                               public void setResidenceArea(java.lang.String param){
                            localResidenceAreaTracker = param != null;
                                   
                                            this.localResidenceArea=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/crm/common/CustomerInformation.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":Address_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "Address_type0",
                           xmlWriter);
                   }

               
                   }
                if (localTypeTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "Type", xmlWriter);
                             

                                          if (localType==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("Type cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localType);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAddressLine_1Tracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "addressLine_1", xmlWriter);
                             

                                          if (localAddressLine_1==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("addressLine_1 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAddressLine_1);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAddressLine_2Tracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "addressLine_2", xmlWriter);
                             

                                          if (localAddressLine_2==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("addressLine_2 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAddressLine_2);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCityTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "city", xmlWriter);
                             

                                          if (localCity==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("city cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCity);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localStateTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "state", xmlWriter);
                             

                                          if (localState==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("state cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localState);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCountryTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "country", xmlWriter);
                             

                                          if (localCountry==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("country cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCountry);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPOBoxTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "POBox", xmlWriter);
                             

                                          if (localPOBox==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("POBox cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPOBox);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localZipCodeTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "zipCode", xmlWriter);
                             

                                          if (localZipCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("zipCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localZipCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPhoneNoTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "phoneNo", xmlWriter);
                             

                                          if (localPhoneNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("phoneNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPhoneNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHomeLandlineNoTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "homeLandlineNo", xmlWriter);
                             

                                          if (localHomeLandlineNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("homeLandlineNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHomeLandlineNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOfficeLandlineNoTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "officeLandlineNo", xmlWriter);
                             

                                          if (localOfficeLandlineNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("officeLandlineNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOfficeLandlineNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMobileNoTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "mobileNo", xmlWriter);
                             

                                          if (localMobileNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("mobileNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMobileNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFaxTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "fax", xmlWriter);
                             

                                          if (localFax==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("fax cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFax);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEMailTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "eMail", xmlWriter);
                             

                                          if (localEMail==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("eMail cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEMail);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCompanyNameTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "companyName", xmlWriter);
                             

                                          if (localCompanyName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("companyName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCompanyName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDepartmentNameTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "departmentName", xmlWriter);
                             

                                          if (localDepartmentName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("departmentName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDepartmentName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBuildingNameTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "buildingName", xmlWriter);
                             

                                          if (localBuildingName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("buildingName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBuildingName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localStreetNameTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "streetName", xmlWriter);
                             

                                          if (localStreetName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("streetName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localStreetName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFlatNoTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "flatNo", xmlWriter);
                             

                                          if (localFlatNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("flatNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFlatNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localResidenceAreaTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "residenceArea", xmlWriter);
                             

                                          if (localResidenceArea==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("residenceArea cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localResidenceArea);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/crm/common/CustomerInformation.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "Type"));
                                 
                                        if (localType != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localType));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("Type cannot be null!!");
                                        }
                                    } if (localAddressLine_1Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "addressLine_1"));
                                 
                                        if (localAddressLine_1 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAddressLine_1));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("addressLine_1 cannot be null!!");
                                        }
                                    } if (localAddressLine_2Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "addressLine_2"));
                                 
                                        if (localAddressLine_2 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAddressLine_2));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("addressLine_2 cannot be null!!");
                                        }
                                    } if (localCityTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "city"));
                                 
                                        if (localCity != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCity));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("city cannot be null!!");
                                        }
                                    } if (localStateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "state"));
                                 
                                        if (localState != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localState));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("state cannot be null!!");
                                        }
                                    } if (localCountryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "country"));
                                 
                                        if (localCountry != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCountry));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("country cannot be null!!");
                                        }
                                    } if (localPOBoxTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "POBox"));
                                 
                                        if (localPOBox != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPOBox));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("POBox cannot be null!!");
                                        }
                                    } if (localZipCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "zipCode"));
                                 
                                        if (localZipCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localZipCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("zipCode cannot be null!!");
                                        }
                                    } if (localPhoneNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "phoneNo"));
                                 
                                        if (localPhoneNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPhoneNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("phoneNo cannot be null!!");
                                        }
                                    } if (localHomeLandlineNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "homeLandlineNo"));
                                 
                                        if (localHomeLandlineNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHomeLandlineNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("homeLandlineNo cannot be null!!");
                                        }
                                    } if (localOfficeLandlineNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "officeLandlineNo"));
                                 
                                        if (localOfficeLandlineNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOfficeLandlineNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("officeLandlineNo cannot be null!!");
                                        }
                                    } if (localMobileNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "mobileNo"));
                                 
                                        if (localMobileNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMobileNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("mobileNo cannot be null!!");
                                        }
                                    } if (localFaxTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "fax"));
                                 
                                        if (localFax != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFax));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("fax cannot be null!!");
                                        }
                                    } if (localEMailTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "eMail"));
                                 
                                        if (localEMail != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEMail));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("eMail cannot be null!!");
                                        }
                                    } if (localCompanyNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "companyName"));
                                 
                                        if (localCompanyName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCompanyName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("companyName cannot be null!!");
                                        }
                                    } if (localDepartmentNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "departmentName"));
                                 
                                        if (localDepartmentName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDepartmentName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("departmentName cannot be null!!");
                                        }
                                    } if (localBuildingNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "buildingName"));
                                 
                                        if (localBuildingName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBuildingName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("buildingName cannot be null!!");
                                        }
                                    } if (localStreetNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "streetName"));
                                 
                                        if (localStreetName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localStreetName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("streetName cannot be null!!");
                                        }
                                    } if (localFlatNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "flatNo"));
                                 
                                        if (localFlatNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFlatNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("flatNo cannot be null!!");
                                        }
                                    } if (localResidenceAreaTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "residenceArea"));
                                 
                                        if (localResidenceArea != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localResidenceArea));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("residenceArea cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static Address_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            Address_type0 object =
                new Address_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"Address_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (Address_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","Type").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"Type" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","addressLine_1").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"addressLine_1" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAddressLine_1(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","addressLine_2").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"addressLine_2" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAddressLine_2(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","city").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"city" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCity(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","state").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"state" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setState(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","country").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"country" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCountry(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","POBox").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"POBox" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPOBox(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","zipCode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"zipCode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setZipCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","phoneNo").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"phoneNo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPhoneNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","homeLandlineNo").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"homeLandlineNo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHomeLandlineNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","officeLandlineNo").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"officeLandlineNo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOfficeLandlineNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","mobileNo").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"mobileNo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMobileNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","fax").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"fax" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFax(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","eMail").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"eMail" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEMail(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","companyName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"companyName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCompanyName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","departmentName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"departmentName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDepartmentName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","buildingName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"buildingName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBuildingName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","streetName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"streetName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setStreetName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","flatNo").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"flatNo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFlatNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","residenceArea").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"residenceArea" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setResidenceArea(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class ListOfLeverageDetails_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = listOfLeverageDetails_type0
                Namespace URI = http://www.adcb.com/crm/common/CustomerInformation.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for LeverageDetails
                        * This was an Array!
                        */

                        
                                    protected LeverageDetails_type0[] localLeverageDetails ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLeverageDetailsTracker = false ;

                           public boolean isLeverageDetailsSpecified(){
                               return localLeverageDetailsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return LeverageDetails_type0[]
                           */
                           public  LeverageDetails_type0[] getLeverageDetails(){
                               return localLeverageDetails;
                           }

                           
                        


                               
                              /**
                               * validate the array for LeverageDetails
                               */
                              protected void validateLeverageDetails(LeverageDetails_type0[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param LeverageDetails
                              */
                              public void setLeverageDetails(LeverageDetails_type0[] param){
                              
                                   validateLeverageDetails(param);

                               localLeverageDetailsTracker = param != null;
                                      
                                      this.localLeverageDetails=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param LeverageDetails_type0
                             */
                             public void addLeverageDetails(LeverageDetails_type0 param){
                                   if (localLeverageDetails == null){
                                   localLeverageDetails = new LeverageDetails_type0[]{};
                                   }

                            
                                 //update the setting tracker
                                localLeverageDetailsTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localLeverageDetails);
                               list.add(param);
                               this.localLeverageDetails =
                             (LeverageDetails_type0[])list.toArray(
                            new LeverageDetails_type0[list.size()]);

                             }
                             

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/crm/common/CustomerInformation.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":listOfLeverageDetails_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "listOfLeverageDetails_type0",
                           xmlWriter);
                   }

               
                   }
                if (localLeverageDetailsTracker){
                                       if (localLeverageDetails!=null){
                                            for (int i = 0;i < localLeverageDetails.length;i++){
                                                if (localLeverageDetails[i] != null){
                                                 localLeverageDetails[i].serialize(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","leverageDetails"),
                                                           xmlWriter);
                                                } else {
                                                   
                                                        // we don't have to do any thing since minOccures is zero
                                                    
                                                }

                                            }
                                     } else {
                                        
                                               throw new org.apache.axis2.databinding.ADBException("leverageDetails cannot be null!!");
                                        
                                    }
                                 }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/crm/common/CustomerInformation.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localLeverageDetailsTracker){
                             if (localLeverageDetails!=null) {
                                 for (int i = 0;i < localLeverageDetails.length;i++){

                                    if (localLeverageDetails[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                          "leverageDetails"));
                                         elementList.add(localLeverageDetails[i]);
                                    } else {
                                        
                                                // nothing to do
                                            
                                    }

                                 }
                             } else {
                                 
                                        throw new org.apache.axis2.databinding.ADBException("leverageDetails cannot be null!!");
                                    
                             }

                        }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static ListOfLeverageDetails_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            ListOfLeverageDetails_type0 object =
                new ListOfLeverageDetails_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"listOfLeverageDetails_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (ListOfLeverageDetails_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                        java.util.ArrayList list1 = new java.util.ArrayList();
                    
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","leverageDetails").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    list1.add(LeverageDetails_type0.Factory.parse(reader));
                                                                
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone1 = false;
                                                        while(!loopDone1){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone1 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","leverageDetails").equals(reader.getName())){
                                                                    list1.add(LeverageDetails_type0.Factory.parse(reader));
                                                                        
                                                                }else{
                                                                    loopDone1 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array
                                                        
                                                        object.setLeverageDetails((LeverageDetails_type0[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                LeverageDetails_type0.class,
                                                                list1));
                                                            
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class GetCustomerInformationResMsg
        implements org.apache.axis2.databinding.ADBBean{
        
                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://www.adcb.com/crm/inq/GetCustomerInformation.xsd",
                "GetCustomerInformationResMsg",
                "ns3");

            

                        /**
                        * field for Header
                        */

                        
                                    protected HeaderType localHeader ;
                                

                           /**
                           * Auto generated getter method
                           * @return HeaderType
                           */
                           public  HeaderType getHeader(){
                               return localHeader;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Header
                               */
                               public void setHeader(HeaderType param){
                            
                                            this.localHeader=param;
                                    

                               }
                            

                        /**
                        * field for GetCustomerInformationRes
                        */

                        
                                    protected GetCustomerInformationRes_type0 localGetCustomerInformationRes ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localGetCustomerInformationResTracker = false ;

                           public boolean isGetCustomerInformationResSpecified(){
                               return localGetCustomerInformationResTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return GetCustomerInformationRes_type0
                           */
                           public  GetCustomerInformationRes_type0 getGetCustomerInformationRes(){
                               return localGetCustomerInformationRes;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param GetCustomerInformationRes
                               */
                               public void setGetCustomerInformationRes(GetCustomerInformationRes_type0 param){
                            localGetCustomerInformationResTracker = param != null;
                                   
                                            this.localGetCustomerInformationRes=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
               return factory.createOMElement(dataSource,MY_QNAME);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/crm/inq/GetCustomerInformation.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":GetCustomerInformationResMsg",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "GetCustomerInformationResMsg",
                           xmlWriter);
                   }

               
                   }
               
                                            if (localHeader==null){
                                                 throw new org.apache.axis2.databinding.ADBException("header cannot be null!!");
                                            }
                                           localHeader.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","header"),
                                               xmlWriter);
                                         if (localGetCustomerInformationResTracker){
                                            if (localGetCustomerInformationRes==null){
                                                 throw new org.apache.axis2.databinding.ADBException("GetCustomerInformationRes cannot be null!!");
                                            }
                                           localGetCustomerInformationRes.serialize(new javax.xml.namespace.QName("http://www.adcb.com/crm/inq/GetCustomerInformation.xsd","GetCustomerInformationRes"),
                                               xmlWriter);
                                        }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/crm/inq/GetCustomerInformation.xsd")){
                return "ns3";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "header"));
                            
                            
                                    if (localHeader==null){
                                         throw new org.apache.axis2.databinding.ADBException("header cannot be null!!");
                                    }
                                    elementList.add(localHeader);
                                 if (localGetCustomerInformationResTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/inq/GetCustomerInformation.xsd",
                                                                      "GetCustomerInformationRes"));
                            
                            
                                    if (localGetCustomerInformationRes==null){
                                         throw new org.apache.axis2.databinding.ADBException("GetCustomerInformationRes cannot be null!!");
                                    }
                                    elementList.add(localGetCustomerInformationRes);
                                }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static GetCustomerInformationResMsg parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            GetCustomerInformationResMsg object =
                new GetCustomerInformationResMsg();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"GetCustomerInformationResMsg".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (GetCustomerInformationResMsg)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","header").equals(reader.getName())){
                                
                                                object.setHeader(HeaderType.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                                }
                            
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/inq/GetCustomerInformation.xsd","GetCustomerInformationRes").equals(reader.getName())){
                                
                                                object.setGetCustomerInformationRes(GetCustomerInformationRes_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class Customer_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = customer_type0
                Namespace URI = http://www.adcb.com/crm/common/CustomerInformation.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for CustomerID
                        */

                        
                                    protected java.lang.String localCustomerID ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustomerIDTracker = false ;

                           public boolean isCustomerIDSpecified(){
                               return localCustomerIDTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustomerID(){
                               return localCustomerID;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustomerID
                               */
                               public void setCustomerID(java.lang.String param){
                            localCustomerIDTracker = param != null;
                                   
                                            this.localCustomerID=param;
                                    

                               }
                            

                        /**
                        * field for Prefix
                        */

                        
                                    protected java.lang.String localPrefix ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPrefixTracker = false ;

                           public boolean isPrefixSpecified(){
                               return localPrefixTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPrefix(){
                               return localPrefix;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Prefix
                               */
                               public void setPrefix(java.lang.String param){
                            localPrefixTracker = param != null;
                                   
                                            this.localPrefix=param;
                                    

                               }
                            

                        /**
                        * field for FullName
                        */

                        
                                    protected java.lang.String localFullName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFullNameTracker = false ;

                           public boolean isFullNameSpecified(){
                               return localFullNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFullName(){
                               return localFullName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FullName
                               */
                               public void setFullName(java.lang.String param){
                            localFullNameTracker = param != null;
                                   
                                            this.localFullName=param;
                                    

                               }
                            

                        /**
                        * field for DateofCIDOpening
                        */

                        
                                    protected java.lang.String localDateofCIDOpening ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDateofCIDOpeningTracker = false ;

                           public boolean isDateofCIDOpeningSpecified(){
                               return localDateofCIDOpeningTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDateofCIDOpening(){
                               return localDateofCIDOpening;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DateofCIDOpening
                               */
                               public void setDateofCIDOpening(java.lang.String param){
                            localDateofCIDOpeningTracker = param != null;
                                   
                                            this.localDateofCIDOpening=param;
                                    

                               }
                            

                        /**
                        * field for LangPreference
                        */

                        
                                    protected java.lang.String localLangPreference ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLangPreferenceTracker = false ;

                           public boolean isLangPreferenceSpecified(){
                               return localLangPreferenceTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLangPreference(){
                               return localLangPreference;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LangPreference
                               */
                               public void setLangPreference(java.lang.String param){
                            localLangPreferenceTracker = param != null;
                                   
                                            this.localLangPreference=param;
                                    

                               }
                            

                        /**
                        * field for CustIslamicFlag
                        */

                        
                                    protected java.lang.String localCustIslamicFlag ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustIslamicFlagTracker = false ;

                           public boolean isCustIslamicFlagSpecified(){
                               return localCustIslamicFlagTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustIslamicFlag(){
                               return localCustIslamicFlag;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustIslamicFlag
                               */
                               public void setCustIslamicFlag(java.lang.String param){
                            localCustIslamicFlagTracker = param != null;
                                   
                                            this.localCustIslamicFlag=param;
                                    

                               }
                            

                        /**
                        * field for RMCode
                        */

                        
                                    protected java.lang.String localRMCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRMCodeTracker = false ;

                           public boolean isRMCodeSpecified(){
                               return localRMCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRMCode(){
                               return localRMCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RMCode
                               */
                               public void setRMCode(java.lang.String param){
                            localRMCodeTracker = param != null;
                                   
                                            this.localRMCode=param;
                                    

                               }
                            

                        /**
                        * field for RMName
                        */

                        
                                    protected java.lang.String localRMName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRMNameTracker = false ;

                           public boolean isRMNameSpecified(){
                               return localRMNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRMName(){
                               return localRMName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RMName
                               */
                               public void setRMName(java.lang.String param){
                            localRMNameTracker = param != null;
                                   
                                            this.localRMName=param;
                                    

                               }
                            

                        /**
                        * field for SMSBanking
                        */

                        
                                    protected java.lang.String localSMSBanking ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSMSBankingTracker = false ;

                           public boolean isSMSBankingSpecified(){
                               return localSMSBankingTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSMSBanking(){
                               return localSMSBanking;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SMSBanking
                               */
                               public void setSMSBanking(java.lang.String param){
                            localSMSBankingTracker = param != null;
                                   
                                            this.localSMSBanking=param;
                                    

                               }
                            

                        /**
                        * field for InternetBanking
                        */

                        
                                    protected java.lang.String localInternetBanking ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localInternetBankingTracker = false ;

                           public boolean isInternetBankingSpecified(){
                               return localInternetBankingTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getInternetBanking(){
                               return localInternetBanking;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param InternetBanking
                               */
                               public void setInternetBanking(java.lang.String param){
                            localInternetBankingTracker = param != null;
                                   
                                            this.localInternetBanking=param;
                                    

                               }
                            

                        /**
                        * field for IVR
                        */

                        
                                    protected java.lang.String localIVR ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIVRTracker = false ;

                           public boolean isIVRSpecified(){
                               return localIVRTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getIVR(){
                               return localIVR;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param IVR
                               */
                               public void setIVR(java.lang.String param){
                            localIVRTracker = param != null;
                                   
                                            this.localIVR=param;
                                    

                               }
                            

                        /**
                        * field for MIBRegStatus
                        */

                        
                                    protected java.lang.String localMIBRegStatus ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMIBRegStatusTracker = false ;

                           public boolean isMIBRegStatusSpecified(){
                               return localMIBRegStatusTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMIBRegStatus(){
                               return localMIBRegStatus;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MIBRegStatus
                               */
                               public void setMIBRegStatus(java.lang.String param){
                            localMIBRegStatusTracker = param != null;
                                   
                                            this.localMIBRegStatus=param;
                                    

                               }
                            

                        /**
                        * field for TPINCreatedDate
                        */

                        
                                    protected java.lang.String localTPINCreatedDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTPINCreatedDateTracker = false ;

                           public boolean isTPINCreatedDateSpecified(){
                               return localTPINCreatedDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTPINCreatedDate(){
                               return localTPINCreatedDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TPINCreatedDate
                               */
                               public void setTPINCreatedDate(java.lang.String param){
                            localTPINCreatedDateTracker = param != null;
                                   
                                            this.localTPINCreatedDate=param;
                                    

                               }
                            

                        /**
                        * field for LastTPINUpdatedDate
                        */

                        
                                    protected java.lang.String localLastTPINUpdatedDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLastTPINUpdatedDateTracker = false ;

                           public boolean isLastTPINUpdatedDateSpecified(){
                               return localLastTPINUpdatedDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLastTPINUpdatedDate(){
                               return localLastTPINUpdatedDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LastTPINUpdatedDate
                               */
                               public void setLastTPINUpdatedDate(java.lang.String param){
                            localLastTPINUpdatedDateTracker = param != null;
                                   
                                            this.localLastTPINUpdatedDate=param;
                                    

                               }
                            

                        /**
                        * field for TotalTouchpoint
                        */

                        
                                    protected java.lang.String localTotalTouchpoint ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTotalTouchpointTracker = false ;

                           public boolean isTotalTouchpointSpecified(){
                               return localTotalTouchpointTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTotalTouchpoint(){
                               return localTotalTouchpoint;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TotalTouchpoint
                               */
                               public void setTotalTouchpoint(java.lang.String param){
                            localTotalTouchpointTracker = param != null;
                                   
                                            this.localTotalTouchpoint=param;
                                    

                               }
                            

                        /**
                        * field for ExpiryCurrentMonth
                        */

                        
                                    protected java.lang.String localExpiryCurrentMonth ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localExpiryCurrentMonthTracker = false ;

                           public boolean isExpiryCurrentMonthSpecified(){
                               return localExpiryCurrentMonthTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getExpiryCurrentMonth(){
                               return localExpiryCurrentMonth;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ExpiryCurrentMonth
                               */
                               public void setExpiryCurrentMonth(java.lang.String param){
                            localExpiryCurrentMonthTracker = param != null;
                                   
                                            this.localExpiryCurrentMonth=param;
                                    

                               }
                            

                        /**
                        * field for ExpiryNextMonth
                        */

                        
                                    protected java.lang.String localExpiryNextMonth ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localExpiryNextMonthTracker = false ;

                           public boolean isExpiryNextMonthSpecified(){
                               return localExpiryNextMonthTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getExpiryNextMonth(){
                               return localExpiryNextMonth;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ExpiryNextMonth
                               */
                               public void setExpiryNextMonth(java.lang.String param){
                            localExpiryNextMonthTracker = param != null;
                                   
                                            this.localExpiryNextMonth=param;
                                    

                               }
                            

                        /**
                        * field for EStatementSubFlag
                        */

                        
                                    protected java.lang.String localEStatementSubFlag ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEStatementSubFlagTracker = false ;

                           public boolean isEStatementSubFlagSpecified(){
                               return localEStatementSubFlagTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEStatementSubFlag(){
                               return localEStatementSubFlag;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EStatementSubFlag
                               */
                               public void setEStatementSubFlag(java.lang.String param){
                            localEStatementSubFlagTracker = param != null;
                                   
                                            this.localEStatementSubFlag=param;
                                    

                               }
                            

                        /**
                        * field for EStatementSubDate
                        */

                        
                                    protected java.lang.String localEStatementSubDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEStatementSubDateTracker = false ;

                           public boolean isEStatementSubDateSpecified(){
                               return localEStatementSubDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEStatementSubDate(){
                               return localEStatementSubDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EStatementSubDate
                               */
                               public void setEStatementSubDate(java.lang.String param){
                            localEStatementSubDateTracker = param != null;
                                   
                                            this.localEStatementSubDate=param;
                                    

                               }
                            

                        /**
                        * field for ShortName
                        */

                        
                                    protected java.lang.String localShortName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localShortNameTracker = false ;

                           public boolean isShortNameSpecified(){
                               return localShortNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getShortName(){
                               return localShortName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ShortName
                               */
                               public void setShortName(java.lang.String param){
                            localShortNameTracker = param != null;
                                   
                                            this.localShortName=param;
                                    

                               }
                            

                        /**
                        * field for CustomerIC
                        */

                        
                                    protected java.lang.String localCustomerIC ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustomerICTracker = false ;

                           public boolean isCustomerICSpecified(){
                               return localCustomerICTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustomerIC(){
                               return localCustomerIC;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustomerIC
                               */
                               public void setCustomerIC(java.lang.String param){
                            localCustomerICTracker = param != null;
                                   
                                            this.localCustomerIC=param;
                                    

                               }
                            

                        /**
                        * field for DateofBirth
                        */

                        
                                    protected java.lang.String localDateofBirth ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDateofBirthTracker = false ;

                           public boolean isDateofBirthSpecified(){
                               return localDateofBirthTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDateofBirth(){
                               return localDateofBirth;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DateofBirth
                               */
                               public void setDateofBirth(java.lang.String param){
                            localDateofBirthTracker = param != null;
                                   
                                            this.localDateofBirth=param;
                                    

                               }
                            

                        /**
                        * field for Gender
                        */

                        
                                    protected java.lang.String localGender ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localGenderTracker = false ;

                           public boolean isGenderSpecified(){
                               return localGenderTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getGender(){
                               return localGender;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Gender
                               */
                               public void setGender(java.lang.String param){
                            localGenderTracker = param != null;
                                   
                                            this.localGender=param;
                                    

                               }
                            

                        /**
                        * field for MaritalStatus
                        */

                        
                                    protected java.lang.String localMaritalStatus ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMaritalStatusTracker = false ;

                           public boolean isMaritalStatusSpecified(){
                               return localMaritalStatusTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMaritalStatus(){
                               return localMaritalStatus;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MaritalStatus
                               */
                               public void setMaritalStatus(java.lang.String param){
                            localMaritalStatusTracker = param != null;
                                   
                                            this.localMaritalStatus=param;
                                    

                               }
                            

                        /**
                        * field for EducationalQual
                        */

                        
                                    protected java.lang.String localEducationalQual ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEducationalQualTracker = false ;

                           public boolean isEducationalQualSpecified(){
                               return localEducationalQualTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEducationalQual(){
                               return localEducationalQual;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EducationalQual
                               */
                               public void setEducationalQual(java.lang.String param){
                            localEducationalQualTracker = param != null;
                                   
                                            this.localEducationalQual=param;
                                    

                               }
                            

                        /**
                        * field for NoofDependents
                        */

                        
                                    protected java.lang.String localNoofDependents ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNoofDependentsTracker = false ;

                           public boolean isNoofDependentsSpecified(){
                               return localNoofDependentsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNoofDependents(){
                               return localNoofDependents;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NoofDependents
                               */
                               public void setNoofDependents(java.lang.String param){
                            localNoofDependentsTracker = param != null;
                                   
                                            this.localNoofDependents=param;
                                    

                               }
                            

                        /**
                        * field for NationalityCode
                        */

                        
                                    protected java.lang.String localNationalityCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNationalityCodeTracker = false ;

                           public boolean isNationalityCodeSpecified(){
                               return localNationalityCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNationalityCode(){
                               return localNationalityCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NationalityCode
                               */
                               public void setNationalityCode(java.lang.String param){
                            localNationalityCodeTracker = param != null;
                                   
                                            this.localNationalityCode=param;
                                    

                               }
                            

                        /**
                        * field for NationalityName
                        */

                        
                                    protected java.lang.String localNationalityName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNationalityNameTracker = false ;

                           public boolean isNationalityNameSpecified(){
                               return localNationalityNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNationalityName(){
                               return localNationalityName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NationalityName
                               */
                               public void setNationalityName(java.lang.String param){
                            localNationalityNameTracker = param != null;
                                   
                                            this.localNationalityName=param;
                                    

                               }
                            

                        /**
                        * field for ResidencyStatus
                        */

                        
                                    protected java.lang.String localResidencyStatus ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localResidencyStatusTracker = false ;

                           public boolean isResidencyStatusSpecified(){
                               return localResidencyStatusTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getResidencyStatus(){
                               return localResidencyStatus;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ResidencyStatus
                               */
                               public void setResidencyStatus(java.lang.String param){
                            localResidencyStatusTracker = param != null;
                                   
                                            this.localResidencyStatus=param;
                                    

                               }
                            

                        /**
                        * field for CountryofResidence
                        */

                        
                                    protected java.lang.String localCountryofResidence ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCountryofResidenceTracker = false ;

                           public boolean isCountryofResidenceSpecified(){
                               return localCountryofResidenceTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCountryofResidence(){
                               return localCountryofResidence;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CountryofResidence
                               */
                               public void setCountryofResidence(java.lang.String param){
                            localCountryofResidenceTracker = param != null;
                                   
                                            this.localCountryofResidence=param;
                                    

                               }
                            

                        /**
                        * field for DomicileBranchCode
                        */

                        
                                    protected java.lang.String localDomicileBranchCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDomicileBranchCodeTracker = false ;

                           public boolean isDomicileBranchCodeSpecified(){
                               return localDomicileBranchCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDomicileBranchCode(){
                               return localDomicileBranchCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DomicileBranchCode
                               */
                               public void setDomicileBranchCode(java.lang.String param){
                            localDomicileBranchCodeTracker = param != null;
                                   
                                            this.localDomicileBranchCode=param;
                                    

                               }
                            

                        /**
                        * field for DomicileBranchName
                        */

                        
                                    protected java.lang.String localDomicileBranchName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDomicileBranchNameTracker = false ;

                           public boolean isDomicileBranchNameSpecified(){
                               return localDomicileBranchNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDomicileBranchName(){
                               return localDomicileBranchName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DomicileBranchName
                               */
                               public void setDomicileBranchName(java.lang.String param){
                            localDomicileBranchNameTracker = param != null;
                                   
                                            this.localDomicileBranchName=param;
                                    

                               }
                            

                        /**
                        * field for MotherMaidenName
                        */

                        
                                    protected java.lang.String localMotherMaidenName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMotherMaidenNameTracker = false ;

                           public boolean isMotherMaidenNameSpecified(){
                               return localMotherMaidenNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMotherMaidenName(){
                               return localMotherMaidenName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MotherMaidenName
                               */
                               public void setMotherMaidenName(java.lang.String param){
                            localMotherMaidenNameTracker = param != null;
                                   
                                            this.localMotherMaidenName=param;
                                    

                               }
                            

                        /**
                        * field for MinorStatusFlag
                        */

                        
                                    protected java.lang.String localMinorStatusFlag ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMinorStatusFlagTracker = false ;

                           public boolean isMinorStatusFlagSpecified(){
                               return localMinorStatusFlagTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMinorStatusFlag(){
                               return localMinorStatusFlag;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MinorStatusFlag
                               */
                               public void setMinorStatusFlag(java.lang.String param){
                            localMinorStatusFlagTracker = param != null;
                                   
                                            this.localMinorStatusFlag=param;
                                    

                               }
                            

                        /**
                        * field for MemoFlag
                        */

                        
                                    protected java.lang.String localMemoFlag ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMemoFlagTracker = false ;

                           public boolean isMemoFlagSpecified(){
                               return localMemoFlagTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMemoFlag(){
                               return localMemoFlag;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MemoFlag
                               */
                               public void setMemoFlag(java.lang.String param){
                            localMemoFlagTracker = param != null;
                                   
                                            this.localMemoFlag=param;
                                    

                               }
                            

                        /**
                        * field for SignatureType
                        */

                        
                                    protected java.lang.String localSignatureType ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSignatureTypeTracker = false ;

                           public boolean isSignatureTypeSpecified(){
                               return localSignatureTypeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSignatureType(){
                               return localSignatureType;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SignatureType
                               */
                               public void setSignatureType(java.lang.String param){
                            localSignatureTypeTracker = param != null;
                                   
                                            this.localSignatureType=param;
                                    

                               }
                            

                        /**
                        * field for CustCategory
                        */

                        
                                    protected java.lang.String localCustCategory ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustCategoryTracker = false ;

                           public boolean isCustCategorySpecified(){
                               return localCustCategoryTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustCategory(){
                               return localCustCategory;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustCategory
                               */
                               public void setCustCategory(java.lang.String param){
                            localCustCategoryTracker = param != null;
                                   
                                            this.localCustCategory=param;
                                    

                               }
                            

                        /**
                        * field for StaffFlag
                        */

                        
                                    protected java.lang.String localStaffFlag ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localStaffFlagTracker = false ;

                           public boolean isStaffFlagSpecified(){
                               return localStaffFlagTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getStaffFlag(){
                               return localStaffFlag;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param StaffFlag
                               */
                               public void setStaffFlag(java.lang.String param){
                            localStaffFlagTracker = param != null;
                                   
                                            this.localStaffFlag=param;
                                    

                               }
                            

                        /**
                        * field for ProfitCenterCode
                        */

                        
                                    protected java.lang.String localProfitCenterCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localProfitCenterCodeTracker = false ;

                           public boolean isProfitCenterCodeSpecified(){
                               return localProfitCenterCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getProfitCenterCode(){
                               return localProfitCenterCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ProfitCenterCode
                               */
                               public void setProfitCenterCode(java.lang.String param){
                            localProfitCenterCodeTracker = param != null;
                                   
                                            this.localProfitCenterCode=param;
                                    

                               }
                            

                        /**
                        * field for ProfitCenterName
                        */

                        
                                    protected java.lang.String localProfitCenterName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localProfitCenterNameTracker = false ;

                           public boolean isProfitCenterNameSpecified(){
                               return localProfitCenterNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getProfitCenterName(){
                               return localProfitCenterName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ProfitCenterName
                               */
                               public void setProfitCenterName(java.lang.String param){
                            localProfitCenterNameTracker = param != null;
                                   
                                            this.localProfitCenterName=param;
                                    

                               }
                            

                        /**
                        * field for CustSignupDat
                        */

                        
                                    protected java.lang.String localCustSignupDat ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustSignupDatTracker = false ;

                           public boolean isCustSignupDatSpecified(){
                               return localCustSignupDatTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustSignupDat(){
                               return localCustSignupDat;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustSignupDat
                               */
                               public void setCustSignupDat(java.lang.String param){
                            localCustSignupDatTracker = param != null;
                                   
                                            this.localCustSignupDat=param;
                                    

                               }
                            

                        /**
                        * field for PromotionCode
                        */

                        
                                    protected java.lang.String localPromotionCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPromotionCodeTracker = false ;

                           public boolean isPromotionCodeSpecified(){
                               return localPromotionCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPromotionCode(){
                               return localPromotionCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PromotionCode
                               */
                               public void setPromotionCode(java.lang.String param){
                            localPromotionCodeTracker = param != null;
                                   
                                            this.localPromotionCode=param;
                                    

                               }
                            

                        /**
                        * field for SourcingAgent
                        */

                        
                                    protected java.lang.String localSourcingAgent ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSourcingAgentTracker = false ;

                           public boolean isSourcingAgentSpecified(){
                               return localSourcingAgentTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSourcingAgent(){
                               return localSourcingAgent;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SourcingAgent
                               */
                               public void setSourcingAgent(java.lang.String param){
                            localSourcingAgentTracker = param != null;
                                   
                                            this.localSourcingAgent=param;
                                    

                               }
                            

                        /**
                        * field for SourcingDept
                        */

                        
                                    protected java.lang.String localSourcingDept ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSourcingDeptTracker = false ;

                           public boolean isSourcingDeptSpecified(){
                               return localSourcingDeptTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSourcingDept(){
                               return localSourcingDept;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SourcingDept
                               */
                               public void setSourcingDept(java.lang.String param){
                            localSourcingDeptTracker = param != null;
                                   
                                            this.localSourcingDept=param;
                                    

                               }
                            

                        /**
                        * field for SCPackageCode
                        */

                        
                                    protected java.lang.String localSCPackageCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSCPackageCodeTracker = false ;

                           public boolean isSCPackageCodeSpecified(){
                               return localSCPackageCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSCPackageCode(){
                               return localSCPackageCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SCPackageCode
                               */
                               public void setSCPackageCode(java.lang.String param){
                            localSCPackageCodeTracker = param != null;
                                   
                                            this.localSCPackageCode=param;
                                    

                               }
                            

                        /**
                        * field for SCPackageName
                        */

                        
                                    protected java.lang.String localSCPackageName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSCPackageNameTracker = false ;

                           public boolean isSCPackageNameSpecified(){
                               return localSCPackageNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSCPackageName(){
                               return localSCPackageName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SCPackageName
                               */
                               public void setSCPackageName(java.lang.String param){
                            localSCPackageNameTracker = param != null;
                                   
                                            this.localSCPackageName=param;
                                    

                               }
                            

                        /**
                        * field for MonthlyRelationBal
                        */

                        
                                    protected java.lang.String localMonthlyRelationBal ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMonthlyRelationBalTracker = false ;

                           public boolean isMonthlyRelationBalSpecified(){
                               return localMonthlyRelationBalTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMonthlyRelationBal(){
                               return localMonthlyRelationBal;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MonthlyRelationBal
                               */
                               public void setMonthlyRelationBal(java.lang.String param){
                            localMonthlyRelationBalTracker = param != null;
                                   
                                            this.localMonthlyRelationBal=param;
                                    

                               }
                            

                        /**
                        * field for CriteriaforPrivilege
                        */

                        
                                    protected java.lang.String localCriteriaforPrivilege ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCriteriaforPrivilegeTracker = false ;

                           public boolean isCriteriaforPrivilegeSpecified(){
                               return localCriteriaforPrivilegeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCriteriaforPrivilege(){
                               return localCriteriaforPrivilege;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CriteriaforPrivilege
                               */
                               public void setCriteriaforPrivilege(java.lang.String param){
                            localCriteriaforPrivilegeTracker = param != null;
                                   
                                            this.localCriteriaforPrivilege=param;
                                    

                               }
                            

                        /**
                        * field for BenefitCategory
                        */

                        
                                    protected java.lang.String localBenefitCategory ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBenefitCategoryTracker = false ;

                           public boolean isBenefitCategorySpecified(){
                               return localBenefitCategoryTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBenefitCategory(){
                               return localBenefitCategory;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BenefitCategory
                               */
                               public void setBenefitCategory(java.lang.String param){
                            localBenefitCategoryTracker = param != null;
                                   
                                            this.localBenefitCategory=param;
                                    

                               }
                            

                        /**
                        * field for NameofEmployer
                        */

                        
                                    protected java.lang.String localNameofEmployer ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNameofEmployerTracker = false ;

                           public boolean isNameofEmployerSpecified(){
                               return localNameofEmployerTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNameofEmployer(){
                               return localNameofEmployer;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NameofEmployer
                               */
                               public void setNameofEmployer(java.lang.String param){
                            localNameofEmployerTracker = param != null;
                                   
                                            this.localNameofEmployer=param;
                                    

                               }
                            

                        /**
                        * field for Designation
                        */

                        
                                    protected java.lang.String localDesignation ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDesignationTracker = false ;

                           public boolean isDesignationSpecified(){
                               return localDesignationTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDesignation(){
                               return localDesignation;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Designation
                               */
                               public void setDesignation(java.lang.String param){
                            localDesignationTracker = param != null;
                                   
                                            this.localDesignation=param;
                                    

                               }
                            

                        /**
                        * field for EmployeeID
                        */

                        
                                    protected java.lang.String localEmployeeID ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmployeeIDTracker = false ;

                           public boolean isEmployeeIDSpecified(){
                               return localEmployeeIDTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEmployeeID(){
                               return localEmployeeID;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EmployeeID
                               */
                               public void setEmployeeID(java.lang.String param){
                            localEmployeeIDTracker = param != null;
                                   
                                            this.localEmployeeID=param;
                                    

                               }
                            

                        /**
                        * field for EmploymentType
                        */

                        
                                    protected java.lang.String localEmploymentType ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmploymentTypeTracker = false ;

                           public boolean isEmploymentTypeSpecified(){
                               return localEmploymentTypeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEmploymentType(){
                               return localEmploymentType;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EmploymentType
                               */
                               public void setEmploymentType(java.lang.String param){
                            localEmploymentTypeTracker = param != null;
                                   
                                            this.localEmploymentType=param;
                                    

                               }
                            

                        /**
                        * field for Profession
                        */

                        
                                    protected java.lang.String localProfession ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localProfessionTracker = false ;

                           public boolean isProfessionSpecified(){
                               return localProfessionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getProfession(){
                               return localProfession;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Profession
                               */
                               public void setProfession(java.lang.String param){
                            localProfessionTracker = param != null;
                                   
                                            this.localProfession=param;
                                    

                               }
                            

                        /**
                        * field for DateofJoining
                        */

                        
                                    protected java.lang.String localDateofJoining ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDateofJoiningTracker = false ;

                           public boolean isDateofJoiningSpecified(){
                               return localDateofJoiningTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDateofJoining(){
                               return localDateofJoining;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DateofJoining
                               */
                               public void setDateofJoining(java.lang.String param){
                            localDateofJoiningTracker = param != null;
                                   
                                            this.localDateofJoining=param;
                                    

                               }
                            

                        /**
                        * field for EmploymentLocation
                        */

                        
                                    protected java.lang.String localEmploymentLocation ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEmploymentLocationTracker = false ;

                           public boolean isEmploymentLocationSpecified(){
                               return localEmploymentLocationTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEmploymentLocation(){
                               return localEmploymentLocation;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EmploymentLocation
                               */
                               public void setEmploymentLocation(java.lang.String param){
                            localEmploymentLocationTracker = param != null;
                                   
                                            this.localEmploymentLocation=param;
                                    

                               }
                            

                        /**
                        * field for SalaryDate
                        */

                        
                                    protected java.lang.String localSalaryDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSalaryDateTracker = false ;

                           public boolean isSalaryDateSpecified(){
                               return localSalaryDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSalaryDate(){
                               return localSalaryDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SalaryDate
                               */
                               public void setSalaryDate(java.lang.String param){
                            localSalaryDateTracker = param != null;
                                   
                                            this.localSalaryDate=param;
                                    

                               }
                            

                        /**
                        * field for SalaryAmount
                        */

                        
                                    protected java.lang.String localSalaryAmount ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSalaryAmountTracker = false ;

                           public boolean isSalaryAmountSpecified(){
                               return localSalaryAmountTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSalaryAmount(){
                               return localSalaryAmount;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SalaryAmount
                               */
                               public void setSalaryAmount(java.lang.String param){
                            localSalaryAmountTracker = param != null;
                                   
                                            this.localSalaryAmount=param;
                                    

                               }
                            

                        /**
                        * field for TMLFlag
                        */

                        
                                    protected java.lang.String localTMLFlag ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTMLFlagTracker = false ;

                           public boolean isTMLFlagSpecified(){
                               return localTMLFlagTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTMLFlag(){
                               return localTMLFlag;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TMLFlag
                               */
                               public void setTMLFlag(java.lang.String param){
                            localTMLFlagTracker = param != null;
                                   
                                            this.localTMLFlag=param;
                                    

                               }
                            

                        /**
                        * field for CompanyCategory
                        */

                        
                                    protected java.lang.String localCompanyCategory ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCompanyCategoryTracker = false ;

                           public boolean isCompanyCategorySpecified(){
                               return localCompanyCategoryTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCompanyCategory(){
                               return localCompanyCategory;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CompanyCategory
                               */
                               public void setCompanyCategory(java.lang.String param){
                            localCompanyCategoryTracker = param != null;
                                   
                                            this.localCompanyCategory=param;
                                    

                               }
                            

                        /**
                        * field for CompanyBlacklist
                        */

                        
                                    protected java.lang.String localCompanyBlacklist ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCompanyBlacklistTracker = false ;

                           public boolean isCompanyBlacklistSpecified(){
                               return localCompanyBlacklistTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCompanyBlacklist(){
                               return localCompanyBlacklist;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CompanyBlacklist
                               */
                               public void setCompanyBlacklist(java.lang.String param){
                            localCompanyBlacklistTracker = param != null;
                                   
                                            this.localCompanyBlacklist=param;
                                    

                               }
                            

                        /**
                        * field for CompanyCode
                        */

                        
                                    protected java.lang.String localCompanyCode ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCompanyCodeTracker = false ;

                           public boolean isCompanyCodeSpecified(){
                               return localCompanyCodeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCompanyCode(){
                               return localCompanyCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CompanyCode
                               */
                               public void setCompanyCode(java.lang.String param){
                            localCompanyCodeTracker = param != null;
                                   
                                            this.localCompanyCode=param;
                                    

                               }
                            

                        /**
                        * field for CompanyName
                        */

                        
                                    protected java.lang.String localCompanyName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCompanyNameTracker = false ;

                           public boolean isCompanyNameSpecified(){
                               return localCompanyNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCompanyName(){
                               return localCompanyName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CompanyName
                               */
                               public void setCompanyName(java.lang.String param){
                            localCompanyNameTracker = param != null;
                                   
                                            this.localCompanyName=param;
                                    

                               }
                            

                        /**
                        * field for CustBlacklistStatus
                        */

                        
                                    protected java.lang.String localCustBlacklistStatus ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustBlacklistStatusTracker = false ;

                           public boolean isCustBlacklistStatusSpecified(){
                               return localCustBlacklistStatusTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustBlacklistStatus(){
                               return localCustBlacklistStatus;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustBlacklistStatus
                               */
                               public void setCustBlacklistStatus(java.lang.String param){
                            localCustBlacklistStatusTracker = param != null;
                                   
                                            this.localCustBlacklistStatus=param;
                                    

                               }
                            

                        /**
                        * field for CustBehavioralScore
                        */

                        
                                    protected java.lang.String localCustBehavioralScore ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustBehavioralScoreTracker = false ;

                           public boolean isCustBehavioralScoreSpecified(){
                               return localCustBehavioralScoreTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustBehavioralScore(){
                               return localCustBehavioralScore;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustBehavioralScore
                               */
                               public void setCustBehavioralScore(java.lang.String param){
                            localCustBehavioralScoreTracker = param != null;
                                   
                                            this.localCustBehavioralScore=param;
                                    

                               }
                            

                        /**
                        * field for CustProfitabilityScore
                        */

                        
                                    protected java.lang.String localCustProfitabilityScore ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustProfitabilityScoreTracker = false ;

                           public boolean isCustProfitabilityScoreSpecified(){
                               return localCustProfitabilityScoreTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustProfitabilityScore(){
                               return localCustProfitabilityScore;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustProfitabilityScore
                               */
                               public void setCustProfitabilityScore(java.lang.String param){
                            localCustProfitabilityScoreTracker = param != null;
                                   
                                            this.localCustProfitabilityScore=param;
                                    

                               }
                            

                        /**
                        * field for CustAttritionScore
                        */

                        
                                    protected java.lang.String localCustAttritionScore ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustAttritionScoreTracker = false ;

                           public boolean isCustAttritionScoreSpecified(){
                               return localCustAttritionScoreTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustAttritionScore(){
                               return localCustAttritionScore;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustAttritionScore
                               */
                               public void setCustAttritionScore(java.lang.String param){
                            localCustAttritionScoreTracker = param != null;
                                   
                                            this.localCustAttritionScore=param;
                                    

                               }
                            

                        /**
                        * field for CustMarketingScore
                        */

                        
                                    protected java.lang.String localCustMarketingScore ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustMarketingScoreTracker = false ;

                           public boolean isCustMarketingScoreSpecified(){
                               return localCustMarketingScoreTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustMarketingScore(){
                               return localCustMarketingScore;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustMarketingScore
                               */
                               public void setCustMarketingScore(java.lang.String param){
                            localCustMarketingScoreTracker = param != null;
                                   
                                            this.localCustMarketingScore=param;
                                    

                               }
                            

                        /**
                        * field for NextProducttoBuy
                        */

                        
                                    protected java.lang.String localNextProducttoBuy ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNextProducttoBuyTracker = false ;

                           public boolean isNextProducttoBuySpecified(){
                               return localNextProducttoBuyTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNextProducttoBuy(){
                               return localNextProducttoBuy;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NextProducttoBuy
                               */
                               public void setNextProducttoBuy(java.lang.String param){
                            localNextProducttoBuyTracker = param != null;
                                   
                                            this.localNextProducttoBuy=param;
                                    

                               }
                            

                        /**
                        * field for PassportNo
                        */

                        
                                    protected java.lang.String localPassportNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPassportNoTracker = false ;

                           public boolean isPassportNoSpecified(){
                               return localPassportNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPassportNo(){
                               return localPassportNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PassportNo
                               */
                               public void setPassportNo(java.lang.String param){
                            localPassportNoTracker = param != null;
                                   
                                            this.localPassportNo=param;
                                    

                               }
                            

                        /**
                        * field for IssueDate
                        */

                        
                                    protected java.lang.String localIssueDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIssueDateTracker = false ;

                           public boolean isIssueDateSpecified(){
                               return localIssueDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getIssueDate(){
                               return localIssueDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param IssueDate
                               */
                               public void setIssueDate(java.lang.String param){
                            localIssueDateTracker = param != null;
                                   
                                            this.localIssueDate=param;
                                    

                               }
                            

                        /**
                        * field for ExpiryDate
                        */

                        
                                    protected java.lang.String localExpiryDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localExpiryDateTracker = false ;

                           public boolean isExpiryDateSpecified(){
                               return localExpiryDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getExpiryDate(){
                               return localExpiryDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ExpiryDate
                               */
                               public void setExpiryDate(java.lang.String param){
                            localExpiryDateTracker = param != null;
                                   
                                            this.localExpiryDate=param;
                                    

                               }
                            

                        /**
                        * field for VisaNo
                        */

                        
                                    protected java.lang.String localVisaNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localVisaNoTracker = false ;

                           public boolean isVisaNoSpecified(){
                               return localVisaNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getVisaNo(){
                               return localVisaNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param VisaNo
                               */
                               public void setVisaNo(java.lang.String param){
                            localVisaNoTracker = param != null;
                                   
                                            this.localVisaNo=param;
                                    

                               }
                            

                        /**
                        * field for VisaIssueDate
                        */

                        
                                    protected java.lang.String localVisaIssueDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localVisaIssueDateTracker = false ;

                           public boolean isVisaIssueDateSpecified(){
                               return localVisaIssueDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getVisaIssueDate(){
                               return localVisaIssueDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param VisaIssueDate
                               */
                               public void setVisaIssueDate(java.lang.String param){
                            localVisaIssueDateTracker = param != null;
                                   
                                            this.localVisaIssueDate=param;
                                    

                               }
                            

                        /**
                        * field for VisaExpiryDate
                        */

                        
                                    protected java.lang.String localVisaExpiryDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localVisaExpiryDateTracker = false ;

                           public boolean isVisaExpiryDateSpecified(){
                               return localVisaExpiryDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getVisaExpiryDate(){
                               return localVisaExpiryDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param VisaExpiryDate
                               */
                               public void setVisaExpiryDate(java.lang.String param){
                            localVisaExpiryDateTracker = param != null;
                                   
                                            this.localVisaExpiryDate=param;
                                    

                               }
                            

                        /**
                        * field for LabourCardNo
                        */

                        
                                    protected java.lang.String localLabourCardNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLabourCardNoTracker = false ;

                           public boolean isLabourCardNoSpecified(){
                               return localLabourCardNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLabourCardNo(){
                               return localLabourCardNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LabourCardNo
                               */
                               public void setLabourCardNo(java.lang.String param){
                            localLabourCardNoTracker = param != null;
                                   
                                            this.localLabourCardNo=param;
                                    

                               }
                            

                        /**
                        * field for LabourCardIssueDate
                        */

                        
                                    protected java.lang.String localLabourCardIssueDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLabourCardIssueDateTracker = false ;

                           public boolean isLabourCardIssueDateSpecified(){
                               return localLabourCardIssueDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLabourCardIssueDate(){
                               return localLabourCardIssueDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LabourCardIssueDate
                               */
                               public void setLabourCardIssueDate(java.lang.String param){
                            localLabourCardIssueDateTracker = param != null;
                                   
                                            this.localLabourCardIssueDate=param;
                                    

                               }
                            

                        /**
                        * field for LabourCardExpiryDate
                        */

                        
                                    protected java.lang.String localLabourCardExpiryDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLabourCardExpiryDateTracker = false ;

                           public boolean isLabourCardExpiryDateSpecified(){
                               return localLabourCardExpiryDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLabourCardExpiryDate(){
                               return localLabourCardExpiryDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LabourCardExpiryDate
                               */
                               public void setLabourCardExpiryDate(java.lang.String param){
                            localLabourCardExpiryDateTracker = param != null;
                                   
                                            this.localLabourCardExpiryDate=param;
                                    

                               }
                            

                        /**
                        * field for UAENationalID
                        */

                        
                                    protected java.lang.String localUAENationalID ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUAENationalIDTracker = false ;

                           public boolean isUAENationalIDSpecified(){
                               return localUAENationalIDTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUAENationalID(){
                               return localUAENationalID;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param UAENationalID
                               */
                               public void setUAENationalID(java.lang.String param){
                            localUAENationalIDTracker = param != null;
                                   
                                            this.localUAENationalID=param;
                                    

                               }
                            

                        /**
                        * field for MemoSeverity
                        */

                        
                                    protected java.lang.String localMemoSeverity ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMemoSeverityTracker = false ;

                           public boolean isMemoSeveritySpecified(){
                               return localMemoSeverityTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMemoSeverity(){
                               return localMemoSeverity;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MemoSeverity
                               */
                               public void setMemoSeverity(java.lang.String param){
                            localMemoSeverityTracker = param != null;
                                   
                                            this.localMemoSeverity=param;
                                    

                               }
                            

                        /**
                        * field for MemoDesc
                        */

                        
                                    protected java.lang.String localMemoDesc ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMemoDescTracker = false ;

                           public boolean isMemoDescSpecified(){
                               return localMemoDescTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMemoDesc(){
                               return localMemoDesc;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MemoDesc
                               */
                               public void setMemoDesc(java.lang.String param){
                            localMemoDescTracker = param != null;
                                   
                                            this.localMemoDesc=param;
                                    

                               }
                            

                        /**
                        * field for SignatoryName1
                        */

                        
                                    protected java.lang.String localSignatoryName1 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSignatoryName1Tracker = false ;

                           public boolean isSignatoryName1Specified(){
                               return localSignatoryName1Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSignatoryName1(){
                               return localSignatoryName1;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SignatoryName1
                               */
                               public void setSignatoryName1(java.lang.String param){
                            localSignatoryName1Tracker = param != null;
                                   
                                            this.localSignatoryName1=param;
                                    

                               }
                            

                        /**
                        * field for SignatoryDesignTxt1
                        */

                        
                                    protected java.lang.String localSignatoryDesignTxt1 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSignatoryDesignTxt1Tracker = false ;

                           public boolean isSignatoryDesignTxt1Specified(){
                               return localSignatoryDesignTxt1Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSignatoryDesignTxt1(){
                               return localSignatoryDesignTxt1;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SignatoryDesignTxt1
                               */
                               public void setSignatoryDesignTxt1(java.lang.String param){
                            localSignatoryDesignTxt1Tracker = param != null;
                                   
                                            this.localSignatoryDesignTxt1=param;
                                    

                               }
                            

                        /**
                        * field for DirectorName1
                        */

                        
                                    protected java.lang.String localDirectorName1 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDirectorName1Tracker = false ;

                           public boolean isDirectorName1Specified(){
                               return localDirectorName1Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDirectorName1(){
                               return localDirectorName1;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DirectorName1
                               */
                               public void setDirectorName1(java.lang.String param){
                            localDirectorName1Tracker = param != null;
                                   
                                            this.localDirectorName1=param;
                                    

                               }
                            

                        /**
                        * field for SignatoryName2
                        */

                        
                                    protected java.lang.String localSignatoryName2 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSignatoryName2Tracker = false ;

                           public boolean isSignatoryName2Specified(){
                               return localSignatoryName2Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSignatoryName2(){
                               return localSignatoryName2;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SignatoryName2
                               */
                               public void setSignatoryName2(java.lang.String param){
                            localSignatoryName2Tracker = param != null;
                                   
                                            this.localSignatoryName2=param;
                                    

                               }
                            

                        /**
                        * field for SignatoryDesignTxt2
                        */

                        
                                    protected java.lang.String localSignatoryDesignTxt2 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSignatoryDesignTxt2Tracker = false ;

                           public boolean isSignatoryDesignTxt2Specified(){
                               return localSignatoryDesignTxt2Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSignatoryDesignTxt2(){
                               return localSignatoryDesignTxt2;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SignatoryDesignTxt2
                               */
                               public void setSignatoryDesignTxt2(java.lang.String param){
                            localSignatoryDesignTxt2Tracker = param != null;
                                   
                                            this.localSignatoryDesignTxt2=param;
                                    

                               }
                            

                        /**
                        * field for DirectorName2
                        */

                        
                                    protected java.lang.String localDirectorName2 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDirectorName2Tracker = false ;

                           public boolean isDirectorName2Specified(){
                               return localDirectorName2Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDirectorName2(){
                               return localDirectorName2;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DirectorName2
                               */
                               public void setDirectorName2(java.lang.String param){
                            localDirectorName2Tracker = param != null;
                                   
                                            this.localDirectorName2=param;
                                    

                               }
                            

                        /**
                        * field for SignatoryName3
                        */

                        
                                    protected java.lang.String localSignatoryName3 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSignatoryName3Tracker = false ;

                           public boolean isSignatoryName3Specified(){
                               return localSignatoryName3Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSignatoryName3(){
                               return localSignatoryName3;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SignatoryName3
                               */
                               public void setSignatoryName3(java.lang.String param){
                            localSignatoryName3Tracker = param != null;
                                   
                                            this.localSignatoryName3=param;
                                    

                               }
                            

                        /**
                        * field for SignatoryDesignTxt3
                        */

                        
                                    protected java.lang.String localSignatoryDesignTxt3 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSignatoryDesignTxt3Tracker = false ;

                           public boolean isSignatoryDesignTxt3Specified(){
                               return localSignatoryDesignTxt3Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSignatoryDesignTxt3(){
                               return localSignatoryDesignTxt3;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SignatoryDesignTxt3
                               */
                               public void setSignatoryDesignTxt3(java.lang.String param){
                            localSignatoryDesignTxt3Tracker = param != null;
                                   
                                            this.localSignatoryDesignTxt3=param;
                                    

                               }
                            

                        /**
                        * field for DirectorName3
                        */

                        
                                    protected java.lang.String localDirectorName3 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDirectorName3Tracker = false ;

                           public boolean isDirectorName3Specified(){
                               return localDirectorName3Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDirectorName3(){
                               return localDirectorName3;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DirectorName3
                               */
                               public void setDirectorName3(java.lang.String param){
                            localDirectorName3Tracker = param != null;
                                   
                                            this.localDirectorName3=param;
                                    

                               }
                            

                        /**
                        * field for SignatoryName4
                        */

                        
                                    protected java.lang.String localSignatoryName4 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSignatoryName4Tracker = false ;

                           public boolean isSignatoryName4Specified(){
                               return localSignatoryName4Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSignatoryName4(){
                               return localSignatoryName4;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SignatoryName4
                               */
                               public void setSignatoryName4(java.lang.String param){
                            localSignatoryName4Tracker = param != null;
                                   
                                            this.localSignatoryName4=param;
                                    

                               }
                            

                        /**
                        * field for SignatoryDesignTxt4
                        */

                        
                                    protected java.lang.String localSignatoryDesignTxt4 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSignatoryDesignTxt4Tracker = false ;

                           public boolean isSignatoryDesignTxt4Specified(){
                               return localSignatoryDesignTxt4Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSignatoryDesignTxt4(){
                               return localSignatoryDesignTxt4;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SignatoryDesignTxt4
                               */
                               public void setSignatoryDesignTxt4(java.lang.String param){
                            localSignatoryDesignTxt4Tracker = param != null;
                                   
                                            this.localSignatoryDesignTxt4=param;
                                    

                               }
                            

                        /**
                        * field for DirectorName4
                        */

                        
                                    protected java.lang.String localDirectorName4 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDirectorName4Tracker = false ;

                           public boolean isDirectorName4Specified(){
                               return localDirectorName4Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDirectorName4(){
                               return localDirectorName4;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DirectorName4
                               */
                               public void setDirectorName4(java.lang.String param){
                            localDirectorName4Tracker = param != null;
                                   
                                            this.localDirectorName4=param;
                                    

                               }
                            

                        /**
                        * field for SignatoryName5
                        */

                        
                                    protected java.lang.String localSignatoryName5 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSignatoryName5Tracker = false ;

                           public boolean isSignatoryName5Specified(){
                               return localSignatoryName5Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSignatoryName5(){
                               return localSignatoryName5;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SignatoryName5
                               */
                               public void setSignatoryName5(java.lang.String param){
                            localSignatoryName5Tracker = param != null;
                                   
                                            this.localSignatoryName5=param;
                                    

                               }
                            

                        /**
                        * field for SignatoryDesignTxt5
                        */

                        
                                    protected java.lang.String localSignatoryDesignTxt5 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSignatoryDesignTxt5Tracker = false ;

                           public boolean isSignatoryDesignTxt5Specified(){
                               return localSignatoryDesignTxt5Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSignatoryDesignTxt5(){
                               return localSignatoryDesignTxt5;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SignatoryDesignTxt5
                               */
                               public void setSignatoryDesignTxt5(java.lang.String param){
                            localSignatoryDesignTxt5Tracker = param != null;
                                   
                                            this.localSignatoryDesignTxt5=param;
                                    

                               }
                            

                        /**
                        * field for DirectorName5
                        */

                        
                                    protected java.lang.String localDirectorName5 ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDirectorName5Tracker = false ;

                           public boolean isDirectorName5Specified(){
                               return localDirectorName5Tracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDirectorName5(){
                               return localDirectorName5;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DirectorName5
                               */
                               public void setDirectorName5(java.lang.String param){
                            localDirectorName5Tracker = param != null;
                                   
                                            this.localDirectorName5=param;
                                    

                               }
                            

                        /**
                        * field for BusinessType
                        */

                        
                                    protected java.lang.String localBusinessType ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBusinessTypeTracker = false ;

                           public boolean isBusinessTypeSpecified(){
                               return localBusinessTypeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBusinessType(){
                               return localBusinessType;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BusinessType
                               */
                               public void setBusinessType(java.lang.String param){
                            localBusinessTypeTracker = param != null;
                                   
                                            this.localBusinessType=param;
                                    

                               }
                            

                        /**
                        * field for RegistrationDate
                        */

                        
                                    protected java.lang.String localRegistrationDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRegistrationDateTracker = false ;

                           public boolean isRegistrationDateSpecified(){
                               return localRegistrationDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRegistrationDate(){
                               return localRegistrationDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RegistrationDate
                               */
                               public void setRegistrationDate(java.lang.String param){
                            localRegistrationDateTracker = param != null;
                                   
                                            this.localRegistrationDate=param;
                                    

                               }
                            

                        /**
                        * field for RegistrationNumber
                        */

                        
                                    protected java.lang.String localRegistrationNumber ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRegistrationNumberTracker = false ;

                           public boolean isRegistrationNumberSpecified(){
                               return localRegistrationNumberTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRegistrationNumber(){
                               return localRegistrationNumber;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RegistrationNumber
                               */
                               public void setRegistrationNumber(java.lang.String param){
                            localRegistrationNumberTracker = param != null;
                                   
                                            this.localRegistrationNumber=param;
                                    

                               }
                            

                        /**
                        * field for ListOfAddress
                        */

                        
                                    protected ListOfAddress_type0 localListOfAddress ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localListOfAddressTracker = false ;

                           public boolean isListOfAddressSpecified(){
                               return localListOfAddressTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return ListOfAddress_type0
                           */
                           public  ListOfAddress_type0 getListOfAddress(){
                               return localListOfAddress;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ListOfAddress
                               */
                               public void setListOfAddress(ListOfAddress_type0 param){
                            localListOfAddressTracker = param != null;
                                   
                                            this.localListOfAddress=param;
                                    

                               }
                            

                        /**
                        * field for ListOfUDFDetails
                        */

                        
                                    protected ListOfUDFDetails_type0 localListOfUDFDetails ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localListOfUDFDetailsTracker = false ;

                           public boolean isListOfUDFDetailsSpecified(){
                               return localListOfUDFDetailsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return ListOfUDFDetails_type0
                           */
                           public  ListOfUDFDetails_type0 getListOfUDFDetails(){
                               return localListOfUDFDetails;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ListOfUDFDetails
                               */
                               public void setListOfUDFDetails(ListOfUDFDetails_type0 param){
                            localListOfUDFDetailsTracker = param != null;
                                   
                                            this.localListOfUDFDetails=param;
                                    

                               }
                            

                        /**
                        * field for ListOfComplaints
                        */

                        
                                    protected ListOfComplaints_type0 localListOfComplaints ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localListOfComplaintsTracker = false ;

                           public boolean isListOfComplaintsSpecified(){
                               return localListOfComplaintsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return ListOfComplaints_type0
                           */
                           public  ListOfComplaints_type0 getListOfComplaints(){
                               return localListOfComplaints;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ListOfComplaints
                               */
                               public void setListOfComplaints(ListOfComplaints_type0 param){
                            localListOfComplaintsTracker = param != null;
                                   
                                            this.localListOfComplaints=param;
                                    

                               }
                            

                        /**
                        * field for ListOfLeverageDetails
                        */

                        
                                    protected ListOfLeverageDetails_type0 localListOfLeverageDetails ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localListOfLeverageDetailsTracker = false ;

                           public boolean isListOfLeverageDetailsSpecified(){
                               return localListOfLeverageDetailsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return ListOfLeverageDetails_type0
                           */
                           public  ListOfLeverageDetails_type0 getListOfLeverageDetails(){
                               return localListOfLeverageDetails;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ListOfLeverageDetails
                               */
                               public void setListOfLeverageDetails(ListOfLeverageDetails_type0 param){
                            localListOfLeverageDetailsTracker = param != null;
                                   
                                            this.localListOfLeverageDetails=param;
                                    

                               }
                            

                        /**
                        * field for ListOfCreditCards
                        */

                        
                                    protected ListOfCreditCards_type0 localListOfCreditCards ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localListOfCreditCardsTracker = false ;

                           public boolean isListOfCreditCardsSpecified(){
                               return localListOfCreditCardsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return ListOfCreditCards_type0
                           */
                           public  ListOfCreditCards_type0 getListOfCreditCards(){
                               return localListOfCreditCards;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ListOfCreditCards
                               */
                               public void setListOfCreditCards(ListOfCreditCards_type0 param){
                            localListOfCreditCardsTracker = param != null;
                                   
                                            this.localListOfCreditCards=param;
                                    

                               }
                            

                        /**
                        * field for ListOfAccounts
                        */

                        
                                    protected ListOfAccounts_type0 localListOfAccounts ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localListOfAccountsTracker = false ;

                           public boolean isListOfAccountsSpecified(){
                               return localListOfAccountsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return ListOfAccounts_type0
                           */
                           public  ListOfAccounts_type0 getListOfAccounts(){
                               return localListOfAccounts;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ListOfAccounts
                               */
                               public void setListOfAccounts(ListOfAccounts_type0 param){
                            localListOfAccountsTracker = param != null;
                                   
                                            this.localListOfAccounts=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/crm/common/CustomerInformation.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":customer_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "customer_type0",
                           xmlWriter);
                   }

               
                   }
                if (localCustomerIDTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "customerID", xmlWriter);
                             

                                          if (localCustomerID==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("customerID cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustomerID);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPrefixTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "prefix", xmlWriter);
                             

                                          if (localPrefix==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("prefix cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPrefix);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFullNameTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "fullName", xmlWriter);
                             

                                          if (localFullName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("fullName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFullName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDateofCIDOpeningTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "dateofCIDOpening", xmlWriter);
                             

                                          if (localDateofCIDOpening==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("dateofCIDOpening cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDateofCIDOpening);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLangPreferenceTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "langPreference", xmlWriter);
                             

                                          if (localLangPreference==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("langPreference cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLangPreference);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustIslamicFlagTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "custIslamicFlag", xmlWriter);
                             

                                          if (localCustIslamicFlag==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custIslamicFlag cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustIslamicFlag);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRMCodeTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "RMCode", xmlWriter);
                             

                                          if (localRMCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("RMCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRMCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRMNameTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "RMName", xmlWriter);
                             

                                          if (localRMName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("RMName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRMName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSMSBankingTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "SMSBanking", xmlWriter);
                             

                                          if (localSMSBanking==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("SMSBanking cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSMSBanking);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localInternetBankingTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "internetBanking", xmlWriter);
                             

                                          if (localInternetBanking==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("internetBanking cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localInternetBanking);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localIVRTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "IVR", xmlWriter);
                             

                                          if (localIVR==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("IVR cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localIVR);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMIBRegStatusTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "MIBRegStatus", xmlWriter);
                             

                                          if (localMIBRegStatus==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("MIBRegStatus cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMIBRegStatus);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTPINCreatedDateTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "TPINCreatedDate", xmlWriter);
                             

                                          if (localTPINCreatedDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("TPINCreatedDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTPINCreatedDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLastTPINUpdatedDateTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "LastTPINUpdatedDate", xmlWriter);
                             

                                          if (localLastTPINUpdatedDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("LastTPINUpdatedDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLastTPINUpdatedDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTotalTouchpointTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "totalTouchpoint", xmlWriter);
                             

                                          if (localTotalTouchpoint==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("totalTouchpoint cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTotalTouchpoint);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localExpiryCurrentMonthTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "expiryCurrentMonth", xmlWriter);
                             

                                          if (localExpiryCurrentMonth==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("expiryCurrentMonth cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localExpiryCurrentMonth);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localExpiryNextMonthTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "expiryNextMonth", xmlWriter);
                             

                                          if (localExpiryNextMonth==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("expiryNextMonth cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localExpiryNextMonth);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEStatementSubFlagTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "eStatementSubFlag", xmlWriter);
                             

                                          if (localEStatementSubFlag==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("eStatementSubFlag cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEStatementSubFlag);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEStatementSubDateTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "eStatementSubDate", xmlWriter);
                             

                                          if (localEStatementSubDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("eStatementSubDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEStatementSubDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localShortNameTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "shortName", xmlWriter);
                             

                                          if (localShortName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("shortName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localShortName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustomerICTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "customerIC", xmlWriter);
                             

                                          if (localCustomerIC==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("customerIC cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustomerIC);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDateofBirthTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "dateofBirth", xmlWriter);
                             

                                          if (localDateofBirth==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("dateofBirth cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDateofBirth);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localGenderTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "gender", xmlWriter);
                             

                                          if (localGender==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("gender cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localGender);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMaritalStatusTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "maritalStatus", xmlWriter);
                             

                                          if (localMaritalStatus==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("maritalStatus cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMaritalStatus);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEducationalQualTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "educationalQual", xmlWriter);
                             

                                          if (localEducationalQual==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("educationalQual cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEducationalQual);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNoofDependentsTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "NoofDependents", xmlWriter);
                             

                                          if (localNoofDependents==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("NoofDependents cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNoofDependents);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNationalityCodeTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "nationalityCode", xmlWriter);
                             

                                          if (localNationalityCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("nationalityCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNationalityCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNationalityNameTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "nationalityName", xmlWriter);
                             

                                          if (localNationalityName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("nationalityName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNationalityName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localResidencyStatusTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "residencyStatus", xmlWriter);
                             

                                          if (localResidencyStatus==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("residencyStatus cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localResidencyStatus);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCountryofResidenceTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "countryofResidence", xmlWriter);
                             

                                          if (localCountryofResidence==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("countryofResidence cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCountryofResidence);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDomicileBranchCodeTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "domicileBranchCode", xmlWriter);
                             

                                          if (localDomicileBranchCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("domicileBranchCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDomicileBranchCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDomicileBranchNameTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "domicileBranchName", xmlWriter);
                             

                                          if (localDomicileBranchName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("domicileBranchName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDomicileBranchName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMotherMaidenNameTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "motherMaidenName", xmlWriter);
                             

                                          if (localMotherMaidenName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("motherMaidenName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMotherMaidenName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMinorStatusFlagTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "minorStatusFlag", xmlWriter);
                             

                                          if (localMinorStatusFlag==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("minorStatusFlag cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMinorStatusFlag);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMemoFlagTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "memoFlag", xmlWriter);
                             

                                          if (localMemoFlag==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("memoFlag cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMemoFlag);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSignatureTypeTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "signatureType", xmlWriter);
                             

                                          if (localSignatureType==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("signatureType cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSignatureType);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustCategoryTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "custCategory", xmlWriter);
                             

                                          if (localCustCategory==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custCategory cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustCategory);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localStaffFlagTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "staffFlag", xmlWriter);
                             

                                          if (localStaffFlag==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("staffFlag cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localStaffFlag);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localProfitCenterCodeTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "profitCenterCode", xmlWriter);
                             

                                          if (localProfitCenterCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("profitCenterCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localProfitCenterCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localProfitCenterNameTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "profitCenterName", xmlWriter);
                             

                                          if (localProfitCenterName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("profitCenterName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localProfitCenterName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustSignupDatTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "custSignupDat", xmlWriter);
                             

                                          if (localCustSignupDat==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custSignupDat cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustSignupDat);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPromotionCodeTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "promotionCode", xmlWriter);
                             

                                          if (localPromotionCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("promotionCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPromotionCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSourcingAgentTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "sourcingAgent", xmlWriter);
                             

                                          if (localSourcingAgent==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sourcingAgent cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSourcingAgent);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSourcingDeptTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "sourcingDept", xmlWriter);
                             

                                          if (localSourcingDept==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sourcingDept cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSourcingDept);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSCPackageCodeTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "SCPackageCode", xmlWriter);
                             

                                          if (localSCPackageCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("SCPackageCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSCPackageCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSCPackageNameTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "SCPackageName", xmlWriter);
                             

                                          if (localSCPackageName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("SCPackageName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSCPackageName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMonthlyRelationBalTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "monthlyRelationBal", xmlWriter);
                             

                                          if (localMonthlyRelationBal==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("monthlyRelationBal cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMonthlyRelationBal);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCriteriaforPrivilegeTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "criteriaforPrivilege", xmlWriter);
                             

                                          if (localCriteriaforPrivilege==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("criteriaforPrivilege cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCriteriaforPrivilege);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBenefitCategoryTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "benefitCategory", xmlWriter);
                             

                                          if (localBenefitCategory==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("benefitCategory cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBenefitCategory);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNameofEmployerTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "nameofEmployer", xmlWriter);
                             

                                          if (localNameofEmployer==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("nameofEmployer cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNameofEmployer);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDesignationTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "designation", xmlWriter);
                             

                                          if (localDesignation==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("designation cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDesignation);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEmployeeIDTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "employeeID", xmlWriter);
                             

                                          if (localEmployeeID==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("employeeID cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEmployeeID);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEmploymentTypeTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "employmentType", xmlWriter);
                             

                                          if (localEmploymentType==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("employmentType cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEmploymentType);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localProfessionTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "profession", xmlWriter);
                             

                                          if (localProfession==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("profession cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localProfession);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDateofJoiningTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "dateofJoining", xmlWriter);
                             

                                          if (localDateofJoining==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("dateofJoining cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDateofJoining);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEmploymentLocationTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "employmentLocation", xmlWriter);
                             

                                          if (localEmploymentLocation==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("employmentLocation cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEmploymentLocation);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSalaryDateTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "salaryDate", xmlWriter);
                             

                                          if (localSalaryDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("salaryDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSalaryDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSalaryAmountTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "salaryAmount", xmlWriter);
                             

                                          if (localSalaryAmount==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("salaryAmount cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSalaryAmount);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTMLFlagTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "TMLFlag", xmlWriter);
                             

                                          if (localTMLFlag==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("TMLFlag cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTMLFlag);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCompanyCategoryTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "companyCategory", xmlWriter);
                             

                                          if (localCompanyCategory==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("companyCategory cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCompanyCategory);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCompanyBlacklistTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "companyBlacklist", xmlWriter);
                             

                                          if (localCompanyBlacklist==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("companyBlacklist cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCompanyBlacklist);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCompanyCodeTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "companyCode", xmlWriter);
                             

                                          if (localCompanyCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("companyCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCompanyCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCompanyNameTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "companyName", xmlWriter);
                             

                                          if (localCompanyName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("companyName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCompanyName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustBlacklistStatusTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "custBlacklistStatus", xmlWriter);
                             

                                          if (localCustBlacklistStatus==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custBlacklistStatus cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustBlacklistStatus);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustBehavioralScoreTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "custBehavioralScore", xmlWriter);
                             

                                          if (localCustBehavioralScore==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custBehavioralScore cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustBehavioralScore);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustProfitabilityScoreTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "custProfitabilityScore", xmlWriter);
                             

                                          if (localCustProfitabilityScore==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custProfitabilityScore cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustProfitabilityScore);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustAttritionScoreTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "custAttritionScore", xmlWriter);
                             

                                          if (localCustAttritionScore==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custAttritionScore cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustAttritionScore);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCustMarketingScoreTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "custMarketingScore", xmlWriter);
                             

                                          if (localCustMarketingScore==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("custMarketingScore cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustMarketingScore);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNextProducttoBuyTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "nextProducttoBuy", xmlWriter);
                             

                                          if (localNextProducttoBuy==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("nextProducttoBuy cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNextProducttoBuy);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPassportNoTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "passportNo", xmlWriter);
                             

                                          if (localPassportNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("passportNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPassportNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localIssueDateTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "issueDate", xmlWriter);
                             

                                          if (localIssueDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("issueDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localIssueDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localExpiryDateTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "expiryDate", xmlWriter);
                             

                                          if (localExpiryDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("expiryDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localExpiryDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localVisaNoTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "visaNo", xmlWriter);
                             

                                          if (localVisaNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("visaNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localVisaNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localVisaIssueDateTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "visaIssueDate", xmlWriter);
                             

                                          if (localVisaIssueDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("visaIssueDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localVisaIssueDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localVisaExpiryDateTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "visaExpiryDate", xmlWriter);
                             

                                          if (localVisaExpiryDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("visaExpiryDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localVisaExpiryDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLabourCardNoTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "labourCardNo", xmlWriter);
                             

                                          if (localLabourCardNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("labourCardNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLabourCardNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLabourCardIssueDateTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "labourCardIssueDate", xmlWriter);
                             

                                          if (localLabourCardIssueDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("labourCardIssueDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLabourCardIssueDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLabourCardExpiryDateTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "labourCardExpiryDate", xmlWriter);
                             

                                          if (localLabourCardExpiryDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("labourCardExpiryDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLabourCardExpiryDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUAENationalIDTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "UAENationalID", xmlWriter);
                             

                                          if (localUAENationalID==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("UAENationalID cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUAENationalID);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMemoSeverityTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "memoSeverity", xmlWriter);
                             

                                          if (localMemoSeverity==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("memoSeverity cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMemoSeverity);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMemoDescTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "memoDesc", xmlWriter);
                             

                                          if (localMemoDesc==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("memoDesc cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMemoDesc);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSignatoryName1Tracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "signatoryName1", xmlWriter);
                             

                                          if (localSignatoryName1==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("signatoryName1 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSignatoryName1);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSignatoryDesignTxt1Tracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "signatoryDesignTxt1", xmlWriter);
                             

                                          if (localSignatoryDesignTxt1==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("signatoryDesignTxt1 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSignatoryDesignTxt1);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDirectorName1Tracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "directorName1", xmlWriter);
                             

                                          if (localDirectorName1==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("directorName1 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDirectorName1);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSignatoryName2Tracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "signatoryName2", xmlWriter);
                             

                                          if (localSignatoryName2==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("signatoryName2 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSignatoryName2);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSignatoryDesignTxt2Tracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "signatoryDesignTxt2", xmlWriter);
                             

                                          if (localSignatoryDesignTxt2==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("signatoryDesignTxt2 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSignatoryDesignTxt2);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDirectorName2Tracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "directorName2", xmlWriter);
                             

                                          if (localDirectorName2==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("directorName2 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDirectorName2);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSignatoryName3Tracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "signatoryName3", xmlWriter);
                             

                                          if (localSignatoryName3==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("signatoryName3 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSignatoryName3);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSignatoryDesignTxt3Tracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "signatoryDesignTxt3", xmlWriter);
                             

                                          if (localSignatoryDesignTxt3==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("signatoryDesignTxt3 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSignatoryDesignTxt3);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDirectorName3Tracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "directorName3", xmlWriter);
                             

                                          if (localDirectorName3==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("directorName3 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDirectorName3);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSignatoryName4Tracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "signatoryName4", xmlWriter);
                             

                                          if (localSignatoryName4==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("signatoryName4 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSignatoryName4);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSignatoryDesignTxt4Tracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "signatoryDesignTxt4", xmlWriter);
                             

                                          if (localSignatoryDesignTxt4==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("signatoryDesignTxt4 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSignatoryDesignTxt4);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDirectorName4Tracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "directorName4", xmlWriter);
                             

                                          if (localDirectorName4==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("directorName4 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDirectorName4);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSignatoryName5Tracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "signatoryName5", xmlWriter);
                             

                                          if (localSignatoryName5==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("signatoryName5 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSignatoryName5);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSignatoryDesignTxt5Tracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "signatoryDesignTxt5", xmlWriter);
                             

                                          if (localSignatoryDesignTxt5==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("signatoryDesignTxt5 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSignatoryDesignTxt5);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDirectorName5Tracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "directorName5", xmlWriter);
                             

                                          if (localDirectorName5==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("directorName5 cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDirectorName5);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBusinessTypeTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "businessType", xmlWriter);
                             

                                          if (localBusinessType==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("businessType cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBusinessType);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRegistrationDateTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "registrationDate", xmlWriter);
                             

                                          if (localRegistrationDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("registrationDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRegistrationDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRegistrationNumberTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "registrationNumber", xmlWriter);
                             

                                          if (localRegistrationNumber==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("registrationNumber cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRegistrationNumber);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localListOfAddressTracker){
                                            if (localListOfAddress==null){
                                                 throw new org.apache.axis2.databinding.ADBException("listOfAddress cannot be null!!");
                                            }
                                           localListOfAddress.serialize(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","listOfAddress"),
                                               xmlWriter);
                                        } if (localListOfUDFDetailsTracker){
                                            if (localListOfUDFDetails==null){
                                                 throw new org.apache.axis2.databinding.ADBException("listOfUDFDetails cannot be null!!");
                                            }
                                           localListOfUDFDetails.serialize(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","listOfUDFDetails"),
                                               xmlWriter);
                                        } if (localListOfComplaintsTracker){
                                            if (localListOfComplaints==null){
                                                 throw new org.apache.axis2.databinding.ADBException("listOfComplaints cannot be null!!");
                                            }
                                           localListOfComplaints.serialize(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","listOfComplaints"),
                                               xmlWriter);
                                        } if (localListOfLeverageDetailsTracker){
                                            if (localListOfLeverageDetails==null){
                                                 throw new org.apache.axis2.databinding.ADBException("listOfLeverageDetails cannot be null!!");
                                            }
                                           localListOfLeverageDetails.serialize(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","listOfLeverageDetails"),
                                               xmlWriter);
                                        } if (localListOfCreditCardsTracker){
                                            if (localListOfCreditCards==null){
                                                 throw new org.apache.axis2.databinding.ADBException("listOfCreditCards cannot be null!!");
                                            }
                                           localListOfCreditCards.serialize(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","listOfCreditCards"),
                                               xmlWriter);
                                        } if (localListOfAccountsTracker){
                                            if (localListOfAccounts==null){
                                                 throw new org.apache.axis2.databinding.ADBException("listOfAccounts cannot be null!!");
                                            }
                                           localListOfAccounts.serialize(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","listOfAccounts"),
                                               xmlWriter);
                                        }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/crm/common/CustomerInformation.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localCustomerIDTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "customerID"));
                                 
                                        if (localCustomerID != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustomerID));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("customerID cannot be null!!");
                                        }
                                    } if (localPrefixTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "prefix"));
                                 
                                        if (localPrefix != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPrefix));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("prefix cannot be null!!");
                                        }
                                    } if (localFullNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "fullName"));
                                 
                                        if (localFullName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFullName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("fullName cannot be null!!");
                                        }
                                    } if (localDateofCIDOpeningTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "dateofCIDOpening"));
                                 
                                        if (localDateofCIDOpening != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDateofCIDOpening));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("dateofCIDOpening cannot be null!!");
                                        }
                                    } if (localLangPreferenceTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "langPreference"));
                                 
                                        if (localLangPreference != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLangPreference));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("langPreference cannot be null!!");
                                        }
                                    } if (localCustIslamicFlagTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "custIslamicFlag"));
                                 
                                        if (localCustIslamicFlag != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustIslamicFlag));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custIslamicFlag cannot be null!!");
                                        }
                                    } if (localRMCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "RMCode"));
                                 
                                        if (localRMCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRMCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("RMCode cannot be null!!");
                                        }
                                    } if (localRMNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "RMName"));
                                 
                                        if (localRMName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRMName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("RMName cannot be null!!");
                                        }
                                    } if (localSMSBankingTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "SMSBanking"));
                                 
                                        if (localSMSBanking != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSMSBanking));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("SMSBanking cannot be null!!");
                                        }
                                    } if (localInternetBankingTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "internetBanking"));
                                 
                                        if (localInternetBanking != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localInternetBanking));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("internetBanking cannot be null!!");
                                        }
                                    } if (localIVRTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "IVR"));
                                 
                                        if (localIVR != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIVR));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("IVR cannot be null!!");
                                        }
                                    } if (localMIBRegStatusTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "MIBRegStatus"));
                                 
                                        if (localMIBRegStatus != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMIBRegStatus));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("MIBRegStatus cannot be null!!");
                                        }
                                    } if (localTPINCreatedDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "TPINCreatedDate"));
                                 
                                        if (localTPINCreatedDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTPINCreatedDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("TPINCreatedDate cannot be null!!");
                                        }
                                    } if (localLastTPINUpdatedDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "LastTPINUpdatedDate"));
                                 
                                        if (localLastTPINUpdatedDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLastTPINUpdatedDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("LastTPINUpdatedDate cannot be null!!");
                                        }
                                    } if (localTotalTouchpointTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "totalTouchpoint"));
                                 
                                        if (localTotalTouchpoint != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTotalTouchpoint));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("totalTouchpoint cannot be null!!");
                                        }
                                    } if (localExpiryCurrentMonthTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "expiryCurrentMonth"));
                                 
                                        if (localExpiryCurrentMonth != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localExpiryCurrentMonth));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("expiryCurrentMonth cannot be null!!");
                                        }
                                    } if (localExpiryNextMonthTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "expiryNextMonth"));
                                 
                                        if (localExpiryNextMonth != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localExpiryNextMonth));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("expiryNextMonth cannot be null!!");
                                        }
                                    } if (localEStatementSubFlagTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "eStatementSubFlag"));
                                 
                                        if (localEStatementSubFlag != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEStatementSubFlag));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("eStatementSubFlag cannot be null!!");
                                        }
                                    } if (localEStatementSubDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "eStatementSubDate"));
                                 
                                        if (localEStatementSubDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEStatementSubDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("eStatementSubDate cannot be null!!");
                                        }
                                    } if (localShortNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "shortName"));
                                 
                                        if (localShortName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localShortName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("shortName cannot be null!!");
                                        }
                                    } if (localCustomerICTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "customerIC"));
                                 
                                        if (localCustomerIC != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustomerIC));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("customerIC cannot be null!!");
                                        }
                                    } if (localDateofBirthTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "dateofBirth"));
                                 
                                        if (localDateofBirth != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDateofBirth));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("dateofBirth cannot be null!!");
                                        }
                                    } if (localGenderTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "gender"));
                                 
                                        if (localGender != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localGender));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("gender cannot be null!!");
                                        }
                                    } if (localMaritalStatusTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "maritalStatus"));
                                 
                                        if (localMaritalStatus != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMaritalStatus));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("maritalStatus cannot be null!!");
                                        }
                                    } if (localEducationalQualTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "educationalQual"));
                                 
                                        if (localEducationalQual != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEducationalQual));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("educationalQual cannot be null!!");
                                        }
                                    } if (localNoofDependentsTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "NoofDependents"));
                                 
                                        if (localNoofDependents != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNoofDependents));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("NoofDependents cannot be null!!");
                                        }
                                    } if (localNationalityCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "nationalityCode"));
                                 
                                        if (localNationalityCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNationalityCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("nationalityCode cannot be null!!");
                                        }
                                    } if (localNationalityNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "nationalityName"));
                                 
                                        if (localNationalityName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNationalityName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("nationalityName cannot be null!!");
                                        }
                                    } if (localResidencyStatusTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "residencyStatus"));
                                 
                                        if (localResidencyStatus != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localResidencyStatus));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("residencyStatus cannot be null!!");
                                        }
                                    } if (localCountryofResidenceTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "countryofResidence"));
                                 
                                        if (localCountryofResidence != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCountryofResidence));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("countryofResidence cannot be null!!");
                                        }
                                    } if (localDomicileBranchCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "domicileBranchCode"));
                                 
                                        if (localDomicileBranchCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDomicileBranchCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("domicileBranchCode cannot be null!!");
                                        }
                                    } if (localDomicileBranchNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "domicileBranchName"));
                                 
                                        if (localDomicileBranchName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDomicileBranchName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("domicileBranchName cannot be null!!");
                                        }
                                    } if (localMotherMaidenNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "motherMaidenName"));
                                 
                                        if (localMotherMaidenName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMotherMaidenName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("motherMaidenName cannot be null!!");
                                        }
                                    } if (localMinorStatusFlagTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "minorStatusFlag"));
                                 
                                        if (localMinorStatusFlag != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMinorStatusFlag));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("minorStatusFlag cannot be null!!");
                                        }
                                    } if (localMemoFlagTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "memoFlag"));
                                 
                                        if (localMemoFlag != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMemoFlag));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("memoFlag cannot be null!!");
                                        }
                                    } if (localSignatureTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "signatureType"));
                                 
                                        if (localSignatureType != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSignatureType));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("signatureType cannot be null!!");
                                        }
                                    } if (localCustCategoryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "custCategory"));
                                 
                                        if (localCustCategory != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustCategory));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custCategory cannot be null!!");
                                        }
                                    } if (localStaffFlagTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "staffFlag"));
                                 
                                        if (localStaffFlag != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localStaffFlag));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("staffFlag cannot be null!!");
                                        }
                                    } if (localProfitCenterCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "profitCenterCode"));
                                 
                                        if (localProfitCenterCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localProfitCenterCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("profitCenterCode cannot be null!!");
                                        }
                                    } if (localProfitCenterNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "profitCenterName"));
                                 
                                        if (localProfitCenterName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localProfitCenterName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("profitCenterName cannot be null!!");
                                        }
                                    } if (localCustSignupDatTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "custSignupDat"));
                                 
                                        if (localCustSignupDat != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustSignupDat));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custSignupDat cannot be null!!");
                                        }
                                    } if (localPromotionCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "promotionCode"));
                                 
                                        if (localPromotionCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPromotionCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("promotionCode cannot be null!!");
                                        }
                                    } if (localSourcingAgentTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "sourcingAgent"));
                                 
                                        if (localSourcingAgent != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSourcingAgent));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sourcingAgent cannot be null!!");
                                        }
                                    } if (localSourcingDeptTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "sourcingDept"));
                                 
                                        if (localSourcingDept != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSourcingDept));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sourcingDept cannot be null!!");
                                        }
                                    } if (localSCPackageCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "SCPackageCode"));
                                 
                                        if (localSCPackageCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSCPackageCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("SCPackageCode cannot be null!!");
                                        }
                                    } if (localSCPackageNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "SCPackageName"));
                                 
                                        if (localSCPackageName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSCPackageName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("SCPackageName cannot be null!!");
                                        }
                                    } if (localMonthlyRelationBalTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "monthlyRelationBal"));
                                 
                                        if (localMonthlyRelationBal != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMonthlyRelationBal));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("monthlyRelationBal cannot be null!!");
                                        }
                                    } if (localCriteriaforPrivilegeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "criteriaforPrivilege"));
                                 
                                        if (localCriteriaforPrivilege != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCriteriaforPrivilege));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("criteriaforPrivilege cannot be null!!");
                                        }
                                    } if (localBenefitCategoryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "benefitCategory"));
                                 
                                        if (localBenefitCategory != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBenefitCategory));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("benefitCategory cannot be null!!");
                                        }
                                    } if (localNameofEmployerTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "nameofEmployer"));
                                 
                                        if (localNameofEmployer != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNameofEmployer));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("nameofEmployer cannot be null!!");
                                        }
                                    } if (localDesignationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "designation"));
                                 
                                        if (localDesignation != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDesignation));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("designation cannot be null!!");
                                        }
                                    } if (localEmployeeIDTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "employeeID"));
                                 
                                        if (localEmployeeID != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmployeeID));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("employeeID cannot be null!!");
                                        }
                                    } if (localEmploymentTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "employmentType"));
                                 
                                        if (localEmploymentType != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmploymentType));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("employmentType cannot be null!!");
                                        }
                                    } if (localProfessionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "profession"));
                                 
                                        if (localProfession != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localProfession));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("profession cannot be null!!");
                                        }
                                    } if (localDateofJoiningTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "dateofJoining"));
                                 
                                        if (localDateofJoining != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDateofJoining));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("dateofJoining cannot be null!!");
                                        }
                                    } if (localEmploymentLocationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "employmentLocation"));
                                 
                                        if (localEmploymentLocation != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEmploymentLocation));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("employmentLocation cannot be null!!");
                                        }
                                    } if (localSalaryDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "salaryDate"));
                                 
                                        if (localSalaryDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSalaryDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("salaryDate cannot be null!!");
                                        }
                                    } if (localSalaryAmountTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "salaryAmount"));
                                 
                                        if (localSalaryAmount != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSalaryAmount));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("salaryAmount cannot be null!!");
                                        }
                                    } if (localTMLFlagTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "TMLFlag"));
                                 
                                        if (localTMLFlag != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTMLFlag));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("TMLFlag cannot be null!!");
                                        }
                                    } if (localCompanyCategoryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "companyCategory"));
                                 
                                        if (localCompanyCategory != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCompanyCategory));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("companyCategory cannot be null!!");
                                        }
                                    } if (localCompanyBlacklistTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "companyBlacklist"));
                                 
                                        if (localCompanyBlacklist != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCompanyBlacklist));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("companyBlacklist cannot be null!!");
                                        }
                                    } if (localCompanyCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "companyCode"));
                                 
                                        if (localCompanyCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCompanyCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("companyCode cannot be null!!");
                                        }
                                    } if (localCompanyNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "companyName"));
                                 
                                        if (localCompanyName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCompanyName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("companyName cannot be null!!");
                                        }
                                    } if (localCustBlacklistStatusTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "custBlacklistStatus"));
                                 
                                        if (localCustBlacklistStatus != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustBlacklistStatus));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custBlacklistStatus cannot be null!!");
                                        }
                                    } if (localCustBehavioralScoreTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "custBehavioralScore"));
                                 
                                        if (localCustBehavioralScore != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustBehavioralScore));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custBehavioralScore cannot be null!!");
                                        }
                                    } if (localCustProfitabilityScoreTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "custProfitabilityScore"));
                                 
                                        if (localCustProfitabilityScore != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustProfitabilityScore));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custProfitabilityScore cannot be null!!");
                                        }
                                    } if (localCustAttritionScoreTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "custAttritionScore"));
                                 
                                        if (localCustAttritionScore != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustAttritionScore));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custAttritionScore cannot be null!!");
                                        }
                                    } if (localCustMarketingScoreTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "custMarketingScore"));
                                 
                                        if (localCustMarketingScore != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustMarketingScore));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("custMarketingScore cannot be null!!");
                                        }
                                    } if (localNextProducttoBuyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "nextProducttoBuy"));
                                 
                                        if (localNextProducttoBuy != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNextProducttoBuy));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("nextProducttoBuy cannot be null!!");
                                        }
                                    } if (localPassportNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "passportNo"));
                                 
                                        if (localPassportNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPassportNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("passportNo cannot be null!!");
                                        }
                                    } if (localIssueDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "issueDate"));
                                 
                                        if (localIssueDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIssueDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("issueDate cannot be null!!");
                                        }
                                    } if (localExpiryDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "expiryDate"));
                                 
                                        if (localExpiryDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localExpiryDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("expiryDate cannot be null!!");
                                        }
                                    } if (localVisaNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "visaNo"));
                                 
                                        if (localVisaNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localVisaNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("visaNo cannot be null!!");
                                        }
                                    } if (localVisaIssueDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "visaIssueDate"));
                                 
                                        if (localVisaIssueDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localVisaIssueDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("visaIssueDate cannot be null!!");
                                        }
                                    } if (localVisaExpiryDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "visaExpiryDate"));
                                 
                                        if (localVisaExpiryDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localVisaExpiryDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("visaExpiryDate cannot be null!!");
                                        }
                                    } if (localLabourCardNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "labourCardNo"));
                                 
                                        if (localLabourCardNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLabourCardNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("labourCardNo cannot be null!!");
                                        }
                                    } if (localLabourCardIssueDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "labourCardIssueDate"));
                                 
                                        if (localLabourCardIssueDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLabourCardIssueDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("labourCardIssueDate cannot be null!!");
                                        }
                                    } if (localLabourCardExpiryDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "labourCardExpiryDate"));
                                 
                                        if (localLabourCardExpiryDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLabourCardExpiryDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("labourCardExpiryDate cannot be null!!");
                                        }
                                    } if (localUAENationalIDTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "UAENationalID"));
                                 
                                        if (localUAENationalID != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUAENationalID));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("UAENationalID cannot be null!!");
                                        }
                                    } if (localMemoSeverityTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "memoSeverity"));
                                 
                                        if (localMemoSeverity != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMemoSeverity));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("memoSeverity cannot be null!!");
                                        }
                                    } if (localMemoDescTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "memoDesc"));
                                 
                                        if (localMemoDesc != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMemoDesc));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("memoDesc cannot be null!!");
                                        }
                                    } if (localSignatoryName1Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "signatoryName1"));
                                 
                                        if (localSignatoryName1 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSignatoryName1));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("signatoryName1 cannot be null!!");
                                        }
                                    } if (localSignatoryDesignTxt1Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "signatoryDesignTxt1"));
                                 
                                        if (localSignatoryDesignTxt1 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSignatoryDesignTxt1));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("signatoryDesignTxt1 cannot be null!!");
                                        }
                                    } if (localDirectorName1Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "directorName1"));
                                 
                                        if (localDirectorName1 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDirectorName1));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("directorName1 cannot be null!!");
                                        }
                                    } if (localSignatoryName2Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "signatoryName2"));
                                 
                                        if (localSignatoryName2 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSignatoryName2));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("signatoryName2 cannot be null!!");
                                        }
                                    } if (localSignatoryDesignTxt2Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "signatoryDesignTxt2"));
                                 
                                        if (localSignatoryDesignTxt2 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSignatoryDesignTxt2));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("signatoryDesignTxt2 cannot be null!!");
                                        }
                                    } if (localDirectorName2Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "directorName2"));
                                 
                                        if (localDirectorName2 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDirectorName2));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("directorName2 cannot be null!!");
                                        }
                                    } if (localSignatoryName3Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "signatoryName3"));
                                 
                                        if (localSignatoryName3 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSignatoryName3));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("signatoryName3 cannot be null!!");
                                        }
                                    } if (localSignatoryDesignTxt3Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "signatoryDesignTxt3"));
                                 
                                        if (localSignatoryDesignTxt3 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSignatoryDesignTxt3));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("signatoryDesignTxt3 cannot be null!!");
                                        }
                                    } if (localDirectorName3Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "directorName3"));
                                 
                                        if (localDirectorName3 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDirectorName3));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("directorName3 cannot be null!!");
                                        }
                                    } if (localSignatoryName4Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "signatoryName4"));
                                 
                                        if (localSignatoryName4 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSignatoryName4));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("signatoryName4 cannot be null!!");
                                        }
                                    } if (localSignatoryDesignTxt4Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "signatoryDesignTxt4"));
                                 
                                        if (localSignatoryDesignTxt4 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSignatoryDesignTxt4));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("signatoryDesignTxt4 cannot be null!!");
                                        }
                                    } if (localDirectorName4Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "directorName4"));
                                 
                                        if (localDirectorName4 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDirectorName4));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("directorName4 cannot be null!!");
                                        }
                                    } if (localSignatoryName5Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "signatoryName5"));
                                 
                                        if (localSignatoryName5 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSignatoryName5));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("signatoryName5 cannot be null!!");
                                        }
                                    } if (localSignatoryDesignTxt5Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "signatoryDesignTxt5"));
                                 
                                        if (localSignatoryDesignTxt5 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSignatoryDesignTxt5));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("signatoryDesignTxt5 cannot be null!!");
                                        }
                                    } if (localDirectorName5Tracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "directorName5"));
                                 
                                        if (localDirectorName5 != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDirectorName5));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("directorName5 cannot be null!!");
                                        }
                                    } if (localBusinessTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "businessType"));
                                 
                                        if (localBusinessType != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBusinessType));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("businessType cannot be null!!");
                                        }
                                    } if (localRegistrationDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "registrationDate"));
                                 
                                        if (localRegistrationDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRegistrationDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("registrationDate cannot be null!!");
                                        }
                                    } if (localRegistrationNumberTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "registrationNumber"));
                                 
                                        if (localRegistrationNumber != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRegistrationNumber));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("registrationNumber cannot be null!!");
                                        }
                                    } if (localListOfAddressTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "listOfAddress"));
                            
                            
                                    if (localListOfAddress==null){
                                         throw new org.apache.axis2.databinding.ADBException("listOfAddress cannot be null!!");
                                    }
                                    elementList.add(localListOfAddress);
                                } if (localListOfUDFDetailsTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "listOfUDFDetails"));
                            
                            
                                    if (localListOfUDFDetails==null){
                                         throw new org.apache.axis2.databinding.ADBException("listOfUDFDetails cannot be null!!");
                                    }
                                    elementList.add(localListOfUDFDetails);
                                } if (localListOfComplaintsTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "listOfComplaints"));
                            
                            
                                    if (localListOfComplaints==null){
                                         throw new org.apache.axis2.databinding.ADBException("listOfComplaints cannot be null!!");
                                    }
                                    elementList.add(localListOfComplaints);
                                } if (localListOfLeverageDetailsTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "listOfLeverageDetails"));
                            
                            
                                    if (localListOfLeverageDetails==null){
                                         throw new org.apache.axis2.databinding.ADBException("listOfLeverageDetails cannot be null!!");
                                    }
                                    elementList.add(localListOfLeverageDetails);
                                } if (localListOfCreditCardsTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "listOfCreditCards"));
                            
                            
                                    if (localListOfCreditCards==null){
                                         throw new org.apache.axis2.databinding.ADBException("listOfCreditCards cannot be null!!");
                                    }
                                    elementList.add(localListOfCreditCards);
                                } if (localListOfAccountsTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "listOfAccounts"));
                            
                            
                                    if (localListOfAccounts==null){
                                         throw new org.apache.axis2.databinding.ADBException("listOfAccounts cannot be null!!");
                                    }
                                    elementList.add(localListOfAccounts);
                                }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static Customer_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            Customer_type0 object =
                new Customer_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"customer_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (Customer_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","customerID").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"customerID" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustomerID(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","prefix").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"prefix" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPrefix(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","fullName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"fullName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFullName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","dateofCIDOpening").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"dateofCIDOpening" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDateofCIDOpening(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","langPreference").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"langPreference" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLangPreference(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","custIslamicFlag").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custIslamicFlag" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustIslamicFlag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","RMCode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"RMCode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRMCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","RMName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"RMName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRMName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","SMSBanking").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"SMSBanking" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSMSBanking(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","internetBanking").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"internetBanking" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setInternetBanking(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","IVR").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"IVR" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIVR(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","MIBRegStatus").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"MIBRegStatus" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMIBRegStatus(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","TPINCreatedDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"TPINCreatedDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTPINCreatedDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","LastTPINUpdatedDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"LastTPINUpdatedDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLastTPINUpdatedDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","totalTouchpoint").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"totalTouchpoint" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTotalTouchpoint(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","expiryCurrentMonth").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"expiryCurrentMonth" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setExpiryCurrentMonth(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","expiryNextMonth").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"expiryNextMonth" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setExpiryNextMonth(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","eStatementSubFlag").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"eStatementSubFlag" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEStatementSubFlag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","eStatementSubDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"eStatementSubDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEStatementSubDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","shortName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"shortName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setShortName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","customerIC").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"customerIC" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustomerIC(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","dateofBirth").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"dateofBirth" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDateofBirth(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","gender").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"gender" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setGender(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","maritalStatus").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"maritalStatus" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMaritalStatus(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","educationalQual").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"educationalQual" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEducationalQual(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","NoofDependents").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"NoofDependents" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNoofDependents(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","nationalityCode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"nationalityCode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNationalityCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","nationalityName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"nationalityName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNationalityName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","residencyStatus").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"residencyStatus" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setResidencyStatus(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","countryofResidence").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"countryofResidence" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCountryofResidence(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","domicileBranchCode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"domicileBranchCode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDomicileBranchCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","domicileBranchName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"domicileBranchName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDomicileBranchName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","motherMaidenName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"motherMaidenName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMotherMaidenName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","minorStatusFlag").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"minorStatusFlag" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMinorStatusFlag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","memoFlag").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"memoFlag" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMemoFlag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","signatureType").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"signatureType" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSignatureType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","custCategory").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custCategory" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustCategory(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","staffFlag").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"staffFlag" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setStaffFlag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","profitCenterCode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"profitCenterCode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setProfitCenterCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","profitCenterName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"profitCenterName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setProfitCenterName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","custSignupDat").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custSignupDat" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustSignupDat(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","promotionCode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"promotionCode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPromotionCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","sourcingAgent").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"sourcingAgent" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSourcingAgent(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","sourcingDept").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"sourcingDept" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSourcingDept(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","SCPackageCode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"SCPackageCode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSCPackageCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","SCPackageName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"SCPackageName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSCPackageName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","monthlyRelationBal").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"monthlyRelationBal" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMonthlyRelationBal(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","criteriaforPrivilege").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"criteriaforPrivilege" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCriteriaforPrivilege(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","benefitCategory").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"benefitCategory" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBenefitCategory(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","nameofEmployer").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"nameofEmployer" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNameofEmployer(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","designation").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"designation" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDesignation(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","employeeID").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"employeeID" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEmployeeID(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","employmentType").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"employmentType" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEmploymentType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","profession").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"profession" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setProfession(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","dateofJoining").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"dateofJoining" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDateofJoining(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","employmentLocation").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"employmentLocation" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEmploymentLocation(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","salaryDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"salaryDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSalaryDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","salaryAmount").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"salaryAmount" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSalaryAmount(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","TMLFlag").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"TMLFlag" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTMLFlag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","companyCategory").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"companyCategory" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCompanyCategory(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","companyBlacklist").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"companyBlacklist" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCompanyBlacklist(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","companyCode").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"companyCode" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCompanyCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","companyName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"companyName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCompanyName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","custBlacklistStatus").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custBlacklistStatus" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustBlacklistStatus(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","custBehavioralScore").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custBehavioralScore" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustBehavioralScore(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","custProfitabilityScore").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custProfitabilityScore" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustProfitabilityScore(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","custAttritionScore").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custAttritionScore" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustAttritionScore(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","custMarketingScore").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"custMarketingScore" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustMarketingScore(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","nextProducttoBuy").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"nextProducttoBuy" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNextProducttoBuy(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","passportNo").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"passportNo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPassportNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","issueDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"issueDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIssueDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","expiryDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"expiryDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setExpiryDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","visaNo").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"visaNo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setVisaNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","visaIssueDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"visaIssueDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setVisaIssueDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","visaExpiryDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"visaExpiryDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setVisaExpiryDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","labourCardNo").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"labourCardNo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLabourCardNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","labourCardIssueDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"labourCardIssueDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLabourCardIssueDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","labourCardExpiryDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"labourCardExpiryDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLabourCardExpiryDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","UAENationalID").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"UAENationalID" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUAENationalID(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","memoSeverity").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"memoSeverity" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMemoSeverity(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","memoDesc").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"memoDesc" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMemoDesc(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","signatoryName1").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"signatoryName1" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSignatoryName1(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","signatoryDesignTxt1").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"signatoryDesignTxt1" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSignatoryDesignTxt1(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","directorName1").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"directorName1" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDirectorName1(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","signatoryName2").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"signatoryName2" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSignatoryName2(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","signatoryDesignTxt2").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"signatoryDesignTxt2" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSignatoryDesignTxt2(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","directorName2").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"directorName2" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDirectorName2(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","signatoryName3").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"signatoryName3" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSignatoryName3(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","signatoryDesignTxt3").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"signatoryDesignTxt3" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSignatoryDesignTxt3(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","directorName3").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"directorName3" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDirectorName3(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","signatoryName4").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"signatoryName4" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSignatoryName4(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","signatoryDesignTxt4").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"signatoryDesignTxt4" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSignatoryDesignTxt4(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","directorName4").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"directorName4" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDirectorName4(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","signatoryName5").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"signatoryName5" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSignatoryName5(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","signatoryDesignTxt5").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"signatoryDesignTxt5" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSignatoryDesignTxt5(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","directorName5").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"directorName5" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDirectorName5(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","businessType").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"businessType" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBusinessType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","registrationDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"registrationDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRegistrationDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","registrationNumber").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"registrationNumber" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRegistrationNumber(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","listOfAddress").equals(reader.getName())){
                                
                                                object.setListOfAddress(ListOfAddress_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","listOfUDFDetails").equals(reader.getName())){
                                
                                                object.setListOfUDFDetails(ListOfUDFDetails_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","listOfComplaints").equals(reader.getName())){
                                
                                                object.setListOfComplaints(ListOfComplaints_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","listOfLeverageDetails").equals(reader.getName())){
                                
                                                object.setListOfLeverageDetails(ListOfLeverageDetails_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","listOfCreditCards").equals(reader.getName())){
                                
                                                object.setListOfCreditCards(ListOfCreditCards_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","listOfAccounts").equals(reader.getName())){
                                
                                                object.setListOfAccounts(ListOfAccounts_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class ListOfComplaints_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = listOfComplaints_type0
                Namespace URI = http://www.adcb.com/crm/common/CustomerInformation.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for Complaints
                        * This was an Array!
                        */

                        
                                    protected Complaints_type0[] localComplaints ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localComplaintsTracker = false ;

                           public boolean isComplaintsSpecified(){
                               return localComplaintsTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Complaints_type0[]
                           */
                           public  Complaints_type0[] getComplaints(){
                               return localComplaints;
                           }

                           
                        


                               
                              /**
                               * validate the array for Complaints
                               */
                              protected void validateComplaints(Complaints_type0[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param Complaints
                              */
                              public void setComplaints(Complaints_type0[] param){
                              
                                   validateComplaints(param);

                               localComplaintsTracker = param != null;
                                      
                                      this.localComplaints=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param Complaints_type0
                             */
                             public void addComplaints(Complaints_type0 param){
                                   if (localComplaints == null){
                                   localComplaints = new Complaints_type0[]{};
                                   }

                            
                                 //update the setting tracker
                                localComplaintsTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localComplaints);
                               list.add(param);
                               this.localComplaints =
                             (Complaints_type0[])list.toArray(
                            new Complaints_type0[list.size()]);

                             }
                             

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/crm/common/CustomerInformation.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":listOfComplaints_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "listOfComplaints_type0",
                           xmlWriter);
                   }

               
                   }
                if (localComplaintsTracker){
                                       if (localComplaints!=null){
                                            for (int i = 0;i < localComplaints.length;i++){
                                                if (localComplaints[i] != null){
                                                 localComplaints[i].serialize(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","complaints"),
                                                           xmlWriter);
                                                } else {
                                                   
                                                        // we don't have to do any thing since minOccures is zero
                                                    
                                                }

                                            }
                                     } else {
                                        
                                               throw new org.apache.axis2.databinding.ADBException("complaints cannot be null!!");
                                        
                                    }
                                 }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/crm/common/CustomerInformation.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localComplaintsTracker){
                             if (localComplaints!=null) {
                                 for (int i = 0;i < localComplaints.length;i++){

                                    if (localComplaints[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                          "complaints"));
                                         elementList.add(localComplaints[i]);
                                    } else {
                                        
                                                // nothing to do
                                            
                                    }

                                 }
                             } else {
                                 
                                        throw new org.apache.axis2.databinding.ADBException("complaints cannot be null!!");
                                    
                             }

                        }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static ListOfComplaints_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            ListOfComplaints_type0 object =
                new ListOfComplaints_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"listOfComplaints_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (ListOfComplaints_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                        java.util.ArrayList list1 = new java.util.ArrayList();
                    
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","complaints").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    list1.add(Complaints_type0.Factory.parse(reader));
                                                                
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone1 = false;
                                                        while(!loopDone1){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone1 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","complaints").equals(reader.getName())){
                                                                    list1.add(Complaints_type0.Factory.parse(reader));
                                                                        
                                                                }else{
                                                                    loopDone1 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array
                                                        
                                                        object.setComplaints((Complaints_type0[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                Complaints_type0.class,
                                                                list1));
                                                            
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class Complaints_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = complaints_type0
                Namespace URI = http://www.adcb.com/crm/common/CustomerInformation.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for ComplaintType
                        */

                        
                                    protected java.lang.String localComplaintType ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localComplaintTypeTracker = false ;

                           public boolean isComplaintTypeSpecified(){
                               return localComplaintTypeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getComplaintType(){
                               return localComplaintType;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ComplaintType
                               */
                               public void setComplaintType(java.lang.String param){
                            localComplaintTypeTracker = param != null;
                                   
                                            this.localComplaintType=param;
                                    

                               }
                            

                        /**
                        * field for RefNo
                        */

                        
                                    protected java.lang.String localRefNo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRefNoTracker = false ;

                           public boolean isRefNoSpecified(){
                               return localRefNoTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRefNo(){
                               return localRefNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RefNo
                               */
                               public void setRefNo(java.lang.String param){
                            localRefNoTracker = param != null;
                                   
                                            this.localRefNo=param;
                                    

                               }
                            

                        /**
                        * field for DateTime
                        */

                        
                                    protected java.lang.String localDateTime ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDateTimeTracker = false ;

                           public boolean isDateTimeSpecified(){
                               return localDateTimeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDateTime(){
                               return localDateTime;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DateTime
                               */
                               public void setDateTime(java.lang.String param){
                            localDateTimeTracker = param != null;
                                   
                                            this.localDateTime=param;
                                    

                               }
                            

                        /**
                        * field for BusinessClassification
                        */

                        
                                    protected java.lang.String localBusinessClassification ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBusinessClassificationTracker = false ;

                           public boolean isBusinessClassificationSpecified(){
                               return localBusinessClassificationTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBusinessClassification(){
                               return localBusinessClassification;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BusinessClassification
                               */
                               public void setBusinessClassification(java.lang.String param){
                            localBusinessClassificationTracker = param != null;
                                   
                                            this.localBusinessClassification=param;
                                    

                               }
                            

                        /**
                        * field for ProductService
                        */

                        
                                    protected java.lang.String localProductService ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localProductServiceTracker = false ;

                           public boolean isProductServiceSpecified(){
                               return localProductServiceTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getProductService(){
                               return localProductService;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ProductService
                               */
                               public void setProductService(java.lang.String param){
                            localProductServiceTracker = param != null;
                                   
                                            this.localProductService=param;
                                    

                               }
                            

                        /**
                        * field for Type
                        */

                        
                                    protected java.lang.String localType ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTypeTracker = false ;

                           public boolean isTypeSpecified(){
                               return localTypeTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getType(){
                               return localType;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Type
                               */
                               public void setType(java.lang.String param){
                            localTypeTracker = param != null;
                                   
                                            this.localType=param;
                                    

                               }
                            

                        /**
                        * field for Category
                        */

                        
                                    protected java.lang.String localCategory ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCategoryTracker = false ;

                           public boolean isCategorySpecified(){
                               return localCategoryTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCategory(){
                               return localCategory;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Category
                               */
                               public void setCategory(java.lang.String param){
                            localCategoryTracker = param != null;
                                   
                                            this.localCategory=param;
                                    

                               }
                            

                        /**
                        * field for Status
                        */

                        
                                    protected java.lang.String localStatus ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localStatusTracker = false ;

                           public boolean isStatusSpecified(){
                               return localStatusTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getStatus(){
                               return localStatus;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Status
                               */
                               public void setStatus(java.lang.String param){
                            localStatusTracker = param != null;
                                   
                                            this.localStatus=param;
                                    

                               }
                            

                        /**
                        * field for AssignedTo
                        */

                        
                                    protected java.lang.String localAssignedTo ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAssignedToTracker = false ;

                           public boolean isAssignedToSpecified(){
                               return localAssignedToTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAssignedTo(){
                               return localAssignedTo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AssignedTo
                               */
                               public void setAssignedTo(java.lang.String param){
                            localAssignedToTracker = param != null;
                                   
                                            this.localAssignedTo=param;
                                    

                               }
                            

                        /**
                        * field for FeedBack
                        */

                        
                                    protected java.lang.String localFeedBack ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFeedBackTracker = false ;

                           public boolean isFeedBackSpecified(){
                               return localFeedBackTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFeedBack(){
                               return localFeedBack;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FeedBack
                               */
                               public void setFeedBack(java.lang.String param){
                            localFeedBackTracker = param != null;
                                   
                                            this.localFeedBack=param;
                                    

                               }
                            

                        /**
                        * field for Description
                        */

                        
                                    protected java.lang.String localDescription ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDescriptionTracker = false ;

                           public boolean isDescriptionSpecified(){
                               return localDescriptionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDescription(){
                               return localDescription;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Description
                               */
                               public void setDescription(java.lang.String param){
                            localDescriptionTracker = param != null;
                                   
                                            this.localDescription=param;
                                    

                               }
                            

                        /**
                        * field for ClosureAccount
                        */

                        
                                    protected java.lang.String localClosureAccount ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localClosureAccountTracker = false ;

                           public boolean isClosureAccountSpecified(){
                               return localClosureAccountTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getClosureAccount(){
                               return localClosureAccount;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ClosureAccount
                               */
                               public void setClosureAccount(java.lang.String param){
                            localClosureAccountTracker = param != null;
                                   
                                            this.localClosureAccount=param;
                                    

                               }
                            

                        /**
                        * field for CancellationOfCredit
                        */

                        
                                    protected java.lang.String localCancellationOfCredit ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCancellationOfCreditTracker = false ;

                           public boolean isCancellationOfCreditSpecified(){
                               return localCancellationOfCreditTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCancellationOfCredit(){
                               return localCancellationOfCredit;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CancellationOfCredit
                               */
                               public void setCancellationOfCredit(java.lang.String param){
                            localCancellationOfCreditTracker = param != null;
                                   
                                            this.localCancellationOfCredit=param;
                                    

                               }
                            

                        /**
                        * field for ReceivedByName
                        */

                        
                                    protected java.lang.String localReceivedByName ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localReceivedByNameTracker = false ;

                           public boolean isReceivedByNameSpecified(){
                               return localReceivedByNameTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getReceivedByName(){
                               return localReceivedByName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ReceivedByName
                               */
                               public void setReceivedByName(java.lang.String param){
                            localReceivedByNameTracker = param != null;
                                   
                                            this.localReceivedByName=param;
                                    

                               }
                            

                        /**
                        * field for ReceivedByPosition
                        */

                        
                                    protected java.lang.String localReceivedByPosition ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localReceivedByPositionTracker = false ;

                           public boolean isReceivedByPositionSpecified(){
                               return localReceivedByPositionTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getReceivedByPosition(){
                               return localReceivedByPosition;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ReceivedByPosition
                               */
                               public void setReceivedByPosition(java.lang.String param){
                            localReceivedByPositionTracker = param != null;
                                   
                                            this.localReceivedByPosition=param;
                                    

                               }
                            

                        /**
                        * field for ReceivedByLocation
                        */

                        
                                    protected java.lang.String localReceivedByLocation ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localReceivedByLocationTracker = false ;

                           public boolean isReceivedByLocationSpecified(){
                               return localReceivedByLocationTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getReceivedByLocation(){
                               return localReceivedByLocation;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ReceivedByLocation
                               */
                               public void setReceivedByLocation(java.lang.String param){
                            localReceivedByLocationTracker = param != null;
                                   
                                            this.localReceivedByLocation=param;
                                    

                               }
                            

                        /**
                        * field for ReceivedByBranch
                        */

                        
                                    protected java.lang.String localReceivedByBranch ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localReceivedByBranchTracker = false ;

                           public boolean isReceivedByBranchSpecified(){
                               return localReceivedByBranchTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getReceivedByBranch(){
                               return localReceivedByBranch;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ReceivedByBranch
                               */
                               public void setReceivedByBranch(java.lang.String param){
                            localReceivedByBranchTracker = param != null;
                                   
                                            this.localReceivedByBranch=param;
                                    

                               }
                            

                        /**
                        * field for DiaryHistory
                        */

                        
                                    protected java.lang.String localDiaryHistory ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDiaryHistoryTracker = false ;

                           public boolean isDiaryHistorySpecified(){
                               return localDiaryHistoryTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDiaryHistory(){
                               return localDiaryHistory;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DiaryHistory
                               */
                               public void setDiaryHistory(java.lang.String param){
                            localDiaryHistoryTracker = param != null;
                                   
                                            this.localDiaryHistory=param;
                                    

                               }
                            

                        /**
                        * field for CPDUnit
                        */

                        
                                    protected java.lang.String localCPDUnit ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCPDUnitTracker = false ;

                           public boolean isCPDUnitSpecified(){
                               return localCPDUnitTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCPDUnit(){
                               return localCPDUnit;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CPDUnit
                               */
                               public void setCPDUnit(java.lang.String param){
                            localCPDUnitTracker = param != null;
                                   
                                            this.localCPDUnit=param;
                                    

                               }
                            

                        /**
                        * field for ClosedDate
                        */

                        
                                    protected java.lang.String localClosedDate ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localClosedDateTracker = false ;

                           public boolean isClosedDateSpecified(){
                               return localClosedDateTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getClosedDate(){
                               return localClosedDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ClosedDate
                               */
                               public void setClosedDate(java.lang.String param){
                            localClosedDateTracker = param != null;
                                   
                                            this.localClosedDate=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/crm/common/CustomerInformation.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":complaints_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "complaints_type0",
                           xmlWriter);
                   }

               
                   }
                if (localComplaintTypeTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "complaintType", xmlWriter);
                             

                                          if (localComplaintType==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("complaintType cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localComplaintType);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRefNoTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "refNo", xmlWriter);
                             

                                          if (localRefNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("refNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRefNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDateTimeTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "dateTime", xmlWriter);
                             

                                          if (localDateTime==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("dateTime cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDateTime);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBusinessClassificationTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "businessClassification", xmlWriter);
                             

                                          if (localBusinessClassification==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("businessClassification cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBusinessClassification);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localProductServiceTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "productService", xmlWriter);
                             

                                          if (localProductService==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("productService cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localProductService);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTypeTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "type", xmlWriter);
                             

                                          if (localType==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("type cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localType);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCategoryTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "category", xmlWriter);
                             

                                          if (localCategory==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("category cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCategory);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localStatusTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "status", xmlWriter);
                             

                                          if (localStatus==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("status cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localStatus);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAssignedToTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "assignedTo", xmlWriter);
                             

                                          if (localAssignedTo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("assignedTo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAssignedTo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFeedBackTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "feedBack", xmlWriter);
                             

                                          if (localFeedBack==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("feedBack cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFeedBack);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDescriptionTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "description", xmlWriter);
                             

                                          if (localDescription==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("description cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDescription);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localClosureAccountTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "closureAccount", xmlWriter);
                             

                                          if (localClosureAccount==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("closureAccount cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localClosureAccount);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCancellationOfCreditTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "cancellationOfCredit", xmlWriter);
                             

                                          if (localCancellationOfCredit==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("cancellationOfCredit cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCancellationOfCredit);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localReceivedByNameTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "receivedByName", xmlWriter);
                             

                                          if (localReceivedByName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("receivedByName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localReceivedByName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localReceivedByPositionTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "ReceivedByPosition", xmlWriter);
                             

                                          if (localReceivedByPosition==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ReceivedByPosition cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localReceivedByPosition);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localReceivedByLocationTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "ReceivedByLocation", xmlWriter);
                             

                                          if (localReceivedByLocation==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ReceivedByLocation cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localReceivedByLocation);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localReceivedByBranchTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "ReceivedByBranch", xmlWriter);
                             

                                          if (localReceivedByBranch==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ReceivedByBranch cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localReceivedByBranch);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDiaryHistoryTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "diaryHistory", xmlWriter);
                             

                                          if (localDiaryHistory==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("diaryHistory cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDiaryHistory);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCPDUnitTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "CPDUnit", xmlWriter);
                             

                                          if (localCPDUnit==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("CPDUnit cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCPDUnit);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localClosedDateTracker){
                                    namespace = "http://www.adcb.com/crm/common/CustomerInformation.xsd";
                                    writeStartElement(null, namespace, "closedDate", xmlWriter);
                             

                                          if (localClosedDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("closedDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localClosedDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/crm/common/CustomerInformation.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localComplaintTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "complaintType"));
                                 
                                        if (localComplaintType != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localComplaintType));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("complaintType cannot be null!!");
                                        }
                                    } if (localRefNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "refNo"));
                                 
                                        if (localRefNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRefNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("refNo cannot be null!!");
                                        }
                                    } if (localDateTimeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "dateTime"));
                                 
                                        if (localDateTime != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDateTime));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("dateTime cannot be null!!");
                                        }
                                    } if (localBusinessClassificationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "businessClassification"));
                                 
                                        if (localBusinessClassification != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBusinessClassification));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("businessClassification cannot be null!!");
                                        }
                                    } if (localProductServiceTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "productService"));
                                 
                                        if (localProductService != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localProductService));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("productService cannot be null!!");
                                        }
                                    } if (localTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "type"));
                                 
                                        if (localType != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localType));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("type cannot be null!!");
                                        }
                                    } if (localCategoryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "category"));
                                 
                                        if (localCategory != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCategory));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("category cannot be null!!");
                                        }
                                    } if (localStatusTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "status"));
                                 
                                        if (localStatus != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localStatus));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("status cannot be null!!");
                                        }
                                    } if (localAssignedToTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "assignedTo"));
                                 
                                        if (localAssignedTo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAssignedTo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("assignedTo cannot be null!!");
                                        }
                                    } if (localFeedBackTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "feedBack"));
                                 
                                        if (localFeedBack != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFeedBack));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("feedBack cannot be null!!");
                                        }
                                    } if (localDescriptionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "description"));
                                 
                                        if (localDescription != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDescription));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("description cannot be null!!");
                                        }
                                    } if (localClosureAccountTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "closureAccount"));
                                 
                                        if (localClosureAccount != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localClosureAccount));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("closureAccount cannot be null!!");
                                        }
                                    } if (localCancellationOfCreditTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "cancellationOfCredit"));
                                 
                                        if (localCancellationOfCredit != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCancellationOfCredit));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("cancellationOfCredit cannot be null!!");
                                        }
                                    } if (localReceivedByNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "receivedByName"));
                                 
                                        if (localReceivedByName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReceivedByName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("receivedByName cannot be null!!");
                                        }
                                    } if (localReceivedByPositionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "ReceivedByPosition"));
                                 
                                        if (localReceivedByPosition != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReceivedByPosition));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ReceivedByPosition cannot be null!!");
                                        }
                                    } if (localReceivedByLocationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "ReceivedByLocation"));
                                 
                                        if (localReceivedByLocation != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReceivedByLocation));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ReceivedByLocation cannot be null!!");
                                        }
                                    } if (localReceivedByBranchTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "ReceivedByBranch"));
                                 
                                        if (localReceivedByBranch != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReceivedByBranch));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ReceivedByBranch cannot be null!!");
                                        }
                                    } if (localDiaryHistoryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "diaryHistory"));
                                 
                                        if (localDiaryHistory != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDiaryHistory));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("diaryHistory cannot be null!!");
                                        }
                                    } if (localCPDUnitTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "CPDUnit"));
                                 
                                        if (localCPDUnit != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCPDUnit));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("CPDUnit cannot be null!!");
                                        }
                                    } if (localClosedDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                      "closedDate"));
                                 
                                        if (localClosedDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localClosedDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("closedDate cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static Complaints_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            Complaints_type0 object =
                new Complaints_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"complaints_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (Complaints_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","complaintType").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"complaintType" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setComplaintType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","refNo").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"refNo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRefNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","dateTime").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"dateTime" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDateTime(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","businessClassification").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"businessClassification" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBusinessClassification(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","productService").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"productService" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setProductService(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","type").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"type" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","category").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"category" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCategory(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","status").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"status" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setStatus(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","assignedTo").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"assignedTo" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAssignedTo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","feedBack").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"feedBack" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFeedBack(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","description").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"description" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDescription(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","closureAccount").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"closureAccount" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setClosureAccount(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","cancellationOfCredit").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"cancellationOfCredit" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCancellationOfCredit(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","receivedByName").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"receivedByName" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReceivedByName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","ReceivedByPosition").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ReceivedByPosition" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReceivedByPosition(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","ReceivedByLocation").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ReceivedByLocation" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReceivedByLocation(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","ReceivedByBranch").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"ReceivedByBranch" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReceivedByBranch(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","diaryHistory").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"diaryHistory" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDiaryHistory(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","CPDUnit").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"CPDUnit" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCPDUnit(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","closedDate").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"closedDate" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setClosedDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class Customer_type0E
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = Customer_type0
                Namespace URI = http://www.adcb.com/crm/inq/GetCustomerInformation.xsd
                Namespace Prefix = ns3
                */
            

                        /**
                        * field for CustomerId
                        */

                        
                                    protected java.lang.String localCustomerId ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustomerIdTracker = false ;

                           public boolean isCustomerIdSpecified(){
                               return localCustomerIdTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCustomerId(){
                               return localCustomerId;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CustomerId
                               */
                               public void setCustomerId(java.lang.String param){
                            localCustomerIdTracker = param != null;
                                   
                                            this.localCustomerId=param;
                                    

                               }
                            

                        /**
                        * field for TypeOfTxn
                        */

                        
                                    protected java.lang.String localTypeOfTxn ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTypeOfTxnTracker = false ;

                           public boolean isTypeOfTxnSpecified(){
                               return localTypeOfTxnTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTypeOfTxn(){
                               return localTypeOfTxn;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TypeOfTxn
                               */
                               public void setTypeOfTxn(java.lang.String param){
                            localTypeOfTxnTracker = param != null;
                                   
                                            this.localTypeOfTxn=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/crm/inq/GetCustomerInformation.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":Customer_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "Customer_type0",
                           xmlWriter);
                   }

               
                   }
                if (localCustomerIdTracker){
                                    namespace = "http://www.adcb.com/crm/inq/GetCustomerInformation.xsd";
                                    writeStartElement(null, namespace, "CustomerId", xmlWriter);
                             

                                          if (localCustomerId==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("CustomerId cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCustomerId);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTypeOfTxnTracker){
                                    namespace = "http://www.adcb.com/crm/inq/GetCustomerInformation.xsd";
                                    writeStartElement(null, namespace, "TypeOfTxn", xmlWriter);
                             

                                          if (localTypeOfTxn==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("TypeOfTxn cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTypeOfTxn);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/crm/inq/GetCustomerInformation.xsd")){
                return "ns3";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localCustomerIdTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/inq/GetCustomerInformation.xsd",
                                                                      "CustomerId"));
                                 
                                        if (localCustomerId != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCustomerId));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("CustomerId cannot be null!!");
                                        }
                                    } if (localTypeOfTxnTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/inq/GetCustomerInformation.xsd",
                                                                      "TypeOfTxn"));
                                 
                                        if (localTypeOfTxn != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTypeOfTxn));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("TypeOfTxn cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static Customer_type0E parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            Customer_type0E object =
                new Customer_type0E();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"Customer_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (Customer_type0E)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/inq/GetCustomerInformation.xsd","CustomerId").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"CustomerId" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCustomerId(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/inq/GetCustomerInformation.xsd","TypeOfTxn").equals(reader.getName())){
                                
                                    nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
                                    if ("true".equals(nillableValue) || "1".equals(nillableValue)){
                                        throw new org.apache.axis2.databinding.ADBException("The element: "+"TypeOfTxn" +"  cannot be null");
                                    }
                                    

                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTypeOfTxn(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class GetCustomerInformationReqMsg
        implements org.apache.axis2.databinding.ADBBean{
        
                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://www.adcb.com/crm/inq/GetCustomerInformation.xsd",
                "GetCustomerInformationReqMsg",
                "ns3");

            

                        /**
                        * field for Header
                        */

                        
                                    protected HeaderType localHeader ;
                                

                           /**
                           * Auto generated getter method
                           * @return HeaderType
                           */
                           public  HeaderType getHeader(){
                               return localHeader;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Header
                               */
                               public void setHeader(HeaderType param){
                            
                                            this.localHeader=param;
                                    

                               }
                            

                        /**
                        * field for GetCustomerInformationReq
                        */

                        
                                    protected GetCustomerInformationReq_type0 localGetCustomerInformationReq ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localGetCustomerInformationReqTracker = false ;

                           public boolean isGetCustomerInformationReqSpecified(){
                               return localGetCustomerInformationReqTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return GetCustomerInformationReq_type0
                           */
                           public  GetCustomerInformationReq_type0 getGetCustomerInformationReq(){
                               return localGetCustomerInformationReq;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param GetCustomerInformationReq
                               */
                               public void setGetCustomerInformationReq(GetCustomerInformationReq_type0 param){
                            localGetCustomerInformationReqTracker = param != null;
                                   
                                            this.localGetCustomerInformationReq=param;
                                    

                               }
                            

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
               return factory.createOMElement(dataSource,MY_QNAME);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/crm/inq/GetCustomerInformation.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":GetCustomerInformationReqMsg",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "GetCustomerInformationReqMsg",
                           xmlWriter);
                   }

               
                   }
               
                                            if (localHeader==null){
                                                 throw new org.apache.axis2.databinding.ADBException("header cannot be null!!");
                                            }
                                           localHeader.serialize(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","header"),
                                               xmlWriter);
                                         if (localGetCustomerInformationReqTracker){
                                            if (localGetCustomerInformationReq==null){
                                                 throw new org.apache.axis2.databinding.ADBException("GetCustomerInformationReq cannot be null!!");
                                            }
                                           localGetCustomerInformationReq.serialize(new javax.xml.namespace.QName("http://www.adcb.com/crm/inq/GetCustomerInformation.xsd","GetCustomerInformationReq"),
                                               xmlWriter);
                                        }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/crm/inq/GetCustomerInformation.xsd")){
                return "ns3";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd",
                                                                      "header"));
                            
                            
                                    if (localHeader==null){
                                         throw new org.apache.axis2.databinding.ADBException("header cannot be null!!");
                                    }
                                    elementList.add(localHeader);
                                 if (localGetCustomerInformationReqTracker){
                            elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/inq/GetCustomerInformation.xsd",
                                                                      "GetCustomerInformationReq"));
                            
                            
                                    if (localGetCustomerInformationReq==null){
                                         throw new org.apache.axis2.databinding.ADBException("GetCustomerInformationReq cannot be null!!");
                                    }
                                    elementList.add(localGetCustomerInformationReq);
                                }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static GetCustomerInformationReqMsg parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            GetCustomerInformationReqMsg object =
                new GetCustomerInformationReqMsg();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"GetCustomerInformationReqMsg".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (GetCustomerInformationReqMsg)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/esb/common/header.xsd","header").equals(reader.getName())){
                                
                                                object.setHeader(HeaderType.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                                }
                            
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/inq/GetCustomerInformation.xsd","GetCustomerInformationReq").equals(reader.getName())){
                                
                                                object.setGetCustomerInformationReq(GetCustomerInformationReq_type0.Factory.parse(reader));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
        public static class ListOfCustomer_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = listOfCustomer_type0
                Namespace URI = http://www.adcb.com/crm/common/CustomerInformation.xsd
                Namespace Prefix = ns2
                */
            

                        /**
                        * field for Customer
                        * This was an Array!
                        */

                        
                                    protected Customer_type0[] localCustomer ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCustomerTracker = false ;

                           public boolean isCustomerSpecified(){
                               return localCustomerTracker;
                           }

                           

                           /**
                           * Auto generated getter method
                           * @return Customer_type0[]
                           */
                           public  Customer_type0[] getCustomer(){
                               return localCustomer;
                           }

                           
                        


                               
                              /**
                               * validate the array for Customer
                               */
                              protected void validateCustomer(Customer_type0[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param Customer
                              */
                              public void setCustomer(Customer_type0[] param){
                              
                                   validateCustomer(param);

                               localCustomerTracker = param != null;
                                      
                                      this.localCustomer=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param Customer_type0
                             */
                             public void addCustomer(Customer_type0 param){
                                   if (localCustomer == null){
                                   localCustomer = new Customer_type0[]{};
                                   }

                            
                                 //update the setting tracker
                                localCustomerTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localCustomer);
                               list.add(param);
                               this.localCustomer =
                             (Customer_type0[])list.toArray(
                            new Customer_type0[list.size()]);

                             }
                             

     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
               return factory.createOMElement(dataSource,parentQName);
            
        }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       javax.xml.stream.XMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               javax.xml.stream.XMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();
                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.adcb.com/crm/common/CustomerInformation.xsd");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":listOfCustomer_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "listOfCustomer_type0",
                           xmlWriter);
                   }

               
                   }
                if (localCustomerTracker){
                                       if (localCustomer!=null){
                                            for (int i = 0;i < localCustomer.length;i++){
                                                if (localCustomer[i] != null){
                                                 localCustomer[i].serialize(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","customer"),
                                                           xmlWriter);
                                                } else {
                                                   
                                                        // we don't have to do any thing since minOccures is zero
                                                    
                                                }

                                            }
                                     } else {
                                        
                                               throw new org.apache.axis2.databinding.ADBException("customer cannot be null!!");
                                        
                                    }
                                 }
                    xmlWriter.writeEndElement();
               

        }

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adcb.com/crm/common/CustomerInformation.xsd")){
                return "ns2";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        /**
         * Utility method to write an element start tag.
         */
        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
            if (writerPrefix != null) {
                xmlWriter.writeStartElement(namespace, localPart);
            } else {
                if (namespace.length() == 0) {
                    prefix = "";
                } else if (prefix == null) {
                    prefix = generatePrefix(namespace);
                }

                xmlWriter.writeStartElement(prefix, localPart, namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
        }
        
        /**
         * Util method to write an attribute with the ns prefix
         */
        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (xmlWriter.getPrefix(namespace) == null) {
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            xmlWriter.writeAttribute(namespace,attName,attValue);
        }

        /**
         * Util method to write an attribute without the ns prefix
         */
        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
            if (namespace.equals("")) {
                xmlWriter.writeAttribute(attName,attValue);
            } else {
                registerPrefix(xmlWriter, namespace);
                xmlWriter.writeAttribute(namespace,attName,attValue);
            }
        }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


        /**
         * Register a namespace prefix
         */
        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
            java.lang.String prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = generatePrefix(namespace);
                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
                while (true) {
                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
                    if (uri == null || uri.length() == 0) {
                        break;
                    }
                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                }
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            }
            return prefix;
        }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localCustomerTracker){
                             if (localCustomer!=null) {
                                 for (int i = 0;i < localCustomer.length;i++){

                                    if (localCustomer[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd",
                                                                          "customer"));
                                         elementList.add(localCustomer[i]);
                                    } else {
                                        
                                                // nothing to do
                                            
                                    }

                                 }
                             } else {
                                 
                                        throw new org.apache.axis2.databinding.ADBException("customer cannot be null!!");
                                    
                             }

                        }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static ListOfCustomer_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            ListOfCustomer_type0 object =
                new ListOfCustomer_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"listOfCustomer_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (ListOfCustomer_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                
                    
                    reader.next();
                
                        java.util.ArrayList list1 = new java.util.ArrayList();
                    
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","customer").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    list1.add(Customer_type0.Factory.parse(reader));
                                                                
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone1 = false;
                                                        while(!loopDone1){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone1 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://www.adcb.com/crm/common/CustomerInformation.xsd","customer").equals(reader.getName())){
                                                                    list1.add(Customer_type0.Factory.parse(reader));
                                                                        
                                                                }else{
                                                                    loopDone1 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array
                                                        
                                                        object.setCustomer((Customer_type0[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                Customer_type0.class,
                                                                list1));
                                                            
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
    
            private  org.apache.axiom.om.OMElement  toOM(com.newgen.dscop.stub.InqCustomerInformationStub.GetCustomerInformationReqMsg param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.newgen.dscop.stub.InqCustomerInformationStub.GetCustomerInformationReqMsg.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.newgen.dscop.stub.InqCustomerInformationStub.GetCustomerInformationResMsg param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.newgen.dscop.stub.InqCustomerInformationStub.GetCustomerInformationResMsg.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.newgen.dscop.stub.InqCustomerInformationStub.GetCustomerInformationReqMsg param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.newgen.dscop.stub.InqCustomerInformationStub.GetCustomerInformationReqMsg.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             


        /**
        *  get the default envelope
        */
        private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory){
        return factory.getDefaultEnvelope();
        }


        private  java.lang.Object fromOM(
        org.apache.axiom.om.OMElement param,
        java.lang.Class type,
        java.util.Map extraNamespaces) throws org.apache.axis2.AxisFault{

        try {
        
                if (com.newgen.dscop.stub.InqCustomerInformationStub.GetCustomerInformationReqMsg.class.equals(type)){
                
                           return com.newgen.dscop.stub.InqCustomerInformationStub.GetCustomerInformationReqMsg.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.newgen.dscop.stub.InqCustomerInformationStub.GetCustomerInformationResMsg.class.equals(type)){
                
                           return com.newgen.dscop.stub.InqCustomerInformationStub.GetCustomerInformationResMsg.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
        } catch (java.lang.Exception e) {
        throw org.apache.axis2.AxisFault.makeFault(e);
        }
           return null;
        }



    
   }
   